

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Nov 25 13:44:33 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    90                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    91  0000                     
    92                           ; Version 2.10
    93                           ; Generated 31/07/2019 GMT
    94                           ; 
    95                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    96                           ; All rights reserved.
    97                           ; 
    98                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    99                           ; 
   100                           ; Redistribution and use in source and binary forms, with or without modification, are
   101                           ; permitted provided that the following conditions are met:
   102                           ; 
   103                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   104                           ;        conditions and the following disclaimer.
   105                           ; 
   106                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   107                           ;        of conditions and the following disclaimer in the documentation and/or other
   108                           ;        materials provided with the distribution.
   109                           ; 
   110                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   111                           ;        software without specific prior written permission.
   112                           ; 
   113                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   114                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   115                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   116                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   117                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   118                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   119                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   120                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   121                           ; 
   122                           ; 
   123                           ; Code-generator required, PIC18F8722 Definitions
   124                           ; 
   125                           ; SFR Addresses
   126  0000                     
   127                           	psect	idataCOMRAM
   128  003866                     __pidataCOMRAM:
   129                           	opt callstack 0
   130                           
   131                           ;initializer for _idle_flag
   132  003866  01                 	db	1
   133                           
   134                           	psect	idataBANK0
   135  0037EC                     __pidataBANK0:
   136                           	opt callstack 0
   137                           
   138                           ;initializer for _timer_list
   139  0037EC  00                 	db	0
   140  0037ED  01                 	db	1
   141  0037EE  02                 	db	2
   142  0037EF  03                 	db	3
   143  0037F0  04                 	db	4
   144                           
   145                           ;initializer for _capacity
   146  0037F1  000A               	dw	10
   147                           
   148                           ;initializer for _TimeOut
   149  0037F3  1770               	dw	6000
   150                           
   151                           ;initializer for _Time
   152  0037F5  000A               	dw	10
   153                           
   154                           ;initializer for _secondReadRB0
   155  0037F7  01                 	db	1
   156                           
   157                           ;initializer for _firstReadRB0
   158  0037F8  01                 	db	1
   159                           
   160                           ;initializer for _secondReadRA5
   161  0037F9  01                 	db	1
   162                           
   163                           ;initializer for _firstReadRA5
   164  0037FA  01                 	db	1
   165                           
   166                           ;initializer for _task
   167  0037FB  01                 	db	1
   168                           
   169                           ;initializer for _MAX_HUMID
   170  0037FC  5A                 	db	90
   171                           
   172                           ;initializer for _MAX_HEAT
   173  0037FD  32                 	db	50
   174  0000                     _TMR0	set	4054
   175  0000                     _PORTBbits	set	3969
   176  0000                     _PORTAbits	set	3968
   177  0000                     _PORTDbits	set	3971
   178  0000                     _ADCON1	set	4033
   179  0000                     _TRISBbits	set	3987
   180  0000                     _TRISDbits	set	3989
   181  0000                     _LATDbits	set	3980
   182  0000                     _T1CONbits	set	4045
   183  0000                     _T0CONbits	set	4053
   184  0000                     _PIR1bits	set	3998
   185  0000                     _PIE1bits	set	3997
   186  0000                     _TMR1L	set	4046
   187  0000                     _TMR1H	set	4047
   188  0000                     _T1CON	set	4045
   189  0000                     _T0CON	set	4053
   190  0000                     _INTCONbits	set	4082
   191  0000                     _OSCTUNE	set	3995
   192  0000                     _OSCCON	set	4051
   193  0000                     _TRISC	set	3988
   194  0000                     _LATC	set	3979
   195  0000                     _TRISB	set	3987
   196  0000                     _LATB	set	3978
   197  0000                     _TRISA	set	3986
   198  0000                     _LATA	set	3977
   199  0000                     _LATCbits	set	3979
   200  0000                     _LATAbits	set	3977
   201  0000                     _TRISCbits	set	3988
   202  0000                     _TRISAbits	set	3986
   203  0000                     _LATFbits	set	3982
   204  0000                     _TRISFbits	set	3991
   205                           
   206                           	psect	smallconst
   207  001000                     __psmallconst:
   208                           	opt callstack 0
   209  001000  00                 	db	0
   210  001001                     STR_9:
   211  001001  20                 	db	32
   212  001002  20                 	db	32
   213  001003  20                 	db	32
   214  001004  54                 	db	84	;'T'
   215  001005  69                 	db	105	;'i'
   216  001006  6D                 	db	109	;'m'
   217  001007  65                 	db	101	;'e'
   218  001008  20                 	db	32
   219  001009  3D                 	db	61	;'='
   220  00100A  20                 	db	32
   221  00100B  30                 	db	48	;'0'
   222  00100C  30                 	db	48	;'0'
   223  00100D  20                 	db	32
   224  00100E  20                 	db	32
   225  00100F  20                 	db	32
   226  001010  20                 	db	32
   227  001011  20                 	db	32
   228  001012  20                 	db	32
   229  001013  00                 	db	0
   230  001014                     STR_2:
   231  001014  20                 	db	32
   232  001015  20                 	db	32
   233  001016  20                 	db	32
   234  001017  20                 	db	32
   235  001018  20                 	db	32
   236  001019  20                 	db	32
   237  00101A  20                 	db	32
   238  00101B  20                 	db	32
   239  00101C  20                 	db	32
   240  00101D  20                 	db	32
   241  00101E  20                 	db	32
   242  00101F  20                 	db	32
   243  001020  20                 	db	32
   244  001021  20                 	db	32
   245  001022  20                 	db	32
   246  001023  20                 	db	32
   247  001024  00                 	db	0
   248  001025                     STR_5:
   249  001025  20                 	db	32
   250  001026  20                 	db	32
   251  001027  20                 	db	32
   252  001028  50                 	db	80	;'P'
   253  001029  55                 	db	85	;'U'
   254  00102A  4D                 	db	77	;'M'
   255  00102B  50                 	db	80	;'P'
   256  00102C  20                 	db	32
   257  00102D  4F                 	db	79	;'O'
   258  00102E  4E                 	db	78	;'N'
   259  00102F  20                 	db	32
   260  001030  20                 	db	32
   261  001031  20                 	db	32
   262  001032  20                 	db	32
   263  001033  20                 	db	32
   264  001034  20                 	db	32
   265  001035  00                 	db	0
   266  001036                     STR_3:
   267  001036  20                 	db	32
   268  001037  20                 	db	32
   269  001038  20                 	db	32
   270  001039  48                 	db	72	;'H'
   271  00103A  45                 	db	69	;'E'
   272  00103B  41                 	db	65	;'A'
   273  00103C  54                 	db	84	;'T'
   274  00103D  45                 	db	69	;'E'
   275  00103E  52                 	db	82	;'R'
   276  00103F  20                 	db	32
   277  001040  4F                 	db	79	;'O'
   278  001041  4E                 	db	78	;'N'
   279  001042  20                 	db	32
   280  001043  20                 	db	32
   281  001044  20                 	db	32
   282  001045  20                 	db	32
   283  001046  00                 	db	0
   284  001047                     STR_1:
   285  001047  20                 	db	32
   286  001048  20                 	db	32
   287  001049  20                 	db	32
   288  00104A  49                 	db	73	;'I'
   289  00104B  44                 	db	68	;'D'
   290  00104C  4C                 	db	76	;'L'
   291  00104D  45                 	db	69	;'E'
   292  00104E  20                 	db	32
   293  00104F  53                 	db	83	;'S'
   294  001050  54                 	db	84	;'T'
   295  001051  41                 	db	65	;'A'
   296  001052  54                 	db	84	;'T'
   297  001053  45                 	db	69	;'E'
   298  001054  20                 	db	32
   299  001055  20                 	db	32
   300  001056  20                 	db	32
   301  001057  00                 	db	0
   302  001058                     STR_6:
   303  001058  54                 	db	84	;'T'
   304  001059  20                 	db	32
   305  00105A  3D                 	db	61	;'='
   306  00105B  20                 	db	32
   307  00105C  30                 	db	48	;'0'
   308  00105D  30                 	db	48	;'0'
   309  00105E  20                 	db	32
   310  00105F  48                 	db	72	;'H'
   311  001060  20                 	db	32
   312  001061  3D                 	db	61	;'='
   313  001062  20                 	db	32
   314  001063  30                 	db	48	;'0'
   315  001064  30                 	db	48	;'0'
   316  001065  00                 	db	0
   317  001066                     STR_4:
   318  001066  54                 	db	84	;'T'
   319  001067  20                 	db	32
   320  001068  3D                 	db	61	;'='
   321  001069  20                 	db	32
   322  00106A  20                 	db	32
   323  00106B  20                 	db	32
   324  00106C  20                 	db	32
   325  00106D  48                 	db	72	;'H'
   326  00106E  20                 	db	32
   327  00106F  3D                 	db	61	;'='
   328  001070  20                 	db	32
   329  001071  00                 	db	0
   330  001072                     STR_7:
   331  001072  2D                 	db	45
   332  001073  2D                 	db	45
   333  001074  00                 	db	0
   334  0000                     
   335                           ; #config settings
   336  001075  00                 	db	0	; dummy byte at the end
   337  0000                     
   338                           	psect	cinit
   339  0032BC                     __pcinit:
   340                           	opt callstack 0
   341  0032BC                     start_initialization:
   342                           	opt callstack 0
   343  0032BC                     __initialization:
   344                           	opt callstack 0
   345                           
   346                           ; Initialize objects allocated to BANK0 (18 bytes)
   347                           ; load TBLPTR registers with __pidataBANK0
   348  0032BC  0EEC               	movlw	low __pidataBANK0
   349  0032BE  6EF6               	movwf	tblptrl,c
   350  0032C0  0E37               	movlw	high __pidataBANK0
   351  0032C2  6EF7               	movwf	tblptrh,c
   352  0032C4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   353  0032C6  6EF8               	movwf	tblptru,c
   354  0032C8  EE00  F0D6         	lfsr	0,__pdataBANK0
   355  0032CC  EE10 F012          	lfsr	1,18
   356  0032D0                     copy_data0:
   357  0032D0  0009               	tblrd		*+
   358  0032D2  CFF5 FFEE          	movff	tablat,postinc0
   359  0032D6  50E5               	movf	postdec1,w,c
   360  0032D8  50E1               	movf	fsr1l,w,c
   361  0032DA  E1FA               	bnz	copy_data0
   362                           
   363                           ; Initialize objects allocated to COMRAM (1 bytes)
   364                           ; load TBLPTR registers with __pidataCOMRAM
   365  0032DC  0E66               	movlw	low __pidataCOMRAM
   366  0032DE  6EF6               	movwf	tblptrl,c
   367  0032E0  0E38               	movlw	high __pidataCOMRAM
   368  0032E2  6EF7               	movwf	tblptrh,c
   369  0032E4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   370  0032E6  6EF8               	movwf	tblptru,c
   371  0032E8  0009               	tblrd		*+	;fetch initializer
   372  0032EA  CFF5 F05E          	movff	tablat,__pdataCOMRAM
   373                           
   374                           ; Clear objects allocated to BANK1 (250 bytes)
   375  0032EE  EE01  F000         	lfsr	0,__pbssBANK1
   376  0032F2  0EFA               	movlw	250
   377  0032F4                     clear_0:
   378  0032F4  6AEE               	clrf	postinc0,c
   379  0032F6  06E8               	decf	wreg,f,c
   380  0032F8  E1FD               	bnz	clear_0
   381                           
   382                           ; Clear objects allocated to BANK0 (82 bytes)
   383  0032FA  EE00  F060         	lfsr	0,__pbssBANK0
   384  0032FE  0E52               	movlw	82
   385  003300                     clear_1:
   386  003300  6AEE               	clrf	postinc0,c
   387  003302  06E8               	decf	wreg,f,c
   388  003304  E1FD               	bnz	clear_1
   389  003306                     end_of_initialization:
   390                           	opt callstack 0
   391  003306                     __end_of__initialization:
   392                           	opt callstack 0
   393  003306  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   394  003308  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   395  00330A  0100               	movlb	0
   396  00330C  EFFE  F018         	goto	_main	;jump to C main() function
   397                           
   398                           	psect	dataCOMRAM
   399  00005E                     __pdataCOMRAM:
   400                           	opt callstack 0
   401  00005E                     _idle_flag:
   402                           	opt callstack 0
   403  00005E                     	ds	1
   404                           
   405                           	psect	bssBANK0
   406  000060                     __pbssBANK0:
   407                           	opt callstack 0
   408  000060                     _executedList:
   409                           	opt callstack 0
   410  000060                     	ds	30
   411  00007E                     _timer_list_count:
   412                           	opt callstack 0
   413  00007E                     	ds	10
   414  000088                     _executed_list_index:
   415                           	opt callstack 0
   416  000088                     	ds	2
   417  00008A                     _head:
   418                           	opt callstack 0
   419  00008A                     	ds	2
   420  00008C                     _size:
   421                           	opt callstack 0
   422  00008C                     	ds	2
   423  00008E                     _humidity_dht11:
   424                           	opt callstack 0
   425  00008E                     	ds	2
   426  000090                     _temperature_dht11:
   427                           	opt callstack 0
   428  000090                     	ds	2
   429  000092                     _lastHumid:
   430                           	opt callstack 0
   431  000092                     	ds	2
   432  000094                     _lastTemp:
   433                           	opt callstack 0
   434  000094                     	ds	2
   435  000096                     _Humid:
   436                           	opt callstack 0
   437  000096                     	ds	2
   438  000098                     _Temp:
   439                           	opt callstack 0
   440  000098                     	ds	2
   441  00009A                     _demoHumid:
   442                           	opt callstack 0
   443  00009A                     	ds	2
   444  00009C                     _demoTemp:
   445                           	opt callstack 0
   446  00009C                     	ds	2
   447  00009E                     _error:
   448                           	opt callstack 0
   449  00009E                     	ds	1
   450  00009F                     _response:
   451                           	opt callstack 0
   452  00009F                     	ds	1
   453  0000A0                     _checkSum:
   454                           	opt callstack 0
   455  0000A0                     	ds	1
   456  0000A1                     _Sum:
   457                           	opt callstack 0
   458  0000A1                     	ds	1
   459  0000A2                     _error_flag:
   460                           	opt callstack 0
   461  0000A2                     	ds	1
   462  0000A3                     _pump_flag:
   463                           	opt callstack 0
   464  0000A3                     	ds	1
   465  0000A4                     _heater_flag:
   466                           	opt callstack 0
   467  0000A4                     	ds	1
   468  0000A5                     _send_count:
   469                           	opt callstack 0
   470  0000A5                     	ds	1
   471  0000A6                     _demo_flag:
   472                           	opt callstack 0
   473  0000A6                     	ds	1
   474  0000A7                     _time_set_flag:
   475                           	opt callstack 0
   476  0000A7                     	ds	1
   477  0000A8                     _humid_set_flag:
   478                           	opt callstack 0
   479  0000A8                     	ds	1
   480  0000A9                     _temp_set_flag:
   481                           	opt callstack 0
   482  0000A9                     	ds	1
   483  0000AA                     _set_flag:
   484                           	opt callstack 0
   485  0000AA                     	ds	1
   486  0000AB                     _init_flag:
   487                           	opt callstack 0
   488  0000AB                     	ds	1
   489  0000AC                     _ready_2:
   490                           	opt callstack 0
   491  0000AC                     	ds	1
   492  0000AD                     _ready_1:
   493                           	opt callstack 0
   494  0000AD                     	ds	1
   495  0000AE                     _nextState:
   496                           	opt callstack 0
   497  0000AE                     	ds	1
   498  0000AF                     _isPress_2:
   499                           	opt callstack 0
   500  0000AF                     	ds	1
   501  0000B0                     _isPress_1:
   502                           	opt callstack 0
   503  0000B0                     	ds	1
   504  0000B1                     _id:
   505                           	opt callstack 0
   506  0000B1                     	ds	1
   507                           
   508                           	psect	dataBANK0
   509  0000D6                     __pdataBANK0:
   510                           	opt callstack 0
   511  0000D6                     _timer_list:
   512                           	opt callstack 0
   513  0000D6                     	ds	5
   514  0000DB                     _capacity:
   515                           	opt callstack 0
   516  0000DB                     	ds	2
   517  0000DD                     _TimeOut:
   518                           	opt callstack 0
   519  0000DD                     	ds	2
   520  0000DF                     _Time:
   521                           	opt callstack 0
   522  0000DF                     	ds	2
   523  0000E1                     _secondReadRB0:
   524                           	opt callstack 0
   525  0000E1                     	ds	1
   526  0000E2                     _firstReadRB0:
   527                           	opt callstack 0
   528  0000E2                     	ds	1
   529  0000E3                     _secondReadRA5:
   530                           	opt callstack 0
   531  0000E3                     	ds	1
   532  0000E4                     _firstReadRA5:
   533                           	opt callstack 0
   534  0000E4                     	ds	1
   535  0000E5                     _task:
   536                           	opt callstack 0
   537  0000E5                     	ds	1
   538  0000E6                     _MAX_HUMID:
   539                           	opt callstack 0
   540  0000E6                     	ds	1
   541  0000E7                     _MAX_HEAT:
   542                           	opt callstack 0
   543  0000E7                     	ds	1
   544                           
   545                           	psect	bssBANK1
   546  000100                     __pbssBANK1:
   547                           	opt callstack 0
   548  000100                     _elementList:
   549                           	opt callstack 0
   550  000100                     	ds	240
   551  0001F0                     _timer_millis_sec:
   552                           	opt callstack 0
   553  0001F0                     	ds	10
   554                           
   555                           	psect	cstackBANK2
   556  000200                     __pcstackBANK2:
   557                           	opt callstack 0
   558  000200                     ??_InitializeElements:
   559  000200                     ??_readDHT:
   560  000200                     LCDPutChar@ch:
   561                           	opt callstack 0
   562  000200                     LCDPutInst@ch:
   563                           	opt callstack 0
   564  000200                     ___awdiv@counter:
   565                           	opt callstack 0
   566                           
   567                           ; 1 bytes @ 0x0
   568  000200                     	ds	1
   569  000201                     ??_LCDInit:
   570  000201                     LCDMoveCursor@pos:
   571                           	opt callstack 0
   572  000201                     ___awdiv@sign:
   573                           	opt callstack 0
   574  000201                     LCDPutStr@ptr:
   575                           	opt callstack 0
   576                           
   577                           ; 2 bytes @ 0x1
   578  000201                     	ds	1
   579  000202                     LCDMoveCursor@line:
   580                           	opt callstack 0
   581  000202                     readDHT@test:
   582                           	opt callstack 0
   583  000202                     ___awdiv@quotient:
   584                           	opt callstack 0
   585                           
   586                           ; 2 bytes @ 0x2
   587  000202                     	ds	1
   588  000203                     LCDMoveCursor@position:
   589                           	opt callstack 0
   590  000203                     dispatchISR@pos:
   591                           	opt callstack 0
   592  000203                     readDHT@timeOut:
   593                           	opt callstack 0
   594                           
   595                           ; 2 bytes @ 0x3
   596  000203                     	ds	1
   597  000204                     _LCDMoveCursor$413:
   598                           	opt callstack 0
   599                           
   600                           ; 2 bytes @ 0x4
   601  000204                     	ds	2
   602  000206                     PrintTempHumid@val:
   603                           	opt callstack 0
   604                           
   605                           ; 2 bytes @ 0x6
   606  000206                     	ds	2
   607  000208                     ??_FSM:
   608  000208                     InitializeElements@i:
   609                           	opt callstack 0
   610                           
   611                           ; 2 bytes @ 0x8
   612  000208                     	ds	2
   613                           
   614                           	psect	cstackBANK1
   615  0001FA                     __pcstackBANK1:
   616                           	opt callstack 0
   617  0001FA                     ??_CheckTemp:
   618  0001FA                     ??_CheckHumid:
   619  0001FA                     ??_getByte:
   620  0001FA                     ??_test:
   621  0001FA                     ?___wmul:
   622                           	opt callstack 0
   623  0001FA                     ?___awdiv:
   624                           	opt callstack 0
   625  0001FA                     ?___awmod:
   626                           	opt callstack 0
   627  0001FA                     SendByteBBSPI@output:
   628                           	opt callstack 0
   629  0001FA                     TMR_Initialize@timer_name:
   630                           	opt callstack 0
   631  0001FA                     TMR_StartTimer@timer_name:
   632                           	opt callstack 0
   633  0001FA                     ___wmul@multiplier:
   634                           	opt callstack 0
   635  0001FA                     ___awdiv@dividend:
   636                           	opt callstack 0
   637  0001FA                     ___awmod@dividend:
   638                           	opt callstack 0
   639                           
   640                           ; 2 bytes @ 0x0
   641  0001FA                     	ds	1
   642  0001FB                     SendByteBBSPI@bitcount:
   643                           	opt callstack 0
   644                           
   645                           ; 1 bytes @ 0x1
   646  0001FB                     	ds	1
   647  0001FC                     ??_TMR_Initialize:
   648  0001FC                     ??_TMR_StartTimer:
   649  0001FC                     SendByteBBSPI@input:
   650                           	opt callstack 0
   651  0001FC                     getByte@i:
   652                           	opt callstack 0
   653  0001FC                     ___wmul@multiplicand:
   654                           	opt callstack 0
   655  0001FC                     ___awdiv@divisor:
   656                           	opt callstack 0
   657  0001FC                     ___awmod@divisor:
   658                           	opt callstack 0
   659                           
   660                           ; 2 bytes @ 0x2
   661  0001FC                     	ds	1
   662  0001FD                     Port_BBSPIInit@port_dir:
   663                           	opt callstack 0
   664  0001FD                     WritePort_BBSPI@a:
   665                           	opt callstack 0
   666  0001FD                     getByte@timeOut:
   667                           	opt callstack 0
   668                           
   669                           ; 2 bytes @ 0x3
   670  0001FD                     	ds	1
   671  0001FE                     WritePort_BBSPI@port_add:
   672                           	opt callstack 0
   673  0001FE                     ___awmod@counter:
   674                           	opt callstack 0
   675  0001FE                     ___wmul@product:
   676                           	opt callstack 0
   677                           
   678                           ; 2 bytes @ 0x4
   679  0001FE                     	ds	1
   680  0001FF                     ??_LCDPutInst:
   681  0001FF                     ??_LCDPutChar:
   682  0001FF                     getByte@j:
   683                           	opt callstack 0
   684  0001FF                     ___awmod@sign:
   685                           	opt callstack 0
   686                           
   687                           ; 1 bytes @ 0x5
   688  0001FF                     	ds	1
   689  000200                     
   690                           ; 1 bytes @ 0x6
   691                           
   692                           	psect	cstackBANK0
   693  0000B2                     __pcstackBANK0:
   694                           	opt callstack 0
   695  0000B2                     	ds	10
   696  0000BC                     _Task_Init$2651:
   697                           	opt callstack 0
   698                           
   699                           ; 8 bytes @ 0xA
   700  0000BC                     	ds	8
   701  0000C4                     _Task_Init$2650:
   702                           	opt callstack 0
   703                           
   704                           ; 8 bytes @ 0x12
   705  0000C4                     	ds	8
   706  0000CC                     ??_global_timer:
   707                           
   708                           ; 1 bytes @ 0x1A
   709  0000CC                     	ds	10
   710                           
   711                           	psect	cstackCOMRAM
   712  000001                     __pcstackCOMRAM:
   713                           	opt callstack 0
   714  000001                     ??i2_CheckHumid:
   715  000001                     ??i2_CheckTemp:
   716  000001                     ?i2___wmul:
   717                           	opt callstack 0
   718  000001                     ?i2___awdiv:
   719                           	opt callstack 0
   720  000001                     ?i2___awmod:
   721                           	opt callstack 0
   722  000001                     i2SendByteBBSPI@output:
   723                           	opt callstack 0
   724  000001                     TMR_StopTimer@timer_name:
   725                           	opt callstack 0
   726  000001                     i2TMR_StartTimer@timer_name:
   727                           	opt callstack 0
   728  000001                     i2___wmul@multiplier:
   729                           	opt callstack 0
   730  000001                     i2___awdiv@dividend:
   731                           	opt callstack 0
   732  000001                     i2___awmod@dividend:
   733                           	opt callstack 0
   734                           
   735                           ; 2 bytes @ 0x0
   736  000001                     	ds	1
   737  000002                     i2SendByteBBSPI@bitcount:
   738                           	opt callstack 0
   739                           
   740                           ; 1 bytes @ 0x1
   741  000002                     	ds	1
   742  000003                     ??_TMR_StopTimer:
   743  000003                     ??i2_TMR_StartTimer:
   744  000003                     i2SendByteBBSPI@input:
   745                           	opt callstack 0
   746  000003                     i2___wmul@multiplicand:
   747                           	opt callstack 0
   748  000003                     i2___awdiv@divisor:
   749                           	opt callstack 0
   750  000003                     i2___awmod@divisor:
   751                           	opt callstack 0
   752                           
   753                           ; 2 bytes @ 0x2
   754  000003                     	ds	1
   755  000004                     i2WritePort_BBSPI@a:
   756                           	opt callstack 0
   757                           
   758                           ; 1 bytes @ 0x3
   759  000004                     	ds	1
   760  000005                     i2WritePort_BBSPI@port_add:
   761                           	opt callstack 0
   762  000005                     i2___awdiv@counter:
   763                           	opt callstack 0
   764  000005                     i2___awmod@counter:
   765                           	opt callstack 0
   766  000005                     i2___wmul@product:
   767                           	opt callstack 0
   768                           
   769                           ; 2 bytes @ 0x4
   770  000005                     	ds	1
   771  000006                     ??i2_LCDPutChar:
   772  000006                     ??i2_LCDPutInst:
   773  000006                     i2___awdiv@sign:
   774                           	opt callstack 0
   775  000006                     i2___awmod@sign:
   776                           	opt callstack 0
   777                           
   778                           ; 1 bytes @ 0x5
   779  000006                     	ds	1
   780  000007                     i2LCDPutChar@ch:
   781                           	opt callstack 0
   782  000007                     i2LCDPutInst@ch:
   783                           	opt callstack 0
   784  000007                     i2___awdiv@quotient:
   785                           	opt callstack 0
   786  000007                     AddExecutedTask@data:
   787                           	opt callstack 0
   788  000007                     AddElement@delay:
   789                           	opt callstack 0
   790                           
   791                           ; 8 bytes @ 0x6
   792  000007                     	ds	1
   793  000008                     i2LCDMoveCursor@pos:
   794                           	opt callstack 0
   795  000008                     i2LCDPutStr@ptr:
   796                           	opt callstack 0
   797                           
   798                           ; 2 bytes @ 0x7
   799  000008                     	ds	1
   800  000009                     i2LCDMoveCursor@line:
   801                           	opt callstack 0
   802                           
   803                           ; 1 bytes @ 0x8
   804  000009                     	ds	1
   805  00000A                     i2_LCDMoveCursor$413:
   806                           	opt callstack 0
   807                           
   808                           ; 2 bytes @ 0x9
   809  00000A                     	ds	2
   810  00000C                     i2LCDMoveCursor@position:
   811                           	opt callstack 0
   812                           
   813                           ; 1 bytes @ 0xB
   814  00000C                     	ds	1
   815  00000D                     AddExecutedTask@pos:
   816                           	opt callstack 0
   817                           
   818                           ; 2 bytes @ 0xC
   819  00000D                     	ds	2
   820  00000F                     AddElement@period:
   821                           	opt callstack 0
   822                           
   823                           ; 8 bytes @ 0xE
   824  00000F                     	ds	8
   825  000017                     AddElement@data:
   826                           	opt callstack 0
   827                           
   828                           ; 3 bytes @ 0x16
   829  000017                     	ds	3
   830  00001A                     AddElement@task_id:
   831                           	opt callstack 0
   832                           
   833                           ; 2 bytes @ 0x19
   834  00001A                     	ds	2
   835  00001C                     ??_AddElement:
   836                           
   837                           ; 1 bytes @ 0x1B
   838  00001C                     	ds	16
   839  00002C                     AddElement@next_index:
   840                           	opt callstack 0
   841                           
   842                           ; 2 bytes @ 0x2B
   843  00002C                     	ds	2
   844  00002E                     AddElement@pos:
   845                           	opt callstack 0
   846                           
   847                           ; 2 bytes @ 0x2D
   848  00002E                     	ds	2
   849  000030                     AddElement@index:
   850                           	opt callstack 0
   851                           
   852                           ; 2 bytes @ 0x2F
   853  000030                     	ds	2
   854  000032                     ??_deQueue:
   855  000032                     ?_register_timer:
   856                           	opt callstack 0
   857  000032                     register_timer@delay:
   858                           	opt callstack 0
   859                           
   860                           ; 8 bytes @ 0x31
   861  000032                     	ds	8
   862  00003A                     register_timer@period:
   863                           	opt callstack 0
   864  00003A                     _deQueue$2646:
   865                           	opt callstack 0
   866                           
   867                           ; 8 bytes @ 0x39
   868  00003A                     	ds	8
   869  000042                     register_timer@data:
   870                           	opt callstack 0
   871  000042                     _deQueue$2647:
   872                           	opt callstack 0
   873                           
   874                           ; 8 bytes @ 0x41
   875  000042                     	ds	3
   876  000045                     ??_register_timer:
   877                           
   878                           ; 1 bytes @ 0x44
   879  000045                     	ds	1
   880  000046                     register_timer@res:
   881                           	opt callstack 0
   882                           
   883                           ; 2 bytes @ 0x45
   884  000046                     	ds	2
   885  000048                     
   886                           ; 1 bytes @ 0x47
   887  000048                     	ds	2
   888  00004A                     _deQueue$2648:
   889                           	opt callstack 0
   890                           
   891                           ; 3 bytes @ 0x49
   892  00004A                     	ds	3
   893  00004D                     _deQueue$2649:
   894                           	opt callstack 0
   895                           
   896                           ; 2 bytes @ 0x4C
   897  00004D                     	ds	2
   898  00004F                     deQueue@pos:
   899                           	opt callstack 0
   900                           
   901                           ; 2 bytes @ 0x4E
   902  00004F                     	ds	2
   903  000051                     
   904                           ; 1 bytes @ 0x50
   905  000051                     	ds	8
   906  000059                     _UpdateElements$2645:
   907                           	opt callstack 0
   908                           
   909                           ; 3 bytes @ 0x58
   910  000059                     	ds	3
   911  00005C                     UpdateElements@pos:
   912                           	opt callstack 0
   913                           
   914                           ; 2 bytes @ 0x5B
   915  00005C                     	ds	2
   916                           
   917 ;;
   918 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   919 ;;
   920 ;; *************** function _main *****************
   921 ;; Defined at:
   922 ;;		line 36 in file "main.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;		None
   925 ;; Auto vars:     Size  Location     Type
   926 ;;		None
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      void 
   929 ;; Registers used:
   930 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   940 ;;Total ram usage:        0 bytes
   941 ;; Hardware stack levels required when called:   14
   942 ;; This function calls:
   943 ;;		_FSM
   944 ;;		_PrintIdle
   945 ;;		_System_Initialize
   946 ;;		_dispatchISR
   947 ;; This function is called by:
   948 ;;		Startup code after reset
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952                           	psect	text0
   953  0031FC                     __ptext0:
   954                           	opt callstack 0
   955  0031FC                     _main:
   956                           	opt callstack 17
   957  0031FC                     
   958                           ;main.c: 37:     System_Initialize();
   959  0031FC  ECC6  F01A         	call	_System_Initialize	;wreg free
   960  003200                     l5301:
   961                           
   962                           ;main.c: 39:         if(init_flag == 0) {
   963  003200  0100               	movlb	0	; () banked
   964  003202  51AB               	movf	_init_flag& (0+255),w,b
   965  003204  A4D8               	btfss	status,2,c
   966  003206  EF07  F019         	goto	u3951
   967  00320A  EF09  F019         	goto	u3950
   968  00320E                     u3951:
   969  00320E  EF17  F019         	goto	l5311
   970  003212                     u3950:
   971  003212                     
   972                           ; BSR set to: 0
   973                           ;main.c: 40:             if(ready_2 == 1){
   974  003212  05AC               	decf	_ready_2& (0+255),w,b
   975  003214  A4D8               	btfss	status,2,c
   976  003216  EF0F  F019         	goto	u3961
   977  00321A  EF11  F019         	goto	u3960
   978  00321E                     u3961:
   979  00321E  EF17  F019         	goto	l5311
   980  003222                     u3960:
   981  003222                     
   982                           ; BSR set to: 0
   983                           ;main.c: 41:                 PrintIdle();
   984  003222  EC1A  F01B         	call	_PrintIdle	;wreg free
   985  003226                     
   986                           ;main.c: 42:                 LATDbits.LATD7 = 1;
   987  003226  8E8C               	bsf	140,7,c	;volatile
   988  003228                     
   989                           ;main.c: 43:                 init_flag = 1;
   990  003228  0E01               	movlw	1
   991  00322A  0100               	movlb	0	; () banked
   992  00322C  6FAB               	movwf	_init_flag& (0+255),b
   993  00322E                     l5311:
   994                           
   995                           ; BSR set to: 0
   996                           ;main.c: 46:         FSM();
   997  00322E  EC2A  F00F         	call	_FSM	;wreg free
   998                           
   999                           ;main.c: 47:         if(idle_flag == 0 && demo_flag == 0) dispatchISR();
  1000  003232  505E               	movf	_idle_flag^0,w,c
  1001  003234  A4D8               	btfss	status,2,c
  1002  003236  EF1F  F019         	goto	u3971
  1003  00323A  EF21  F019         	goto	u3970
  1004  00323E                     u3971:
  1005  00323E  EF00  F019         	goto	l5301
  1006  003242                     u3970:
  1007  003242  0100               	movlb	0	; () banked
  1008  003244  51A6               	movf	_demo_flag& (0+255),w,b
  1009  003246  A4D8               	btfss	status,2,c
  1010  003248  EF28  F019         	goto	u3981
  1011  00324C  EF2A  F019         	goto	u3980
  1012  003250                     u3981:
  1013  003250  EF00  F019         	goto	l5301
  1014  003254                     u3980:
  1015  003254                     
  1016                           ; BSR set to: 0
  1017  003254  EC42  F014         	call	_dispatchISR	;wreg free
  1018  003258  EF00  F019         	goto	l5301
  1019  00325C  EF07  F000         	goto	start
  1020  003260                     __end_of_main:
  1021                           	opt callstack 0
  1022                           
  1023 ;; *************** function _dispatchISR *****************
  1024 ;; Defined at:
  1025 ;;		line 135 in file "struct.c"
  1026 ;; Parameters:    Size  Location     Type
  1027 ;;		None
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;  pos             2    3[BANK2 ] int 
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  1    wreg      void 
  1032 ;; Registers used:
  1033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1040 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1041 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1042 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1043 ;;Total ram usage:        5 bytes
  1044 ;; Hardware stack levels used:    1
  1045 ;; Hardware stack levels required when called:    9
  1046 ;; This function calls:
  1047 ;;		_CheckHumid
  1048 ;;		_CheckTemp
  1049 ;;		_Heater_On
  1050 ;;		_Pump_On
  1051 ;;		___wmul
  1052 ;;		_test
  1053 ;; This function is called by:
  1054 ;;		_main
  1055 ;; This function uses a non-reentrant model
  1056 ;;
  1057                           
  1058                           	psect	text1
  1059  002884                     __ptext1:
  1060                           	opt callstack 0
  1061  002884                     _dispatchISR:
  1062                           	opt callstack 21
  1063  002884                     
  1064                           ;struct.c: 136:    int pos = 0;
  1065  002884  0E00               	movlw	0
  1066  002886  0102               	movlb	2	; () banked
  1067  002888  6F04               	movwf	(dispatchISR@pos+1)& (0+255),b
  1068  00288A  0E00               	movlw	0
  1069  00288C  6F03               	movwf	dispatchISR@pos& (0+255),b
  1070                           
  1071                           ;struct.c: 137:    while(executedList[pos] != ((void*)0) && pos <= 10 - 1) {
  1072  00288E  EF83  F014         	goto	l5245
  1073  002892                     l5239:
  1074                           
  1075                           ; BSR set to: 2
  1076                           ;struct.c: 138:         executedList[pos]();
  1077  002892  C203  F1FA         	movff	dispatchISR@pos,___wmul@multiplier
  1078  002896  C204  F1FB         	movff	dispatchISR@pos+1,___wmul@multiplier+1
  1079  00289A  0E00               	movlw	0
  1080  00289C  0101               	movlb	1	; () banked
  1081  00289E  6FFD               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1082  0028A0  0E03               	movlw	3
  1083  0028A2  6FFC               	movwf	___wmul@multiplicand& (0+255),b
  1084  0028A4  EC44  F01B         	call	___wmul	;wreg free
  1085  0028A8  0E60               	movlw	low _executedList
  1086  0028AA  0101               	movlb	1	; () banked
  1087  0028AC  25FA               	addwf	?___wmul& (0+255),w,b
  1088  0028AE  6ED9               	movwf	fsr2l,c
  1089  0028B0  0E00               	movlw	high _executedList
  1090  0028B2  21FB               	addwfc	(?___wmul+1)& (0+255),w,b
  1091  0028B4  6EDA               	movwf	fsr2h,c
  1092  0028B6  D802               	call	u3818
  1093  0028B8  EF68  F014         	goto	u3819
  1094  0028BC                     u3818:
  1095  0028BC  0005               	push	
  1096  0028BE  6EFA               	movwf	pclath,c
  1097  0028C0  50DE               	movf	postinc2,w,c
  1098  0028C2  6EFD               	movwf	tosl,c
  1099  0028C4  50DE               	movf	postinc2,w,c
  1100  0028C6  6EFE               	movwf	tosh,c
  1101  0028C8  50DE               	movf	postinc2,w,c
  1102  0028CA  6EFF               	movwf	tosu,c
  1103  0028CC  50FA               	movf	pclath,w,c
  1104  0028CE  0012               	return		;indir
  1105  0028D0                     u3819:
  1106  0028D0                     
  1107                           ;struct.c: 139:         executedList[pos] = ((void*)0);
  1108  0028D0  C203  F1FA         	movff	dispatchISR@pos,___wmul@multiplier
  1109  0028D4  C204  F1FB         	movff	dispatchISR@pos+1,___wmul@multiplier+1
  1110  0028D8  0E00               	movlw	0
  1111  0028DA  0101               	movlb	1	; () banked
  1112  0028DC  6FFD               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1113  0028DE  0E03               	movlw	3
  1114  0028E0  6FFC               	movwf	___wmul@multiplicand& (0+255),b
  1115  0028E2  EC44  F01B         	call	___wmul	;wreg free
  1116  0028E6  0E60               	movlw	low _executedList
  1117  0028E8  0101               	movlb	1	; () banked
  1118  0028EA  25FA               	addwf	?___wmul& (0+255),w,b
  1119  0028EC  6ED9               	movwf	fsr2l,c
  1120  0028EE  0E00               	movlw	high _executedList
  1121  0028F0  21FB               	addwfc	(?___wmul+1)& (0+255),w,b
  1122  0028F2  6EDA               	movwf	fsr2h,c
  1123  0028F4  0E00               	movlw	0
  1124  0028F6  6EDE               	movwf	postinc2,c
  1125  0028F8  0E00               	movlw	0
  1126  0028FA  6EDE               	movwf	postinc2,c
  1127  0028FC  0E00               	movlw	0
  1128  0028FE  6EDE               	movwf	postinc2,c
  1129  002900                     
  1130                           ; BSR set to: 1
  1131                           ;struct.c: 140:         pos++;
  1132  002900  0102               	movlb	2	; () banked
  1133  002902  4B03               	infsnz	dispatchISR@pos& (0+255),f,b
  1134  002904  2B04               	incf	(dispatchISR@pos+1)& (0+255),f,b
  1135  002906                     l5245:
  1136                           
  1137                           ; BSR set to: 2
  1138                           ;struct.c: 137:    while(executedList[pos] != ((void*)0) && pos <= 10 - 1) {
  1139  002906  C203  F1FA         	movff	dispatchISR@pos,___wmul@multiplier
  1140  00290A  C204  F1FB         	movff	dispatchISR@pos+1,___wmul@multiplier+1
  1141  00290E  0E00               	movlw	0
  1142  002910  0101               	movlb	1	; () banked
  1143  002912  6FFD               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1144  002914  0E03               	movlw	3
  1145  002916  6FFC               	movwf	___wmul@multiplicand& (0+255),b
  1146  002918  EC44  F01B         	call	___wmul	;wreg free
  1147  00291C  0E60               	movlw	low _executedList
  1148  00291E  0101               	movlb	1	; () banked
  1149  002920  25FA               	addwf	?___wmul& (0+255),w,b
  1150  002922  6ED9               	movwf	fsr2l,c
  1151  002924  0E00               	movlw	high _executedList
  1152  002926  21FB               	addwfc	(?___wmul+1)& (0+255),w,b
  1153  002928  6EDA               	movwf	fsr2h,c
  1154  00292A  50DE               	movf	postinc2,w,c
  1155  00292C  10DE               	iorwf	postinc2,w,c
  1156  00292E  10DE               	iorwf	postinc2,w,c
  1157  002930  B4D8               	btfsc	status,2,c
  1158  002932  EF9D  F014         	goto	u3821
  1159  002936  EF9F  F014         	goto	u3820
  1160  00293A                     u3821:
  1161  00293A  EFAE  F014         	goto	l665
  1162  00293E                     u3820:
  1163  00293E                     
  1164                           ; BSR set to: 1
  1165  00293E  0102               	movlb	2	; () banked
  1166  002940  BF04               	btfsc	(dispatchISR@pos+1)& (0+255),7,b
  1167  002942  EFAC  F014         	goto	u3831
  1168  002946  5104               	movf	(dispatchISR@pos+1)& (0+255),w,b
  1169  002948  E109               	bnz	u3830
  1170  00294A  0E0A               	movlw	10
  1171  00294C  5D03               	subwf	dispatchISR@pos& (0+255),w,b
  1172  00294E  A0D8               	btfss	status,0,c
  1173  002950  EFAC  F014         	goto	u3831
  1174  002954  EFAE  F014         	goto	u3830
  1175  002958                     u3831:
  1176  002958  EF49  F014         	goto	l5239
  1177  00295C                     u3830:
  1178  00295C                     l665:
  1179  00295C  0012               	return		;funcret
  1180  00295E                     __end_of_dispatchISR:
  1181                           	opt callstack 0
  1182                           
  1183 ;; *************** function _Pump_On *****************
  1184 ;; Defined at:
  1185 ;;		line 60 in file "system.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;		None
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;		None
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  1    wreg      void 
  1192 ;; Registers used:
  1193 ;;		wreg, status,2
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1203 ;;Total ram usage:        0 bytes
  1204 ;; Hardware stack levels used:    1
  1205 ;; Hardware stack levels required when called:    7
  1206 ;; This function calls:
  1207 ;;		Nothing
  1208 ;; This function is called by:
  1209 ;;		_CheckTemp
  1210 ;;		_dispatchISR
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214                           	psect	text2
  1215  0037FE                     __ptext2:
  1216                           	opt callstack 0
  1217  0037FE                     _Pump_On:
  1218                           	opt callstack 0
  1219                           
  1220                           ;Skip over the trampoline to the duplicate function for level 2
  1221  0037FE  A25F               	btfss	int$flags,1,c
  1222  003800  EF04  F01C         	goto	_Pump_On$intlevel0
  1223  003804  EF2B  F01C         	goto	i2_Pump_On
  1224  003808                     _Pump_On$intlevel0:
  1225                           	opt callstack 22
  1226  003808                     
  1227                           ;system.c: 61:     pump_flag = 1;
  1228  003808  0E01               	movlw	1
  1229  00380A  0100               	movlb	0	; () banked
  1230  00380C  6FA3               	movwf	_pump_flag& (0+255),b
  1231  00380E                     
  1232                           ; BSR set to: 0
  1233  00380E  0012               	return		;funcret
  1234  003810                     __end_of_Pump_On:
  1235                           	opt callstack 0
  1236                           
  1237 ;; *************** function _Heater_On *****************
  1238 ;; Defined at:
  1239 ;;		line 47 in file "system.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;		None
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;		None
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  1    wreg      void 
  1246 ;; Registers used:
  1247 ;;		wreg, status,2
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1257 ;;Total ram usage:        0 bytes
  1258 ;; Hardware stack levels used:    1
  1259 ;; Hardware stack levels required when called:    7
  1260 ;; This function calls:
  1261 ;;		Nothing
  1262 ;; This function is called by:
  1263 ;;		_Task_Init
  1264 ;;		_dispatchISR
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268                           	psect	text3
  1269  00384E                     __ptext3:
  1270                           	opt callstack 0
  1271  00384E                     _Heater_On:
  1272                           	opt callstack 22
  1273  00384E                     
  1274                           ;system.c: 48:     heater_flag = 1;
  1275  00384E  0E01               	movlw	1
  1276  003850  0100               	movlb	0	; () banked
  1277  003852  6FA4               	movwf	_heater_flag& (0+255),b
  1278  003854                     
  1279                           ; BSR set to: 0
  1280  003854  0012               	return		;funcret
  1281  003856                     __end_of_Heater_On:
  1282                           	opt callstack 0
  1283                           
  1284 ;; *************** function _CheckHumid *****************
  1285 ;; Defined at:
  1286 ;;		line 31 in file "system.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;		None
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;		None
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      void 
  1293 ;; Registers used:
  1294 ;;		wreg, status,2, status,0
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1302 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1303 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1304 ;;Total ram usage:        3 bytes
  1305 ;; Hardware stack levels used:    1
  1306 ;; Hardware stack levels required when called:    7
  1307 ;; This function calls:
  1308 ;;		Nothing
  1309 ;; This function is called by:
  1310 ;;		_dispatchISR
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           	psect	text4
  1315  002DF8                     __ptext4:
  1316                           	opt callstack 0
  1317  002DF8                     _CheckHumid:
  1318                           	opt callstack 0
  1319                           
  1320                           ; BSR set to: 0
  1321                           ;Skip over the trampoline to the duplicate function for level 2
  1322  002DF8  A25F               	btfss	int$flags,1,c
  1323  002DFA  EF01  F017         	goto	_CheckHumid$intlevel0
  1324  002DFE  EF2F  F018         	goto	i2_CheckHumid
  1325  002E02                     _CheckHumid$intlevel0:
  1326                           	opt callstack 22
  1327  002E02                     
  1328                           ;system.c: 32:     if((demoHumid > MAX_HUMID || Humid >= MAX_HUMID) && idle_flag == 0 &&
      +                           LATDbits.LATD2 == 0) {
  1329  002E02  0100               	movlb	0	; () banked
  1330  002E04  51E6               	movf	_MAX_HUMID& (0+255),w,b
  1331  002E06  0101               	movlb	1	; () banked
  1332  002E08  6FFA               	movwf	??_CheckHumid& (0+255),b
  1333  002E0A  6BFB               	clrf	(??_CheckHumid+1)& (0+255),b
  1334  002E0C  0100               	movlb	0	; () banked
  1335  002E0E  519A               	movf	_demoHumid& (0+255),w,b
  1336  002E10  0101               	movlb	1	; () banked
  1337  002E12  5DFA               	subwf	??_CheckHumid& (0+255),w,b
  1338  002E14  51FB               	movf	(??_CheckHumid+1)& (0+255),w,b
  1339  002E16  0A80               	xorlw	128
  1340  002E18  6FFC               	movwf	(??_CheckHumid+2)& (0+255),b
  1341  002E1A  0100               	movlb	0	; () banked
  1342  002E1C  519B               	movf	(_demoHumid+1)& (0+255),w,b
  1343  002E1E  0A80               	xorlw	128
  1344  002E20  0101               	movlb	1	; () banked
  1345  002E22  59FC               	subwfb	(??_CheckHumid+2)& (0+255),w,b
  1346  002E24  A0D8               	btfss	status,0,c
  1347  002E26  EF17  F017         	goto	u3541
  1348  002E2A  EF19  F017         	goto	u3540
  1349  002E2E                     u3541:
  1350  002E2E  EF2F  F017         	goto	l5035
  1351  002E32                     u3540:
  1352  002E32                     
  1353                           ; BSR set to: 1
  1354  002E32  0100               	movlb	0	; () banked
  1355  002E34  51E6               	movf	_MAX_HUMID& (0+255),w,b
  1356  002E36  0101               	movlb	1	; () banked
  1357  002E38  6FFA               	movwf	??_CheckHumid& (0+255),b
  1358  002E3A  6BFB               	clrf	(??_CheckHumid+1)& (0+255),b
  1359  002E3C  51FA               	movf	??_CheckHumid& (0+255),w,b
  1360  002E3E  0100               	movlb	0	; () banked
  1361  002E40  5D96               	subwf	_Humid& (0+255),w,b
  1362  002E42  5197               	movf	(_Humid+1)& (0+255),w,b
  1363  002E44  0A80               	xorlw	128
  1364  002E46  0101               	movlb	1	; () banked
  1365  002E48  6FFC               	movwf	(??_CheckHumid+2)& (0+255),b
  1366  002E4A  51FB               	movf	(??_CheckHumid+1)& (0+255),w,b
  1367  002E4C  0A80               	xorlw	128
  1368  002E4E  59FC               	subwfb	(??_CheckHumid+2)& (0+255),w,b
  1369  002E50  A0D8               	btfss	status,0,c
  1370  002E52  EF2D  F017         	goto	u3551
  1371  002E56  EF2F  F017         	goto	u3550
  1372  002E5A                     u3551:
  1373  002E5A  EF3F  F017         	goto	l1099
  1374  002E5E                     u3550:
  1375  002E5E                     l5035:
  1376                           
  1377                           ; BSR set to: 1
  1378  002E5E  505E               	movf	_idle_flag^0,w,c
  1379  002E60  A4D8               	btfss	status,2,c
  1380  002E62  EF35  F017         	goto	u3561
  1381  002E66  EF37  F017         	goto	u3560
  1382  002E6A                     u3561:
  1383  002E6A  EF3F  F017         	goto	l1099
  1384  002E6E                     u3560:
  1385  002E6E                     
  1386                           ; BSR set to: 1
  1387  002E6E  B48C               	btfsc	140,2,c	;volatile
  1388  002E70  EF3C  F017         	goto	u3571
  1389  002E74  EF3E  F017         	goto	u3570
  1390  002E78                     u3571:
  1391  002E78  EF3F  F017         	goto	l1099
  1392  002E7C                     u3570:
  1393  002E7C                     
  1394                           ; BSR set to: 1
  1395                           ;system.c: 33:         LATDbits.LATD2 = 1;
  1396  002E7C  848C               	bsf	140,2,c	;volatile
  1397  002E7E                     l1099:
  1398                           
  1399                           ; BSR set to: 1
  1400  002E7E  0012               	return		;funcret
  1401  002E80                     __end_of_CheckHumid:
  1402                           	opt callstack 0
  1403                           
  1404 ;; *************** function _CheckTemp *****************
  1405 ;; Defined at:
  1406 ;;		line 37 in file "system.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;		None
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;		None
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  1    wreg      void 
  1413 ;; Registers used:
  1414 ;;		wreg, status,2, status,0, cstack
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1422 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1423 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1424 ;;Total ram usage:        3 bytes
  1425 ;; Hardware stack levels used:    1
  1426 ;; Hardware stack levels required when called:    8
  1427 ;; This function calls:
  1428 ;;		_Heater_Off
  1429 ;;		_Pump_On
  1430 ;; This function is called by:
  1431 ;;		_dispatchISR
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           
  1435                           	psect	text5
  1436  0025D2                     __ptext5:
  1437                           	opt callstack 0
  1438  0025D2                     _CheckTemp:
  1439                           	opt callstack 0
  1440                           
  1441                           ; BSR set to: 1
  1442                           ;Skip over the trampoline to the duplicate function for level 2
  1443  0025D2  A25F               	btfss	int$flags,1,c
  1444  0025D4  EFEE  F012         	goto	_CheckTemp$intlevel0
  1445  0025D8  EF11  F015         	goto	i2_CheckTemp
  1446  0025DC                     _CheckTemp$intlevel0:
  1447                           	opt callstack 21
  1448  0025DC                     
  1449                           ;system.c: 38:     if((demoTemp >= MAX_HEAT || Temp >= MAX_HEAT) && heater_flag == 1) {
  1450  0025DC  0100               	movlb	0	; () banked
  1451  0025DE  51E7               	movf	_MAX_HEAT& (0+255),w,b
  1452  0025E0  0101               	movlb	1	; () banked
  1453  0025E2  6FFA               	movwf	??_CheckTemp& (0+255),b
  1454  0025E4  6BFB               	clrf	(??_CheckTemp+1)& (0+255),b
  1455  0025E6  51FA               	movf	??_CheckTemp& (0+255),w,b
  1456  0025E8  0100               	movlb	0	; () banked
  1457  0025EA  5D9C               	subwf	_demoTemp& (0+255),w,b
  1458  0025EC  519D               	movf	(_demoTemp+1)& (0+255),w,b
  1459  0025EE  0A80               	xorlw	128
  1460  0025F0  0101               	movlb	1	; () banked
  1461  0025F2  6FFC               	movwf	(??_CheckTemp+2)& (0+255),b
  1462  0025F4  51FB               	movf	(??_CheckTemp+1)& (0+255),w,b
  1463  0025F6  0A80               	xorlw	128
  1464  0025F8  59FC               	subwfb	(??_CheckTemp+2)& (0+255),w,b
  1465  0025FA  B0D8               	btfsc	status,0,c
  1466  0025FC  EF02  F013         	goto	u3481
  1467  002600  EF04  F013         	goto	u3480
  1468  002604                     u3481:
  1469  002604  EF1A  F013         	goto	l5019
  1470  002608                     u3480:
  1471  002608                     
  1472                           ; BSR set to: 1
  1473  002608  0100               	movlb	0	; () banked
  1474  00260A  51E7               	movf	_MAX_HEAT& (0+255),w,b
  1475  00260C  0101               	movlb	1	; () banked
  1476  00260E  6FFA               	movwf	??_CheckTemp& (0+255),b
  1477  002610  6BFB               	clrf	(??_CheckTemp+1)& (0+255),b
  1478  002612  51FA               	movf	??_CheckTemp& (0+255),w,b
  1479  002614  0100               	movlb	0	; () banked
  1480  002616  5D98               	subwf	_Temp& (0+255),w,b
  1481  002618  5199               	movf	(_Temp+1)& (0+255),w,b
  1482  00261A  0A80               	xorlw	128
  1483  00261C  0101               	movlb	1	; () banked
  1484  00261E  6FFC               	movwf	(??_CheckTemp+2)& (0+255),b
  1485  002620  51FB               	movf	(??_CheckTemp+1)& (0+255),w,b
  1486  002622  0A80               	xorlw	128
  1487  002624  59FC               	subwfb	(??_CheckTemp+2)& (0+255),w,b
  1488  002626  A0D8               	btfss	status,0,c
  1489  002628  EF18  F013         	goto	u3491
  1490  00262C  EF1A  F013         	goto	u3490
  1491  002630                     u3491:
  1492  002630  EF27  F013         	goto	l5023
  1493  002634                     u3490:
  1494  002634                     l5019:
  1495                           
  1496                           ; BSR set to: 1
  1497  002634  0100               	movlb	0	; () banked
  1498  002636  05A4               	decf	_heater_flag& (0+255),w,b
  1499  002638  A4D8               	btfss	status,2,c
  1500  00263A  EF21  F013         	goto	u3501
  1501  00263E  EF23  F013         	goto	u3500
  1502  002642                     u3501:
  1503  002642  EF27  F013         	goto	l5023
  1504  002646                     u3500:
  1505  002646                     
  1506                           ; BSR set to: 0
  1507                           ;system.c: 39:         Heater_Off();
  1508  002646  EC1D  F01C         	call	_Heater_Off	;wreg free
  1509                           
  1510                           ;system.c: 40:         Pump_On();
  1511  00264A  ECFF  F01B         	call	_Pump_On	;wreg free
  1512  00264E                     l5023:
  1513                           
  1514                           ;system.c: 42:     if((demoTemp >= MAX_HEAT || Temp >= MAX_HEAT) && pump_flag == 1) {
  1515  00264E  0100               	movlb	0	; () banked
  1516  002650  51E7               	movf	_MAX_HEAT& (0+255),w,b
  1517  002652  0101               	movlb	1	; () banked
  1518  002654  6FFA               	movwf	??_CheckTemp& (0+255),b
  1519  002656  6BFB               	clrf	(??_CheckTemp+1)& (0+255),b
  1520  002658  51FA               	movf	??_CheckTemp& (0+255),w,b
  1521  00265A  0100               	movlb	0	; () banked
  1522  00265C  5D9C               	subwf	_demoTemp& (0+255),w,b
  1523  00265E  519D               	movf	(_demoTemp+1)& (0+255),w,b
  1524  002660  0A80               	xorlw	128
  1525  002662  0101               	movlb	1	; () banked
  1526  002664  6FFC               	movwf	(??_CheckTemp+2)& (0+255),b
  1527  002666  51FB               	movf	(??_CheckTemp+1)& (0+255),w,b
  1528  002668  0A80               	xorlw	128
  1529  00266A  59FC               	subwfb	(??_CheckTemp+2)& (0+255),w,b
  1530  00266C  B0D8               	btfsc	status,0,c
  1531  00266E  EF3B  F013         	goto	u3511
  1532  002672  EF3D  F013         	goto	u3510
  1533  002676                     u3511:
  1534  002676  EF53  F013         	goto	l5027
  1535  00267A                     u3510:
  1536  00267A                     
  1537                           ; BSR set to: 1
  1538  00267A  0100               	movlb	0	; () banked
  1539  00267C  51E7               	movf	_MAX_HEAT& (0+255),w,b
  1540  00267E  0101               	movlb	1	; () banked
  1541  002680  6FFA               	movwf	??_CheckTemp& (0+255),b
  1542  002682  6BFB               	clrf	(??_CheckTemp+1)& (0+255),b
  1543  002684  51FA               	movf	??_CheckTemp& (0+255),w,b
  1544  002686  0100               	movlb	0	; () banked
  1545  002688  5D98               	subwf	_Temp& (0+255),w,b
  1546  00268A  5199               	movf	(_Temp+1)& (0+255),w,b
  1547  00268C  0A80               	xorlw	128
  1548  00268E  0101               	movlb	1	; () banked
  1549  002690  6FFC               	movwf	(??_CheckTemp+2)& (0+255),b
  1550  002692  51FB               	movf	(??_CheckTemp+1)& (0+255),w,b
  1551  002694  0A80               	xorlw	128
  1552  002696  59FC               	subwfb	(??_CheckTemp+2)& (0+255),w,b
  1553  002698  A0D8               	btfss	status,0,c
  1554  00269A  EF51  F013         	goto	u3521
  1555  00269E  EF53  F013         	goto	u3520
  1556  0026A2                     u3521:
  1557  0026A2  EF5E  F013         	goto	l1108
  1558  0026A6                     u3520:
  1559  0026A6                     l5027:
  1560                           
  1561                           ; BSR set to: 1
  1562  0026A6  0100               	movlb	0	; () banked
  1563  0026A8  05A3               	decf	_pump_flag& (0+255),w,b
  1564  0026AA  A4D8               	btfss	status,2,c
  1565  0026AC  EF5A  F013         	goto	u3531
  1566  0026B0  EF5C  F013         	goto	u3530
  1567  0026B4                     u3531:
  1568  0026B4  EF5E  F013         	goto	l1108
  1569  0026B8                     u3530:
  1570  0026B8                     
  1571                           ; BSR set to: 0
  1572                           ;system.c: 43:         idle_flag = 1;
  1573  0026B8  0E01               	movlw	1
  1574  0026BA  6E5E               	movwf	_idle_flag^0,c
  1575  0026BC                     l1108:
  1576  0026BC  0012               	return		;funcret
  1577  0026BE                     __end_of_CheckTemp:
  1578                           	opt callstack 0
  1579                           
  1580 ;; *************** function _test *****************
  1581 ;; Defined at:
  1582 ;;		line 3 in file "system.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;		None
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;		None
  1587 ;; Return value:  Size  Location     Type
  1588 ;;                  1    wreg      void 
  1589 ;; Registers used:
  1590 ;;		wreg, status,2, status,0
  1591 ;; Tracked objects:
  1592 ;;		On entry : 0/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1598 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1599 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1600 ;;Total ram usage:        1 bytes
  1601 ;; Hardware stack levels used:    1
  1602 ;; Hardware stack levels required when called:    7
  1603 ;; This function calls:
  1604 ;;		Nothing
  1605 ;; This function is called by:
  1606 ;;		_Task_Init
  1607 ;;		_dispatchISR
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611                           	psect	text6
  1612  0036B0                     __ptext6:
  1613                           	opt callstack 0
  1614  0036B0                     _test:
  1615                           	opt callstack 22
  1616  0036B0                     
  1617                           ;system.c: 4:     LATDbits.LATD1 = !LATDbits.LATD1;
  1618  0036B0  A28C               	btfss	140,1,c	;volatile
  1619  0036B2  EF5D  F01B         	goto	u3581
  1620  0036B6  EF62  F01B         	goto	u3580
  1621  0036BA                     u3581:
  1622  0036BA  0101               	movlb	1	; () banked
  1623  0036BC  6BFA               	clrf	??_test& (0+255),b
  1624  0036BE  2BFA               	incf	??_test& (0+255),f,b
  1625  0036C0  EF64  F01B         	goto	u3598
  1626  0036C4                     u3580:
  1627  0036C4  0101               	movlb	1	; () banked
  1628  0036C6  6BFA               	clrf	??_test& (0+255),b
  1629  0036C8                     u3598:
  1630  0036C8  47FA               	rlncf	??_test& (0+255),f,b
  1631  0036CA  508C               	movf	140,w,c	;volatile
  1632  0036CC  19FA               	xorwf	??_test& (0+255),w,b
  1633  0036CE  0BFD               	andlw	-3
  1634  0036D0  19FA               	xorwf	??_test& (0+255),w,b
  1635  0036D2  6E8C               	movwf	140,c	;volatile
  1636  0036D4                     
  1637                           ; BSR set to: 1
  1638  0036D4  0012               	return		;funcret
  1639  0036D6                     __end_of_test:
  1640                           	opt callstack 0
  1641                           
  1642 ;; *************** function _System_Initialize *****************
  1643 ;; Defined at:
  1644 ;;		line 17 in file "system.c"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;		None
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;		None
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  1    wreg      void 
  1651 ;; Registers used:
  1652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1662 ;;Total ram usage:        0 bytes
  1663 ;; Hardware stack levels used:    1
  1664 ;; Hardware stack levels required when called:   12
  1665 ;; This function calls:
  1666 ;;		_IFreq_Initialize
  1667 ;;		_InitializeElements
  1668 ;;		_LCD_SetUp
  1669 ;;		_PIN_SetUp
  1670 ;;		_TMR_Initialize
  1671 ;;		_TMR_StartTimer
  1672 ;; This function is called by:
  1673 ;;		_main
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           	psect	text7
  1678  00358C                     __ptext7:
  1679                           	opt callstack 0
  1680  00358C                     _System_Initialize:
  1681                           	opt callstack 18
  1682  00358C                     
  1683                           ;system.c: 18:     IFreq_Initialize();
  1684  00358C  EC11  F01C         	call	_IFreq_Initialize	;wreg free
  1685  003590                     
  1686                           ;system.c: 20:     TMR_Initialize(0);
  1687  003590  0E00               	movlw	0
  1688  003592  0101               	movlb	1	; () banked
  1689  003594  6FFB               	movwf	(TMR_Initialize@timer_name+1)& (0+255),b
  1690  003596  0E00               	movlw	0
  1691  003598  6FFA               	movwf	TMR_Initialize@timer_name& (0+255),b
  1692  00359A  EC30  F019         	call	_TMR_Initialize	;wreg free
  1693  00359E                     
  1694                           ;system.c: 21:     TMR_Initialize(1);
  1695  00359E  0E00               	movlw	0
  1696  0035A0  0101               	movlb	1	; () banked
  1697  0035A2  6FFB               	movwf	(TMR_Initialize@timer_name+1)& (0+255),b
  1698  0035A4  0E01               	movlw	1
  1699  0035A6  6FFA               	movwf	TMR_Initialize@timer_name& (0+255),b
  1700  0035A8  EC30  F019         	call	_TMR_Initialize	;wreg free
  1701  0035AC                     
  1702                           ;system.c: 23:     InitializeElements();
  1703  0035AC  EC4C  F00E         	call	_InitializeElements	;wreg free
  1704  0035B0                     
  1705                           ;system.c: 25:     PIN_SetUp();
  1706  0035B0  EC6B  F01B         	call	_PIN_SetUp	;wreg free
  1707  0035B4                     
  1708                           ;system.c: 26:     LCD_SetUp();
  1709  0035B4  ECA4  F01B         	call	_LCD_SetUp	;wreg free
  1710  0035B8                     
  1711                           ;system.c: 28:     TMR_StartTimer(1);
  1712  0035B8  0E00               	movlw	0
  1713  0035BA  0101               	movlb	1	; () banked
  1714  0035BC  6FFB               	movwf	(TMR_StartTimer@timer_name+1)& (0+255),b
  1715  0035BE  0E01               	movlw	1
  1716  0035C0  6FFA               	movwf	TMR_StartTimer@timer_name& (0+255),b
  1717  0035C2  ECAA  F019         	call	_TMR_StartTimer	;wreg free
  1718  0035C6  0012               	return		;funcret
  1719  0035C8                     __end_of_System_Initialize:
  1720                           	opt callstack 0
  1721                           
  1722 ;; *************** function _TMR_StartTimer *****************
  1723 ;; Defined at:
  1724 ;;		line 42 in file "OSCL_TMR_Set_Up.c"
  1725 ;; Parameters:    Size  Location     Type
  1726 ;;  timer_name      2    0[BANK1 ] int 
  1727 ;; Auto vars:     Size  Location     Type
  1728 ;;		None
  1729 ;; Return value:  Size  Location     Type
  1730 ;;                  1    wreg      void 
  1731 ;; Registers used:
  1732 ;;		wreg, status,2, status,0
  1733 ;; Tracked objects:
  1734 ;;		On entry : 0/0
  1735 ;;		On exit  : 0/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1738 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1740 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1741 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1742 ;;Total ram usage:        4 bytes
  1743 ;; Hardware stack levels used:    1
  1744 ;; Hardware stack levels required when called:    7
  1745 ;; This function calls:
  1746 ;;		Nothing
  1747 ;; This function is called by:
  1748 ;;		_System_Initialize
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           	psect	text8
  1753  003354                     __ptext8:
  1754                           	opt callstack 0
  1755  003354                     _TMR_StartTimer:
  1756                           	opt callstack 22
  1757  003354                     
  1758                           ;OSCL_TMR_Set_Up.c: 43:     switch(timer_name) {
  1759  003354  EFB2  F019         	goto	l4907
  1760  003358                     l283:
  1761                           
  1762                           ; BSR set to: 1
  1763                           ;OSCL_TMR_Set_Up.c: 45:             T0CONbits.TMR0ON = 1;
  1764  003358  8ED5               	bsf	213,7,c	;volatile
  1765                           
  1766                           ;OSCL_TMR_Set_Up.c: 46:         break;
  1767  00335A  EFC9  F019         	goto	l286
  1768  00335E                     l285:
  1769                           
  1770                           ; BSR set to: 1
  1771                           ;OSCL_TMR_Set_Up.c: 49:             T1CONbits.TMR1ON = 1;
  1772  00335E  80CD               	bsf	205,0,c	;volatile
  1773                           
  1774                           ;OSCL_TMR_Set_Up.c: 50:         break;
  1775  003360  EFC9  F019         	goto	l286
  1776  003364                     l4907:
  1777  003364  C1FA  F1FC         	movff	TMR_StartTimer@timer_name,??_TMR_StartTimer
  1778  003368  C1FB  F1FD         	movff	TMR_StartTimer@timer_name+1,??_TMR_StartTimer+1
  1779                           
  1780                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1781                           ; Switch size 1, requested type "simple"
  1782                           ; Number of cases is 1, Range of values is 0 to 0
  1783                           ; switch strategies available:
  1784                           ; Name         Instructions Cycles
  1785                           ; simple_byte            4     3 (average)
  1786                           ;	Chosen strategy is simple_byte
  1787  00336C  0101               	movlb	1	; () banked
  1788  00336E  51FD               	movf	(??_TMR_StartTimer+1)& (0+255),w,b
  1789  003370  0A00               	xorlw	0	; case 0
  1790  003372  B4D8               	btfsc	status,2,c
  1791  003374  EFBE  F019         	goto	l5483
  1792  003378  EFC9  F019         	goto	l286
  1793  00337C                     l5483:
  1794                           
  1795                           ; BSR set to: 1
  1796                           ; Switch size 1, requested type "simple"
  1797                           ; Number of cases is 2, Range of values is 0 to 1
  1798                           ; switch strategies available:
  1799                           ; Name         Instructions Cycles
  1800                           ; simple_byte            7     4 (average)
  1801                           ;	Chosen strategy is simple_byte
  1802  00337C  51FC               	movf	??_TMR_StartTimer& (0+255),w,b
  1803  00337E  0A00               	xorlw	0	; case 0
  1804  003380  B4D8               	btfsc	status,2,c
  1805  003382  EFAC  F019         	goto	l283
  1806  003386  0A01               	xorlw	1	; case 1
  1807  003388  B4D8               	btfsc	status,2,c
  1808  00338A  EFAF  F019         	goto	l285
  1809  00338E  EFC9  F019         	goto	l286
  1810  003392                     l286:
  1811                           
  1812                           ; BSR set to: 1
  1813  003392  0012               	return		;funcret
  1814  003394                     __end_of_TMR_StartTimer:
  1815                           	opt callstack 0
  1816                           
  1817 ;; *************** function _TMR_Initialize *****************
  1818 ;; Defined at:
  1819 ;;		line 17 in file "OSCL_TMR_Set_Up.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;  timer_name      2    0[BANK1 ] int 
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;		None
  1824 ;; Return value:  Size  Location     Type
  1825 ;;                  1    wreg      void 
  1826 ;; Registers used:
  1827 ;;		wreg, status,2, status,0
  1828 ;; Tracked objects:
  1829 ;;		On entry : 0/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1833 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1835 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1836 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1837 ;;Total ram usage:        4 bytes
  1838 ;; Hardware stack levels used:    1
  1839 ;; Hardware stack levels required when called:    7
  1840 ;; This function calls:
  1841 ;;		Nothing
  1842 ;; This function is called by:
  1843 ;;		_System_Initialize
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           	psect	text9
  1848  003260                     __ptext9:
  1849                           	opt callstack 0
  1850  003260                     _TMR_Initialize:
  1851                           	opt callstack 22
  1852  003260                     
  1853                           ;OSCL_TMR_Set_Up.c: 18:     switch(timer_name) {
  1854  003260  EF46  F019         	goto	l4895
  1855  003264                     l4881:
  1856                           
  1857                           ; BSR set to: 1
  1858                           ;OSCL_TMR_Set_Up.c: 20:             T0CON = 0b01000111;
  1859  003264  0E47               	movlw	71
  1860  003266  6ED5               	movwf	213,c	;volatile
  1861                           
  1862                           ;OSCL_TMR_Set_Up.c: 21:             TMR0 = 0xB2;
  1863  003268  0E00               	movlw	0
  1864  00326A  6ED7               	movwf	215,c	;volatile
  1865  00326C  0EB2               	movlw	178
  1866  00326E  6ED6               	movwf	214,c	;volatile
  1867  003270                     
  1868                           ; BSR set to: 1
  1869                           ;OSCL_TMR_Set_Up.c: 25:             INTCONbits.TMR0IE = 1;
  1870  003270  8AF2               	bsf	242,5,c	;volatile
  1871  003272                     
  1872                           ; BSR set to: 1
  1873                           ;OSCL_TMR_Set_Up.c: 26:             INTCONbits.TMR0IF = 0;
  1874  003272  94F2               	bcf	242,2,c	;volatile
  1875                           
  1876                           ;OSCL_TMR_Set_Up.c: 27:         break;
  1877  003274  EF5D  F019         	goto	l279
  1878  003278                     l4887:
  1879                           
  1880                           ; BSR set to: 1
  1881                           ;OSCL_TMR_Set_Up.c: 30:             T1CON = 0b10110100;
  1882  003278  0EB4               	movlw	180
  1883  00327A  6ECD               	movwf	205,c	;volatile
  1884                           
  1885                           ;OSCL_TMR_Set_Up.c: 34:             TMR1H = 0xF6;
  1886  00327C  0EF6               	movlw	246
  1887  00327E  6ECF               	movwf	207,c	;volatile
  1888                           
  1889                           ;OSCL_TMR_Set_Up.c: 35:             TMR1L = 0x3C;
  1890  003280  0E3C               	movlw	60
  1891  003282  6ECE               	movwf	206,c	;volatile
  1892  003284                     
  1893                           ; BSR set to: 1
  1894                           ;OSCL_TMR_Set_Up.c: 36:             PIE1bits.TMR1IE = 1;
  1895  003284  809D               	bsf	157,0,c	;volatile
  1896  003286                     
  1897                           ; BSR set to: 1
  1898                           ;OSCL_TMR_Set_Up.c: 37:             PIR1bits.TMR1IF = 0;
  1899  003286  909E               	bcf	158,0,c	;volatile
  1900                           
  1901                           ;OSCL_TMR_Set_Up.c: 38:             break;
  1902  003288  EF5D  F019         	goto	l279
  1903  00328C                     l4895:
  1904  00328C  C1FA  F1FC         	movff	TMR_Initialize@timer_name,??_TMR_Initialize
  1905  003290  C1FB  F1FD         	movff	TMR_Initialize@timer_name+1,??_TMR_Initialize+1
  1906                           
  1907                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1908                           ; Switch size 1, requested type "simple"
  1909                           ; Number of cases is 1, Range of values is 0 to 0
  1910                           ; switch strategies available:
  1911                           ; Name         Instructions Cycles
  1912                           ; simple_byte            4     3 (average)
  1913                           ;	Chosen strategy is simple_byte
  1914  003294  0101               	movlb	1	; () banked
  1915  003296  51FD               	movf	(??_TMR_Initialize+1)& (0+255),w,b
  1916  003298  0A00               	xorlw	0	; case 0
  1917  00329A  B4D8               	btfsc	status,2,c
  1918  00329C  EF52  F019         	goto	l5485
  1919  0032A0  EF5D  F019         	goto	l279
  1920  0032A4                     l5485:
  1921                           
  1922                           ; BSR set to: 1
  1923                           ; Switch size 1, requested type "simple"
  1924                           ; Number of cases is 2, Range of values is 0 to 1
  1925                           ; switch strategies available:
  1926                           ; Name         Instructions Cycles
  1927                           ; simple_byte            7     4 (average)
  1928                           ;	Chosen strategy is simple_byte
  1929  0032A4  51FC               	movf	??_TMR_Initialize& (0+255),w,b
  1930  0032A6  0A00               	xorlw	0	; case 0
  1931  0032A8  B4D8               	btfsc	status,2,c
  1932  0032AA  EF32  F019         	goto	l4881
  1933  0032AE  0A01               	xorlw	1	; case 1
  1934  0032B0  B4D8               	btfsc	status,2,c
  1935  0032B2  EF3C  F019         	goto	l4887
  1936  0032B6  EF5D  F019         	goto	l279
  1937  0032BA                     l279:
  1938                           
  1939                           ; BSR set to: 1
  1940  0032BA  0012               	return		;funcret
  1941  0032BC                     __end_of_TMR_Initialize:
  1942                           	opt callstack 0
  1943                           
  1944 ;; *************** function _PIN_SetUp *****************
  1945 ;; Defined at:
  1946 ;;		line 4 in file "pin_manager.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;		None
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;		None
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  1    wreg      void 
  1953 ;; Registers used:
  1954 ;;		wreg, status,2
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1964 ;;Total ram usage:        0 bytes
  1965 ;; Hardware stack levels used:    1
  1966 ;; Hardware stack levels required when called:    7
  1967 ;; This function calls:
  1968 ;;		Nothing
  1969 ;; This function is called by:
  1970 ;;		_System_Initialize
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           	psect	text10
  1975  0036D6                     __ptext10:
  1976                           	opt callstack 0
  1977  0036D6                     _PIN_SetUp:
  1978                           	opt callstack 22
  1979  0036D6                     
  1980                           ;pin_manager.c: 6:     TRISDbits.TRISD1 = 0;
  1981  0036D6  9295               	bcf	149,1,c	;volatile
  1982                           
  1983                           ;pin_manager.c: 7:     LATDbits.LATD1 = 0;
  1984  0036D8  928C               	bcf	140,1,c	;volatile
  1985                           
  1986                           ;pin_manager.c: 9:     TRISDbits.TRISD2 = 0;
  1987  0036DA  9495               	bcf	149,2,c	;volatile
  1988                           
  1989                           ;pin_manager.c: 10:     TRISDbits.TRISD3 = 0;
  1990  0036DC  9695               	bcf	149,3,c	;volatile
  1991                           
  1992                           ;pin_manager.c: 11:     TRISDbits.TRISD4 = 0;
  1993  0036DE  9895               	bcf	149,4,c	;volatile
  1994                           
  1995                           ;pin_manager.c: 13:     TRISDbits.TRISD7 = 0;
  1996  0036E0  9E95               	bcf	149,7,c	;volatile
  1997                           
  1998                           ;pin_manager.c: 14:     TRISDbits.TRISD6 = 0;
  1999  0036E2  9C95               	bcf	149,6,c	;volatile
  2000                           
  2001                           ;pin_manager.c: 15:     TRISDbits.TRISD5 = 0;
  2002  0036E4  9A95               	bcf	149,5,c	;volatile
  2003                           
  2004                           ;pin_manager.c: 17:     LATDbits.LATD2 = LATDbits.LATD3 = LATDbits.LATD4 = 0;
  2005  0036E6  988C               	bcf	140,4,c	;volatile
  2006  0036E8  968C               	bcf	140,3,c	;volatile
  2007  0036EA  948C               	bcf	140,2,c	;volatile
  2008                           
  2009                           ;pin_manager.c: 18:     LATDbits.LATD7 = 0;
  2010  0036EC  9E8C               	bcf	140,7,c	;volatile
  2011                           
  2012                           ;pin_manager.c: 19:     LATDbits.LATD6 = 0;
  2013  0036EE  9C8C               	bcf	140,6,c	;volatile
  2014                           
  2015                           ;pin_manager.c: 20:     LATDbits.LATD5 = 0;
  2016  0036F0  9A8C               	bcf	140,5,c	;volatile
  2017                           
  2018                           ;pin_manager.c: 22:     TRISAbits.RA5 = 1;
  2019  0036F2  8A92               	bsf	146,5,c	;volatile
  2020                           
  2021                           ;pin_manager.c: 23:     TRISBbits.RB0 = 1;
  2022  0036F4  8093               	bsf	147,0,c	;volatile
  2023  0036F6                     
  2024                           ;pin_manager.c: 24:     ADCON1=0x0F;
  2025  0036F6  0E0F               	movlw	15
  2026  0036F8  6EC1               	movwf	193,c	;volatile
  2027  0036FA  0012               	return		;funcret
  2028  0036FC                     __end_of_PIN_SetUp:
  2029                           	opt callstack 0
  2030                           
  2031 ;; *************** function _LCD_SetUp *****************
  2032 ;; Defined at:
  2033 ;;		line 176 in file "LCD.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;		None
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;		None
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  1    wreg      void 
  2040 ;; Registers used:
  2041 ;;		wreg, status,2, status,0, cstack
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/0
  2044 ;;		On exit  : 0/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2051 ;;Total ram usage:        0 bytes
  2052 ;; Hardware stack levels used:    1
  2053 ;; Hardware stack levels required when called:   11
  2054 ;; This function calls:
  2055 ;;		_LCDInit
  2056 ;;		_LCDPutInst
  2057 ;; This function is called by:
  2058 ;;		_System_Initialize
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062                           	psect	text11
  2063  003748                     __ptext11:
  2064                           	opt callstack 0
  2065  003748                     _LCD_SetUp:
  2066                           	opt callstack 18
  2067  003748                     
  2068                           ;LCD.c: 177:     LATA = 0x00;
  2069  003748  0E00               	movlw	0
  2070  00374A  6E89               	movwf	137,c	;volatile
  2071                           
  2072                           ;LCD.c: 178:     TRISA = 0xF3;
  2073  00374C  0EF3               	movlw	243
  2074  00374E  6E92               	movwf	146,c	;volatile
  2075                           
  2076                           ;LCD.c: 180:     LATB = 0x00;
  2077  003750  0E00               	movlw	0
  2078  003752  6E8A               	movwf	138,c	;volatile
  2079  003754                     
  2080                           ;LCD.c: 181:     TRISB = 0xFF;
  2081  003754  6893               	setf	147,c	;volatile
  2082                           
  2083                           ;LCD.c: 183:     LATC = 0x00;
  2084  003756  0E00               	movlw	0
  2085  003758  6E8B               	movwf	139,c	;volatile
  2086                           
  2087                           ;LCD.c: 184:     TRISC = 0xD7;
  2088  00375A  0ED7               	movlw	215
  2089  00375C  6E94               	movwf	148,c	;volatile
  2090  00375E                     
  2091                           ;LCD.c: 186:     LCDInit();
  2092  00375E  EC65  F018         	call	_LCDInit	;wreg free
  2093  003762                     
  2094                           ;LCD.c: 187:     LCDPutInst(0x01);
  2095  003762  0E01               	movlw	1
  2096  003764  EC7E  F017         	call	_LCDPutInst
  2097  003768  0012               	return		;funcret
  2098  00376A                     __end_of_LCD_SetUp:
  2099                           	opt callstack 0
  2100                           
  2101 ;; *************** function _LCDInit *****************
  2102 ;; Defined at:
  2103 ;;		line 6 in file "LCD.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;		None
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;		None
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      void 
  2110 ;; Registers used:
  2111 ;;		wreg, status,2, status,0, cstack
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2119 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2120 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2121 ;;Total ram usage:        1 bytes
  2122 ;; Hardware stack levels used:    1
  2123 ;; Hardware stack levels required when called:   10
  2124 ;; This function calls:
  2125 ;;		_InitBBSPI
  2126 ;;		_LCDPutInst
  2127 ;;		_Port_BBSPIInit
  2128 ;;		_WritePort_BBSPI
  2129 ;; This function is called by:
  2130 ;;		_LCD_SetUp
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           	psect	text12
  2135  0030CA                     __ptext12:
  2136                           	opt callstack 0
  2137  0030CA                     _LCDInit:
  2138                           	opt callstack 18
  2139  0030CA                     
  2140                           ;LCD.c: 8:     InitBBSPI();
  2141  0030CA  EC08  F01C         	call	_InitBBSPI	;wreg free
  2142  0030CE                     
  2143                           ;LCD.c: 9:     TRISFbits.TRISF6 = 0;
  2144  0030CE  9C97               	bcf	151,6,c	;volatile
  2145  0030D0                     
  2146                           ;LCD.c: 10:     LATFbits.LATF6 = 0;
  2147  0030D0  9C8E               	bcf	142,6,c	;volatile
  2148  0030D2                     
  2149                           ;LCD.c: 11:     _delay((unsigned long)((5)*(10000000/4000.0)));
  2150  0030D2  0E11               	movlw	17
  2151  0030D4  0102               	movlb	2	; () banked
  2152  0030D6  6F01               	movwf	??_LCDInit& (0+255),b
  2153  0030D8  0E3A               	movlw	58
  2154  0030DA                     u4057:
  2155  0030DA  2EE8               	decfsz	wreg,f,c
  2156  0030DC  D7FE               	bra	u4057
  2157  0030DE  2F01               	decfsz	??_LCDInit& (0+255),f,b
  2158  0030E0  D7FC               	bra	u4057
  2159  0030E2  F000               	nop	
  2160  0030E4                     
  2161                           ;LCD.c: 12:     LATFbits.LATF6 = 1;
  2162  0030E4  8C8E               	bsf	142,6,c	;volatile
  2163  0030E6                     
  2164                           ;LCD.c: 13:     Port_BBSPIInit (0x00);
  2165  0030E6  0E00               	movlw	0
  2166  0030E8  ECC5  F01B         	call	_Port_BBSPIInit
  2167  0030EC                     
  2168                           ;LCD.c: 14:     Port_BBSPIInit (0x01);
  2169  0030EC  0E01               	movlw	1
  2170  0030EE  ECC5  F01B         	call	_Port_BBSPIInit
  2171  0030F2                     
  2172                           ;LCD.c: 15:     WritePort_BBSPI (0x12, 0);
  2173  0030F2  0E00               	movlw	0
  2174  0030F4  0101               	movlb	1	; () banked
  2175  0030F6  6FFD               	movwf	WritePort_BBSPI@a& (0+255),b
  2176  0030F8  0E12               	movlw	18
  2177  0030FA  ECB5  F01B         	call	_WritePort_BBSPI
  2178  0030FE                     
  2179                           ;LCD.c: 16:     _delay((unsigned long)((15)*(10000000/4000.0)));
  2180  0030FE  0E31               	movlw	49
  2181  003100  0102               	movlb	2	; () banked
  2182  003102  6F01               	movwf	??_LCDInit& (0+255),b
  2183  003104  0EB2               	movlw	178
  2184  003106                     u4067:
  2185  003106  2EE8               	decfsz	wreg,f,c
  2186  003108  D7FE               	bra	u4067
  2187  00310A  2F01               	decfsz	??_LCDInit& (0+255),f,b
  2188  00310C  D7FC               	bra	u4067
  2189  00310E  F000               	nop	
  2190  003110                     
  2191                           ;LCD.c: 17:     LCDPutInst(0x32);
  2192  003110  0E32               	movlw	50
  2193  003112  EC7E  F017         	call	_LCDPutInst
  2194  003116                     
  2195                           ;LCD.c: 18:     LCDPutInst(0x3C);
  2196  003116  0E3C               	movlw	60
  2197  003118  EC7E  F017         	call	_LCDPutInst
  2198  00311C                     
  2199                           ;LCD.c: 19:     LCDPutInst(0x0C);
  2200  00311C  0E0C               	movlw	12
  2201  00311E  EC7E  F017         	call	_LCDPutInst
  2202  003122                     
  2203                           ;LCD.c: 20:     LCDPutInst(0x01);
  2204  003122  0E01               	movlw	1
  2205  003124  EC7E  F017         	call	_LCDPutInst
  2206  003128                     
  2207                           ;LCD.c: 21:     LCDPutInst(0x06);
  2208  003128  0E06               	movlw	6
  2209  00312A  EC7E  F017         	call	_LCDPutInst
  2210  00312E  0012               	return		;funcret
  2211  003130                     __end_of_LCDInit:
  2212                           	opt callstack 0
  2213                           
  2214 ;; *************** function _Port_BBSPIInit *****************
  2215 ;; Defined at:
  2216 ;;		line 84 in file "LCD.c"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;  port_dir        1    wreg     unsigned char 
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;  port_dir        1    3[BANK1 ] unsigned char 
  2221 ;; Return value:  Size  Location     Type
  2222 ;;                  1    wreg      void 
  2223 ;; Registers used:
  2224 ;;		wreg, status,2, status,0, cstack
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2231 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2233 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2234 ;;Total ram usage:        1 bytes
  2235 ;; Hardware stack levels used:    1
  2236 ;; Hardware stack levels required when called:    8
  2237 ;; This function calls:
  2238 ;;		_SendByteBBSPI
  2239 ;; This function is called by:
  2240 ;;		_LCDInit
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           	psect	text13
  2245  00378A                     __ptext13:
  2246                           	opt callstack 0
  2247  00378A                     _Port_BBSPIInit:
  2248                           	opt callstack 19
  2249                           
  2250                           ;incstack = 0
  2251                           ;Port_BBSPIInit@port_dir stored from wreg
  2252  00378A  0101               	movlb	1	; () banked
  2253  00378C  6FFD               	movwf	Port_BBSPIInit@port_dir& (0+255),b
  2254  00378E                     
  2255                           ;LCD.c: 84: void Port_BBSPIInit (unsigned char port_dir);LCD.c: 85: {;LCD.c: 89:     LAT
      +                          Abits.LATA2 = 0;
  2256  00378E  9489               	bcf	137,2,c	;volatile
  2257  003790                     
  2258                           ;LCD.c: 90:     SendByteBBSPI(0x40);
  2259  003790  0E40               	movlw	64
  2260  003792  ECBC  F017         	call	_SendByteBBSPI
  2261                           
  2262                           ;LCD.c: 91:     SendByteBBSPI(port_dir);
  2263  003796  0101               	movlb	1	; () banked
  2264  003798  51FD               	movf	Port_BBSPIInit@port_dir& (0+255),w,b
  2265  00379A  ECBC  F017         	call	_SendByteBBSPI
  2266                           
  2267                           ;LCD.c: 92:     SendByteBBSPI(0x00);
  2268  00379E  0E00               	movlw	0
  2269  0037A0  ECBC  F017         	call	_SendByteBBSPI
  2270  0037A4                     
  2271                           ;LCD.c: 93:     LATAbits.LATA2 = 1;
  2272  0037A4  8489               	bsf	137,2,c	;volatile
  2273  0037A6  0012               	return		;funcret
  2274  0037A8                     __end_of_Port_BBSPIInit:
  2275                           	opt callstack 0
  2276                           
  2277 ;; *************** function _InitBBSPI *****************
  2278 ;; Defined at:
  2279 ;;		line 31 in file "LCD.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;		None
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;		None
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  1    wreg      void 
  2286 ;; Registers used:
  2287 ;;		None
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2297 ;;Total ram usage:        0 bytes
  2298 ;; Hardware stack levels used:    1
  2299 ;; Hardware stack levels required when called:    7
  2300 ;; This function calls:
  2301 ;;		Nothing
  2302 ;; This function is called by:
  2303 ;;		_LCDInit
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307                           	psect	text14
  2308  003810                     __ptext14:
  2309                           	opt callstack 0
  2310  003810                     _InitBBSPI:
  2311                           	opt callstack 20
  2312  003810                     
  2313                           ;LCD.c: 33:     TRISAbits.TRISA2 = 0;
  2314  003810  9492               	bcf	146,2,c	;volatile
  2315                           
  2316                           ;LCD.c: 34:     TRISCbits.TRISC4 = 1;
  2317  003812  8894               	bsf	148,4,c	;volatile
  2318                           
  2319                           ;LCD.c: 35:     TRISCbits.TRISC5 = 0;
  2320  003814  9A94               	bcf	148,5,c	;volatile
  2321                           
  2322                           ;LCD.c: 36:     TRISCbits.TRISC3 = 0;
  2323  003816  9694               	bcf	148,3,c	;volatile
  2324                           
  2325                           ;LCD.c: 38:     LATAbits.LATA2 = 1;
  2326  003818  8489               	bsf	137,2,c	;volatile
  2327                           
  2328                           ;LCD.c: 39:     LATCbits.LATC4 = 1;
  2329  00381A  888B               	bsf	139,4,c	;volatile
  2330                           
  2331                           ;LCD.c: 40:     LATCbits.LATC5 = 0;
  2332  00381C  9A8B               	bcf	139,5,c	;volatile
  2333                           
  2334                           ;LCD.c: 41:     LATCbits.LATC3 = 0;
  2335  00381E  968B               	bcf	139,3,c	;volatile
  2336  003820  0012               	return		;funcret
  2337  003822                     __end_of_InitBBSPI:
  2338                           	opt callstack 0
  2339                           
  2340 ;; *************** function _InitializeElements *****************
  2341 ;; Defined at:
  2342 ;;		line 4 in file "struct.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;		None
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;  i               2    8[BANK2 ] int 
  2347 ;; Return value:  Size  Location     Type
  2348 ;;                  1    wreg      void 
  2349 ;; Registers used:
  2350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2351 ;; Tracked objects:
  2352 ;;		On entry : 0/0
  2353 ;;		On exit  : 0/0
  2354 ;;		Unchanged: 0/0
  2355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2357 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2358 ;;      Temps:          0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2359 ;;      Totals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2360 ;;Total ram usage:       10 bytes
  2361 ;; Hardware stack levels used:    1
  2362 ;; Hardware stack levels required when called:    8
  2363 ;; This function calls:
  2364 ;;		___wmul
  2365 ;; This function is called by:
  2366 ;;		_System_Initialize
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           	psect	text15
  2371  001C98                     __ptext15:
  2372                           	opt callstack 0
  2373  001C98                     _InitializeElements:
  2374                           	opt callstack 21
  2375  001C98                     
  2376                           ;struct.c: 5:     for(int i = 0; i < 10; i++) {
  2377  001C98  0E00               	movlw	0
  2378  001C9A  0102               	movlb	2	; () banked
  2379  001C9C  6F09               	movwf	(InitializeElements@i+1)& (0+255),b
  2380  001C9E  0E00               	movlw	0
  2381  001CA0  6F08               	movwf	InitializeElements@i& (0+255),b
  2382  001CA2                     l4921:
  2383                           
  2384                           ; BSR set to: 2
  2385                           ;struct.c: 6:         elementList[i].Delay = elementList[i].Period = -1;
  2386  001CA2  C208  F1FA         	movff	InitializeElements@i,___wmul@multiplier
  2387  001CA6  C209  F1FB         	movff	InitializeElements@i+1,___wmul@multiplier+1
  2388  001CAA  0E00               	movlw	0
  2389  001CAC  0101               	movlb	1	; () banked
  2390  001CAE  6FFD               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2391  001CB0  0E18               	movlw	24
  2392  001CB2  6FFC               	movwf	___wmul@multiplicand& (0+255),b
  2393  001CB4  EC44  F01B         	call	___wmul	;wreg free
  2394  001CB8  0E0B               	movlw	low (_elementList+11)
  2395  001CBA  0101               	movlb	1	; () banked
  2396  001CBC  25FA               	addwf	?___wmul& (0+255),w,b
  2397  001CBE  6ED9               	movwf	fsr2l,c
  2398  001CC0  0E01               	movlw	high (_elementList+11)
  2399  001CC2  21FB               	addwfc	(?___wmul+1)& (0+255),w,b
  2400  001CC4  6EDA               	movwf	fsr2h,c
  2401  001CC6  0EFF               	movlw	255
  2402  001CC8  6EDE               	movwf	postinc2,c
  2403  001CCA  0EFF               	movlw	255
  2404  001CCC  6EDE               	movwf	postinc2,c
  2405  001CCE  0EFF               	movlw	255
  2406  001CD0  6EDE               	movwf	postinc2,c
  2407  001CD2  0EFF               	movlw	255
  2408  001CD4  6EDE               	movwf	postinc2,c
  2409  001CD6  0EFF               	movlw	255
  2410  001CD8  6EDE               	movwf	postinc2,c
  2411  001CDA  0EFF               	movlw	255
  2412  001CDC  6EDE               	movwf	postinc2,c
  2413  001CDE  0EFF               	movlw	255
  2414  001CE0  6EDE               	movwf	postinc2,c
  2415  001CE2  0EFF               	movlw	255
  2416  001CE4  6EDE               	movwf	postinc2,c
  2417  001CE6  0E08               	movlw	8
  2418  001CE8  5ED9               	subwf	fsr2l,f,c
  2419  001CEA  0E00               	movlw	0
  2420  001CEC  5ADA               	subwfb	fsr2h,f,c
  2421  001CEE  CFDE F200          	movff	postinc2,??_InitializeElements
  2422  001CF2  CFDE F201          	movff	postinc2,??_InitializeElements+1
  2423  001CF6  CFDE F202          	movff	postinc2,??_InitializeElements+2
  2424  001CFA  CFDE F203          	movff	postinc2,??_InitializeElements+3
  2425  001CFE  CFDE F204          	movff	postinc2,??_InitializeElements+4
  2426  001D02  CFDE F205          	movff	postinc2,??_InitializeElements+5
  2427  001D06  CFDE F206          	movff	postinc2,??_InitializeElements+6
  2428  001D0A  CFDE F207          	movff	postinc2,??_InitializeElements+7
  2429  001D0E  C208  F1FA         	movff	InitializeElements@i,___wmul@multiplier
  2430  001D12  C209  F1FB         	movff	InitializeElements@i+1,___wmul@multiplier+1
  2431  001D16  0E00               	movlw	0
  2432  001D18  6FFD               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2433  001D1A  0E18               	movlw	24
  2434  001D1C  6FFC               	movwf	___wmul@multiplicand& (0+255),b
  2435  001D1E  EC44  F01B         	call	___wmul	;wreg free
  2436  001D22  0E03               	movlw	low (_elementList+3)
  2437  001D24  0101               	movlb	1	; () banked
  2438  001D26  25FA               	addwf	?___wmul& (0+255),w,b
  2439  001D28  6ED9               	movwf	fsr2l,c
  2440  001D2A  0E01               	movlw	high (_elementList+3)
  2441  001D2C  21FB               	addwfc	(?___wmul+1)& (0+255),w,b
  2442  001D2E  6EDA               	movwf	fsr2h,c
  2443  001D30  C200  FFDE         	movff	??_InitializeElements,postinc2
  2444  001D34  C201  FFDE         	movff	??_InitializeElements+1,postinc2
  2445  001D38  C202  FFDE         	movff	??_InitializeElements+2,postinc2
  2446  001D3C  C203  FFDE         	movff	??_InitializeElements+3,postinc2
  2447  001D40  C204  FFDE         	movff	??_InitializeElements+4,postinc2
  2448  001D44  C205  FFDE         	movff	??_InitializeElements+5,postinc2
  2449  001D48  C206  FFDE         	movff	??_InitializeElements+6,postinc2
  2450  001D4C  C207  FFDE         	movff	??_InitializeElements+7,postinc2
  2451  001D50                     
  2452                           ; BSR set to: 1
  2453                           ;struct.c: 7:         elementList[i].next = elementList[i].task_identifier = elementList
      +                          [i].isMark = -1;
  2454  001D50  C208  F1FA         	movff	InitializeElements@i,___wmul@multiplier
  2455  001D54  C209  F1FB         	movff	InitializeElements@i+1,___wmul@multiplier+1
  2456  001D58  0E00               	movlw	0
  2457  001D5A  6FFD               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2458  001D5C  0E18               	movlw	24
  2459  001D5E  6FFC               	movwf	___wmul@multiplicand& (0+255),b
  2460  001D60  EC44  F01B         	call	___wmul	;wreg free
  2461  001D64  0E15               	movlw	low (_elementList+21)
  2462  001D66  0101               	movlb	1	; () banked
  2463  001D68  25FA               	addwf	?___wmul& (0+255),w,b
  2464  001D6A  6ED9               	movwf	fsr2l,c
  2465  001D6C  0E01               	movlw	high (_elementList+21)
  2466  001D6E  21FB               	addwfc	(?___wmul+1)& (0+255),w,b
  2467  001D70  6EDA               	movwf	fsr2h,c
  2468  001D72  0EFF               	movlw	255
  2469  001D74  6EDF               	movwf	indf2,c
  2470  001D76  50DF               	movf	indf2,w,c
  2471  001D78  0102               	movlb	2	; () banked
  2472  001D7A  6F00               	movwf	??_InitializeElements& (0+255),b
  2473  001D7C  6B01               	clrf	(??_InitializeElements+1)& (0+255),b
  2474  001D7E  C208  F1FA         	movff	InitializeElements@i,___wmul@multiplier
  2475  001D82  C209  F1FB         	movff	InitializeElements@i+1,___wmul@multiplier+1
  2476  001D86  0E00               	movlw	0
  2477  001D88  0101               	movlb	1	; () banked
  2478  001D8A  6FFD               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2479  001D8C  0E18               	movlw	24
  2480  001D8E  6FFC               	movwf	___wmul@multiplicand& (0+255),b
  2481  001D90  EC44  F01B         	call	___wmul	;wreg free
  2482  001D94  0E13               	movlw	low (_elementList+19)
  2483  001D96  0101               	movlb	1	; () banked
  2484  001D98  25FA               	addwf	?___wmul& (0+255),w,b
  2485  001D9A  6ED9               	movwf	fsr2l,c
  2486  001D9C  0E01               	movlw	high (_elementList+19)
  2487  001D9E  21FB               	addwfc	(?___wmul+1)& (0+255),w,b
  2488  001DA0  6EDA               	movwf	fsr2h,c
  2489  001DA2  C200  FFDE         	movff	??_InitializeElements,postinc2
  2490  001DA6  C201  FFDD         	movff	??_InitializeElements+1,postdec2
  2491  001DAA  C208  F1FA         	movff	InitializeElements@i,___wmul@multiplier
  2492  001DAE  C209  F1FB         	movff	InitializeElements@i+1,___wmul@multiplier+1
  2493  001DB2  0E00               	movlw	0
  2494  001DB4  6FFD               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2495  001DB6  0E18               	movlw	24
  2496  001DB8  6FFC               	movwf	___wmul@multiplicand& (0+255),b
  2497  001DBA  EC44  F01B         	call	___wmul	;wreg free
  2498  001DBE  0E16               	movlw	low (_elementList+22)
  2499  001DC0  0101               	movlb	1	; () banked
  2500  001DC2  25FA               	addwf	?___wmul& (0+255),w,b
  2501  001DC4  6EE1               	movwf	fsr1l,c
  2502  001DC6  0E01               	movlw	high (_elementList+22)
  2503  001DC8  21FB               	addwfc	(?___wmul+1)& (0+255),w,b
  2504  001DCA  6EE2               	movwf	fsr1h,c
  2505  001DCC  CFDE FFE6          	movff	postinc2,postinc1
  2506  001DD0  CFDD FFE5          	movff	postdec2,postdec1
  2507  001DD4                     
  2508                           ; BSR set to: 1
  2509                           ;struct.c: 8:         elementList[i].pTask = ((void*)0);
  2510  001DD4  C208  F1FA         	movff	InitializeElements@i,___wmul@multiplier
  2511  001DD8  C209  F1FB         	movff	InitializeElements@i+1,___wmul@multiplier+1
  2512  001DDC  0E00               	movlw	0
  2513  001DDE  6FFD               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2514  001DE0  0E18               	movlw	24
  2515  001DE2  6FFC               	movwf	___wmul@multiplicand& (0+255),b
  2516  001DE4  EC44  F01B         	call	___wmul	;wreg free
  2517  001DE8  0E00               	movlw	low _elementList
  2518  001DEA  0101               	movlb	1	; () banked
  2519  001DEC  25FA               	addwf	?___wmul& (0+255),w,b
  2520  001DEE  6ED9               	movwf	fsr2l,c
  2521  001DF0  0E01               	movlw	high _elementList
  2522  001DF2  21FB               	addwfc	(?___wmul+1)& (0+255),w,b
  2523  001DF4  6EDA               	movwf	fsr2h,c
  2524  001DF6  0E00               	movlw	0
  2525  001DF8  6EDE               	movwf	postinc2,c
  2526  001DFA  0E00               	movlw	0
  2527  001DFC  6EDE               	movwf	postinc2,c
  2528  001DFE  0E00               	movlw	0
  2529  001E00  6EDE               	movwf	postinc2,c
  2530  001E02                     
  2531                           ; BSR set to: 1
  2532                           ;struct.c: 10:         executedList[i] = ((void*)0);
  2533  001E02  C208  F1FA         	movff	InitializeElements@i,___wmul@multiplier
  2534  001E06  C209  F1FB         	movff	InitializeElements@i+1,___wmul@multiplier+1
  2535  001E0A  0E00               	movlw	0
  2536  001E0C  6FFD               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2537  001E0E  0E03               	movlw	3
  2538  001E10  6FFC               	movwf	___wmul@multiplicand& (0+255),b
  2539  001E12  EC44  F01B         	call	___wmul	;wreg free
  2540  001E16  0E60               	movlw	low _executedList
  2541  001E18  0101               	movlb	1	; () banked
  2542  001E1A  25FA               	addwf	?___wmul& (0+255),w,b
  2543  001E1C  6ED9               	movwf	fsr2l,c
  2544  001E1E  0E00               	movlw	high _executedList
  2545  001E20  21FB               	addwfc	(?___wmul+1)& (0+255),w,b
  2546  001E22  6EDA               	movwf	fsr2h,c
  2547  001E24  0E00               	movlw	0
  2548  001E26  6EDE               	movwf	postinc2,c
  2549  001E28  0E00               	movlw	0
  2550  001E2A  6EDE               	movwf	postinc2,c
  2551  001E2C  0E00               	movlw	0
  2552  001E2E  6EDE               	movwf	postinc2,c
  2553  001E30                     
  2554                           ; BSR set to: 1
  2555                           ;struct.c: 11:     }
  2556  001E30  0102               	movlb	2	; () banked
  2557  001E32  4B08               	infsnz	InitializeElements@i& (0+255),f,b
  2558  001E34  2B09               	incf	(InitializeElements@i+1)& (0+255),f,b
  2559  001E36                     
  2560                           ; BSR set to: 2
  2561  001E36  BF09               	btfsc	(InitializeElements@i+1)& (0+255),7,b
  2562  001E38  EF27  F00F         	goto	u3371
  2563  001E3C  5109               	movf	(InitializeElements@i+1)& (0+255),w,b
  2564  001E3E  E109               	bnz	u3370
  2565  001E40  0E0A               	movlw	10
  2566  001E42  5D08               	subwf	InitializeElements@i& (0+255),w,b
  2567  001E44  A0D8               	btfss	status,0,c
  2568  001E46  EF27  F00F         	goto	u3371
  2569  001E4A  EF29  F00F         	goto	u3370
  2570  001E4E                     u3371:
  2571  001E4E  EF51  F00E         	goto	l4921
  2572  001E52                     u3370:
  2573  001E52                     
  2574                           ; BSR set to: 2
  2575  001E52  0012               	return		;funcret
  2576  001E54                     __end_of_InitializeElements:
  2577                           	opt callstack 0
  2578                           
  2579 ;; *************** function ___wmul *****************
  2580 ;; Defined at:
  2581 ;;		line 15 in file "D:\Programs\MPLABX\pic\sources\c99\common\Umul16.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;  multiplier      2    0[BANK1 ] unsigned int 
  2584 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;  product         2    4[BANK1 ] unsigned int 
  2587 ;; Return value:  Size  Location     Type
  2588 ;;                  2    0[BANK1 ] unsigned int 
  2589 ;; Registers used:
  2590 ;;		wreg, status,2, status,0, prodl, prodh
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 0/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2596 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2597 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2599 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2600 ;;Total ram usage:        6 bytes
  2601 ;; Hardware stack levels used:    1
  2602 ;; Hardware stack levels required when called:    7
  2603 ;; This function calls:
  2604 ;;		Nothing
  2605 ;; This function is called by:
  2606 ;;		_InitializeElements
  2607 ;;		_dispatchISR
  2608 ;;		_RemoveElement
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612                           	psect	text16
  2613  003688                     __ptext16:
  2614                           	opt callstack 0
  2615  003688                     ___wmul:
  2616                           	opt callstack 22
  2617  003688  0101               	movlb	1	; () banked
  2618  00368A  51FA               	movf	___wmul@multiplier& (0+255),w,b
  2619  00368C  03FC               	mulwf	___wmul@multiplicand& (0+255),b
  2620  00368E  CFF3 F1FE          	movff	prodl,___wmul@product
  2621  003692  CFF4 F1FF          	movff	prodh,___wmul@product+1
  2622  003696  51FA               	movf	___wmul@multiplier& (0+255),w,b
  2623  003698  03FD               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  2624  00369A  50F3               	movf	243,w,c
  2625  00369C  27FF               	addwf	(___wmul@product+1)& (0+255),f,b
  2626  00369E  51FB               	movf	(___wmul@multiplier+1)& (0+255),w,b
  2627  0036A0  03FC               	mulwf	___wmul@multiplicand& (0+255),b
  2628  0036A2  50F3               	movf	243,w,c
  2629  0036A4  27FF               	addwf	(___wmul@product+1)& (0+255),f,b
  2630  0036A6                     
  2631                           ; BSR set to: 1
  2632  0036A6  C1FE  F1FA         	movff	___wmul@product,?___wmul
  2633  0036AA  C1FF  F1FB         	movff	___wmul@product+1,?___wmul+1
  2634  0036AE                     
  2635                           ; BSR set to: 1
  2636  0036AE  0012               	return		;funcret
  2637  0036B0                     __end_of___wmul:
  2638                           	opt callstack 0
  2639                           
  2640 ;; *************** function _IFreq_Initialize *****************
  2641 ;; Defined at:
  2642 ;;		line 3 in file "OSCL_TMR_Set_Up.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;		None
  2645 ;; Auto vars:     Size  Location     Type
  2646 ;;		None
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  1    wreg      void 
  2649 ;; Registers used:
  2650 ;;		wreg, status,2
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2660 ;;Total ram usage:        0 bytes
  2661 ;; Hardware stack levels used:    1
  2662 ;; Hardware stack levels required when called:    7
  2663 ;; This function calls:
  2664 ;;		Nothing
  2665 ;; This function is called by:
  2666 ;;		_System_Initialize
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670                           	psect	text17
  2671  003822                     __ptext17:
  2672                           	opt callstack 0
  2673  003822                     _IFreq_Initialize:
  2674                           	opt callstack 22
  2675  003822                     
  2676                           ;OSCL_TMR_Set_Up.c: 5:     OSCCON = 0x73;
  2677  003822  0E73               	movlw	115
  2678  003824  6ED3               	movwf	211,c	;volatile
  2679                           
  2680                           ;OSCL_TMR_Set_Up.c: 6:     OSCTUNE = 0x0F;
  2681  003826  0E0F               	movlw	15
  2682  003828  6E9B               	movwf	155,c	;volatile
  2683  00382A                     
  2684                           ;OSCL_TMR_Set_Up.c: 7:     INTCONbits.GIE = 1;
  2685  00382A  8EF2               	bsf	242,7,c	;volatile
  2686  00382C                     
  2687                           ;OSCL_TMR_Set_Up.c: 8:     INTCONbits.PEIE = 1;
  2688  00382C  8CF2               	bsf	242,6,c	;volatile
  2689  00382E  0012               	return		;funcret
  2690  003830                     __end_of_IFreq_Initialize:
  2691                           	opt callstack 0
  2692                           
  2693 ;; *************** function _FSM *****************
  2694 ;; Defined at:
  2695 ;;		line 73 in file "system.c"
  2696 ;; Parameters:    Size  Location     Type
  2697 ;;		None
  2698 ;; Auto vars:     Size  Location     Type
  2699 ;;		None
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  1    wreg      void 
  2702 ;; Registers used:
  2703 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2711 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2712 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2713 ;;Total ram usage:        2 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; Hardware stack levels required when called:   13
  2716 ;; This function calls:
  2717 ;;		_Heater_Off
  2718 ;;		_Heater_Operation
  2719 ;;		_PrintDemo
  2720 ;;		_PrintHeater
  2721 ;;		_PrintIdle
  2722 ;;		_PrintPump
  2723 ;;		_Pump_Off
  2724 ;;		_Pump_Operation
  2725 ;;		_getTempAndHumid
  2726 ;;		_readDHT
  2727 ;; This function is called by:
  2728 ;;		_main
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           	psect	text18
  2733  001E54                     __ptext18:
  2734                           	opt callstack 0
  2735  001E54                     _FSM:
  2736                           	opt callstack 17
  2737  001E54                     
  2738                           ;system.c: 74:     switch(nextState) {
  2739  001E54  EFDC  F00F         	goto	l5229
  2740  001E58                     l1130:
  2741                           
  2742                           ; BSR set to: 2
  2743                           ;system.c: 76:             LATDbits.LATD7 = 1;
  2744  001E58  8E8C               	bsf	140,7,c	;volatile
  2745                           
  2746                           ;system.c: 77:             LATDbits.LATD6 = 0;
  2747  001E5A  9C8C               	bcf	140,6,c	;volatile
  2748  001E5C                     
  2749                           ; BSR set to: 2
  2750                           ;system.c: 78:             if(idle_flag == 0) {
  2751  001E5C  505E               	movf	_idle_flag^0,w,c
  2752  001E5E  A4D8               	btfss	status,2,c
  2753  001E60  EF34  F00F         	goto	u3721
  2754  001E64  EF36  F00F         	goto	u3720
  2755  001E68                     u3721:
  2756  001E68  EFF7  F00F         	goto	l1151
  2757  001E6C                     u3720:
  2758  001E6C                     
  2759                           ; BSR set to: 2
  2760                           ;system.c: 79:                 LATDbits.LATD7 = LATDbits.LATD5 = 0;
  2761  001E6C  9A8C               	bcf	140,5,c	;volatile
  2762  001E6E  9E8C               	bcf	140,7,c	;volatile
  2763                           
  2764                           ;system.c: 80:                 LATDbits.LATD6 = 1;
  2765  001E70  8C8C               	bsf	140,6,c	;volatile
  2766  001E72                     
  2767                           ; BSR set to: 2
  2768                           ;system.c: 81:                 Heater_Operation();
  2769  001E72  EC31  F01C         	call	_Heater_Operation	;wreg free
  2770  001E76                     
  2771                           ;system.c: 82:                 PrintHeater();
  2772  001E76  EC2F  F01B         	call	_PrintHeater	;wreg free
  2773  001E7A                     
  2774                           ;system.c: 83:                 nextState = STATE1;
  2775  001E7A  0E01               	movlw	1
  2776  001E7C  0100               	movlb	0	; () banked
  2777  001E7E  6FAE               	movwf	_nextState& (0+255),b
  2778  001E80                     l5143:
  2779                           
  2780                           ;system.c: 84:                 TimeOut = 6000;
  2781  001E80  0E17               	movlw	23
  2782  001E82  0100               	movlb	0	; () banked
  2783  001E84  6FDE               	movwf	(_TimeOut+1)& (0+255),b
  2784  001E86  0E70               	movlw	112
  2785  001E88  6FDD               	movwf	_TimeOut& (0+255),b
  2786  001E8A  EFF7  F00F         	goto	l1151
  2787  001E8E                     l5145:
  2788                           
  2789                           ; BSR set to: 2
  2790                           ;system.c: 89:             if(pump_flag == 1) {
  2791  001E8E  0100               	movlb	0	; () banked
  2792  001E90  05A3               	decf	_pump_flag& (0+255),w,b
  2793  001E92  A4D8               	btfss	status,2,c
  2794  001E94  EF4E  F00F         	goto	u3731
  2795  001E98  EF50  F00F         	goto	u3730
  2796  001E9C                     u3731:
  2797  001E9C  EF5B  F00F         	goto	l5155
  2798  001EA0                     u3730:
  2799  001EA0                     
  2800                           ; BSR set to: 0
  2801                           ;system.c: 90:                 Heater_Off();
  2802  001EA0  EC1D  F01C         	call	_Heater_Off	;wreg free
  2803  001EA4                     
  2804                           ;system.c: 91:                 nextState = STATE2;
  2805  001EA4  0E02               	movlw	2
  2806  001EA6  0100               	movlb	0	; () banked
  2807  001EA8  6FAE               	movwf	_nextState& (0+255),b
  2808                           
  2809                           ;system.c: 92:                 Pump_Operation();
  2810  001EAA  EC2F  F01C         	call	_Pump_Operation	;wreg free
  2811  001EAE                     
  2812                           ;system.c: 93:                 PrintPump();
  2813  001EAE  ECE1  F01B         	call	_PrintPump	;wreg free
  2814  001EB2  EF40  F00F         	goto	l5143
  2815  001EB6                     l5155:
  2816                           
  2817                           ; BSR set to: 0
  2818  001EB6  045E               	decf	_idle_flag^0,w,c
  2819  001EB8  A4D8               	btfss	status,2,c
  2820  001EBA  EF61  F00F         	goto	u3741
  2821  001EBE  EF63  F00F         	goto	u3740
  2822  001EC2                     u3741:
  2823  001EC2  EF78  F00F         	goto	l5167
  2824  001EC6                     u3740:
  2825  001EC6                     
  2826                           ; BSR set to: 0
  2827                           ;system.c: 97:                 Heater_Off();
  2828  001EC6  EC1D  F01C         	call	_Heater_Off	;wreg free
  2829                           
  2830                           ;system.c: 98:                 Pump_Off();
  2831  001ECA  EC18  F01C         	call	_Pump_Off	;wreg free
  2832  001ECE                     
  2833                           ;system.c: 99:                 LATDbits.LATD2 = 0;
  2834  001ECE  948C               	bcf	140,2,c	;volatile
  2835  001ED0                     l5161:
  2836                           
  2837                           ;system.c: 100:                 demoTemp = demoHumid = 0;
  2838  001ED0  0E00               	movlw	0
  2839  001ED2  0100               	movlb	0	; () banked
  2840  001ED4  6F9B               	movwf	(_demoHumid+1)& (0+255),b
  2841  001ED6  0E00               	movlw	0
  2842  001ED8  6F9A               	movwf	_demoHumid& (0+255),b
  2843  001EDA  C09A  F09C         	movff	_demoHumid,_demoTemp
  2844  001EDE  C09B  F09D         	movff	_demoHumid+1,_demoTemp+1
  2845  001EE2                     l5163:
  2846                           
  2847                           ;system.c: 101:                 nextState = INIT;
  2848  001EE2  0E00               	movlw	0
  2849  001EE4  0100               	movlb	0	; () banked
  2850  001EE6  6FAE               	movwf	_nextState& (0+255),b
  2851  001EE8                     
  2852                           ; BSR set to: 0
  2853                           ;system.c: 102:                 PrintIdle();
  2854  001EE8  EC1A  F01B         	call	_PrintIdle	;wreg free
  2855                           
  2856                           ;system.c: 103:             }
  2857  001EEC  EFF7  F00F         	goto	l1151
  2858  001EF0                     l5167:
  2859                           
  2860                           ; BSR set to: 0
  2861  001EF0  05A2               	decf	_error_flag& (0+255),w,b
  2862  001EF2  A4D8               	btfss	status,2,c
  2863  001EF4  EF7E  F00F         	goto	u3751
  2864  001EF8  EF80  F00F         	goto	u3750
  2865  001EFC                     u3751:
  2866  001EFC  EF87  F00F         	goto	l5179
  2867  001F00                     u3750:
  2868  001F00                     
  2869                           ; BSR set to: 0
  2870                           ;system.c: 105:                 LATDbits.LATD5 = 1;
  2871  001F00  8A8C               	bsf	140,5,c	;volatile
  2872  001F02                     
  2873                           ; BSR set to: 0
  2874                           ;system.c: 106:                 Heater_Off();
  2875  001F02  EC1D  F01C         	call	_Heater_Off	;wreg free
  2876  001F06                     
  2877                           ;system.c: 107:                 idle_flag = 1;
  2878  001F06  0E01               	movlw	1
  2879  001F08  6E5E               	movwf	_idle_flag^0,c
  2880  001F0A  EF71  F00F         	goto	l5163
  2881  001F0E                     l5179:
  2882                           
  2883                           ; BSR set to: 0
  2884                           ;system.c: 112:                 readDHT();
  2885  001F0E  ECA2  F010         	call	_readDHT	;wreg free
  2886  001F12                     
  2887                           ;system.c: 113:                 if(demo_flag == 0) {
  2888  001F12  0100               	movlb	0	; () banked
  2889  001F14  51A6               	movf	_demo_flag& (0+255),w,b
  2890  001F16  A4D8               	btfss	status,2,c
  2891  001F18  EF90  F00F         	goto	u3761
  2892  001F1C  EF92  F00F         	goto	u3760
  2893  001F20                     u3761:
  2894  001F20  EF96  F00F         	goto	l5185
  2895  001F24                     u3760:
  2896  001F24                     l5183:
  2897                           
  2898                           ; BSR set to: 0
  2899                           ;system.c: 114:                     getTempAndHumid();
  2900  001F24  EC01  F01B         	call	_getTempAndHumid	;wreg free
  2901                           
  2902                           ;system.c: 116:                 } else {
  2903  001F28  EFF7  F00F         	goto	l1151
  2904  001F2C                     l5185:
  2905                           
  2906                           ; BSR set to: 0
  2907                           ;system.c: 117:                     PrintDemo();
  2908  001F2C  EC23  F016         	call	_PrintDemo	;wreg free
  2909  001F30  EFF7  F00F         	goto	l1151
  2910  001F34                     l5187:
  2911                           
  2912                           ; BSR set to: 2
  2913                           ;system.c: 123:             if(heater_flag == 1) {
  2914  001F34  0100               	movlb	0	; () banked
  2915  001F36  05A4               	decf	_heater_flag& (0+255),w,b
  2916  001F38  A4D8               	btfss	status,2,c
  2917  001F3A  EFA1  F00F         	goto	u3771
  2918  001F3E  EFA3  F00F         	goto	u3770
  2919  001F42                     u3771:
  2920  001F42  EFAE  F00F         	goto	l5197
  2921  001F46                     u3770:
  2922  001F46                     
  2923                           ; BSR set to: 0
  2924                           ;system.c: 124:                 Pump_Off();
  2925  001F46  EC18  F01C         	call	_Pump_Off	;wreg free
  2926  001F4A                     
  2927                           ;system.c: 125:                 nextState = STATE1;
  2928  001F4A  0E01               	movlw	1
  2929  001F4C  0100               	movlb	0	; () banked
  2930  001F4E  6FAE               	movwf	_nextState& (0+255),b
  2931                           
  2932                           ;system.c: 126:                 Heater_Operation();
  2933  001F50  EC31  F01C         	call	_Heater_Operation	;wreg free
  2934  001F54                     
  2935                           ;system.c: 127:                 PrintHeater();
  2936  001F54  EC2F  F01B         	call	_PrintHeater	;wreg free
  2937  001F58  EF40  F00F         	goto	l5143
  2938  001F5C                     l5197:
  2939                           
  2940                           ; BSR set to: 0
  2941  001F5C  045E               	decf	_idle_flag^0,w,c
  2942  001F5E  A4D8               	btfss	status,2,c
  2943  001F60  EFB4  F00F         	goto	u3781
  2944  001F64  EFB6  F00F         	goto	u3780
  2945  001F68                     u3781:
  2946  001F68  EFBD  F00F         	goto	l5209
  2947  001F6C                     u3780:
  2948  001F6C                     
  2949                           ; BSR set to: 0
  2950                           ;system.c: 131:                 Heater_Off();
  2951  001F6C  EC1D  F01C         	call	_Heater_Off	;wreg free
  2952                           
  2953                           ;system.c: 132:                 Pump_Off();
  2954  001F70  EC18  F01C         	call	_Pump_Off	;wreg free
  2955  001F74                     
  2956                           ;system.c: 133:                 LATDbits.LATD2 = 0;
  2957  001F74  948C               	bcf	140,2,c	;volatile
  2958  001F76  EF68  F00F         	goto	l5161
  2959  001F7A                     l5209:
  2960                           
  2961                           ; BSR set to: 0
  2962  001F7A  05A2               	decf	_error_flag& (0+255),w,b
  2963  001F7C  A4D8               	btfss	status,2,c
  2964  001F7E  EFC3  F00F         	goto	u3791
  2965  001F82  EFC5  F00F         	goto	u3790
  2966  001F86                     u3791:
  2967  001F86  EFCF  F00F         	goto	l5219
  2968  001F8A                     u3790:
  2969  001F8A                     
  2970                           ; BSR set to: 0
  2971                           ;system.c: 139:                 LATDbits.LATD5 = 1;
  2972  001F8A  8A8C               	bsf	140,5,c	;volatile
  2973  001F8C                     
  2974                           ; BSR set to: 0
  2975                           ;system.c: 140:                 Pump_Off();
  2976  001F8C  EC18  F01C         	call	_Pump_Off	;wreg free
  2977  001F90                     
  2978                           ;system.c: 141:                 idle_flag = 1;
  2979  001F90  0E01               	movlw	1
  2980  001F92  6E5E               	movwf	_idle_flag^0,c
  2981  001F94                     
  2982                           ;system.c: 142:                 nextState = INIT;
  2983  001F94  0E00               	movlw	0
  2984  001F96  0100               	movlb	0	; () banked
  2985  001F98  6FAE               	movwf	_nextState& (0+255),b
  2986                           
  2987                           ;system.c: 143:             }
  2988  001F9A  EFF7  F00F         	goto	l1151
  2989  001F9E                     l5219:
  2990                           
  2991                           ; BSR set to: 0
  2992                           ;system.c: 145:                 readDHT();
  2993  001F9E  ECA2  F010         	call	_readDHT	;wreg free
  2994  001FA2                     
  2995                           ;system.c: 146:                 if(demo_flag == 0) {
  2996  001FA2  0100               	movlb	0	; () banked
  2997  001FA4  51A6               	movf	_demo_flag& (0+255),w,b
  2998  001FA6  A4D8               	btfss	status,2,c
  2999  001FA8  EFD8  F00F         	goto	u3801
  3000  001FAC  EFDA  F00F         	goto	u3800
  3001  001FB0                     u3801:
  3002  001FB0  EF96  F00F         	goto	l5185
  3003  001FB4                     u3800:
  3004  001FB4  EF92  F00F         	goto	l5183
  3005  001FB8                     l5229:
  3006  001FB8  0100               	movlb	0	; () banked
  3007  001FBA  51AE               	movf	_nextState& (0+255),w,b
  3008  001FBC  0102               	movlb	2	; () banked
  3009  001FBE  6F08               	movwf	??_FSM& (0+255),b
  3010  001FC0  6B09               	clrf	(??_FSM+1)& (0+255),b
  3011                           
  3012                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3013                           ; Switch size 1, requested type "simple"
  3014                           ; Number of cases is 1, Range of values is 0 to 0
  3015                           ; switch strategies available:
  3016                           ; Name         Instructions Cycles
  3017                           ; simple_byte            4     3 (average)
  3018                           ;	Chosen strategy is simple_byte
  3019  001FC2  5109               	movf	(??_FSM+1)& (0+255),w,b
  3020  001FC4  0A00               	xorlw	0	; case 0
  3021  001FC6  B4D8               	btfsc	status,2,c
  3022  001FC8  EFE8  F00F         	goto	l5487
  3023  001FCC  EFF7  F00F         	goto	l1151
  3024  001FD0                     l5487:
  3025                           
  3026                           ; BSR set to: 2
  3027                           ; Switch size 1, requested type "simple"
  3028                           ; Number of cases is 3, Range of values is 0 to 2
  3029                           ; switch strategies available:
  3030                           ; Name         Instructions Cycles
  3031                           ; simple_byte           10     6 (average)
  3032                           ;	Chosen strategy is simple_byte
  3033  001FD0  5108               	movf	??_FSM& (0+255),w,b
  3034  001FD2  0A00               	xorlw	0	; case 0
  3035  001FD4  B4D8               	btfsc	status,2,c
  3036  001FD6  EF2C  F00F         	goto	l1130
  3037  001FDA  0A01               	xorlw	1	; case 1
  3038  001FDC  B4D8               	btfsc	status,2,c
  3039  001FDE  EF47  F00F         	goto	l5145
  3040  001FE2  0A03               	xorlw	3	; case 2
  3041  001FE4  B4D8               	btfsc	status,2,c
  3042  001FE6  EF9A  F00F         	goto	l5187
  3043  001FEA  EFF7  F00F         	goto	l1151
  3044  001FEE                     l1151:
  3045  001FEE  0012               	return		;funcret
  3046  001FF0                     __end_of_FSM:
  3047                           	opt callstack 0
  3048                           
  3049 ;; *************** function _readDHT *****************
  3050 ;; Defined at:
  3051 ;;		line 31 in file "DHT.c"
  3052 ;; Parameters:    Size  Location     Type
  3053 ;;		None
  3054 ;; Auto vars:     Size  Location     Type
  3055 ;;  timeOut         2    3[BANK2 ] unsigned int 
  3056 ;;  test            1    2[BANK2 ] unsigned char 
  3057 ;; Return value:  Size  Location     Type
  3058 ;;                  1    wreg      unsigned char 
  3059 ;; Registers used:
  3060 ;;		wreg, status,2, status,0, cstack
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3067 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3068 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3069 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3070 ;;Total ram usage:        5 bytes
  3071 ;; Hardware stack levels used:    1
  3072 ;; Hardware stack levels required when called:    8
  3073 ;; This function calls:
  3074 ;;		_getByte
  3075 ;; This function is called by:
  3076 ;;		_FSM
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           
  3080                           	psect	text19
  3081  002144                     __ptext19:
  3082                           	opt callstack 0
  3083  002144                     _readDHT:
  3084                           	opt callstack 21
  3085  002144                     
  3086                           ;DHT.c: 32:     unsigned int timeOut = 10000000;
  3087  002144  0E96               	movlw	150
  3088  002146  0102               	movlb	2	; () banked
  3089  002148  6F04               	movwf	(readDHT@timeOut+1)& (0+255),b
  3090  00214A  0E80               	movlw	128
  3091  00214C  6F03               	movwf	readDHT@timeOut& (0+255),b
  3092  00214E                     
  3093                           ; BSR set to: 2
  3094                           ;DHT.c: 33:     TRISDbits.TRISD0 = 0;
  3095  00214E  9095               	bcf	149,0,c	;volatile
  3096  002150                     
  3097                           ; BSR set to: 2
  3098                           ;DHT.c: 34:     LATDbits.LATD0 = 0;
  3099  002150  908C               	bcf	140,0,c	;volatile
  3100  002152                     
  3101                           ; BSR set to: 2
  3102                           ;DHT.c: 35:     _delay((unsigned long)((20)*(10000000/4000.0)));
  3103  002152  0E41               	movlw	65
  3104  002154  0102               	movlb	2	; () banked
  3105  002156  6F00               	movwf	??_readDHT& (0+255),b
  3106  002158  0EEE               	movlw	238
  3107  00215A                     u4077:
  3108  00215A  2EE8               	decfsz	wreg,f,c
  3109  00215C  D7FE               	bra	u4077
  3110  00215E  2F00               	decfsz	??_readDHT& (0+255),f,b
  3111  002160  D7FC               	bra	u4077
  3112  002162  F000               	nop	
  3113  002164                     
  3114                           ;DHT.c: 37:     LATDbits.LATD0 = 1;
  3115  002164  808C               	bsf	140,0,c	;volatile
  3116  002166                     
  3117                           ;DHT.c: 38:     _delay((unsigned long)((20)*(10000000/4000000.0)));
  3118  002166  0E10               	movlw	16
  3119  002168                     u4087:
  3120  002168  2EE8               	decfsz	wreg,f,c
  3121  00216A  D7FE               	bra	u4087
  3122  00216C  D000               	nop2	
  3123  00216E                     
  3124                           ;DHT.c: 39:     TRISDbits.TRISD0 = 1;
  3125  00216E  8095               	bsf	149,0,c	;volatile
  3126                           
  3127                           ;DHT.c: 41:     while(PORTDbits.RD0 & 1) {
  3128  002170  EFCC  F010         	goto	l780
  3129  002174                     l4951:
  3130                           
  3131                           ;DHT.c: 43:         if(--timeOut == 0) {
  3132  002174  0102               	movlb	2	; () banked
  3133  002176  0703               	decf	readDHT@timeOut& (0+255),f,b
  3134  002178  A0D8               	btfss	status,0,c
  3135  00217A  0704               	decf	(readDHT@timeOut+1)& (0+255),f,b
  3136  00217C  5103               	movf	readDHT@timeOut& (0+255),w,b
  3137  00217E  1104               	iorwf	(readDHT@timeOut+1)& (0+255),w,b
  3138  002180  A4D8               	btfss	status,2,c
  3139  002182  EFC5  F010         	goto	u3381
  3140  002186  EFC7  F010         	goto	u3380
  3141  00218A                     u3381:
  3142  00218A  EFCC  F010         	goto	l780
  3143  00218E                     u3380:
  3144  00218E                     l4953:
  3145                           
  3146                           ; BSR set to: 2
  3147                           ;DHT.c: 44:             error = 1;
  3148  00218E  0E01               	movlw	1
  3149  002190  0100               	movlb	0	; () banked
  3150  002192  6F9E               	movwf	_error& (0+255),b
  3151  002194  EF3F  F011         	goto	l783
  3152  002198                     l780:
  3153                           
  3154                           ;DHT.c: 41:     while(PORTDbits.RD0 & 1) {
  3155  002198  B083               	btfsc	131,0,c	;volatile
  3156  00219A  EFD1  F010         	goto	u3391
  3157  00219E  EFD3  F010         	goto	u3390
  3158  0021A2                     u3391:
  3159  0021A2  EFBA  F010         	goto	l4951
  3160  0021A6                     u3390:
  3161  0021A6                     
  3162                           ;DHT.c: 49:     timeOut = 10000000;
  3163  0021A6  0E96               	movlw	150
  3164  0021A8  0102               	movlb	2	; () banked
  3165  0021AA  6F04               	movwf	(readDHT@timeOut+1)& (0+255),b
  3166  0021AC  0E80               	movlw	128
  3167  0021AE  6F03               	movwf	readDHT@timeOut& (0+255),b
  3168                           
  3169                           ;DHT.c: 50:     while(!PORTDbits.RD0 & 1) {
  3170  0021B0  EFE8  F010         	goto	l4965
  3171  0021B4                     l4959:
  3172                           
  3173                           ; BSR set to: 2
  3174                           ;DHT.c: 52:         if(--timeOut == 0) {
  3175  0021B4  0703               	decf	readDHT@timeOut& (0+255),f,b
  3176  0021B6  A0D8               	btfss	status,0,c
  3177  0021B8  0704               	decf	(readDHT@timeOut+1)& (0+255),f,b
  3178  0021BA  5103               	movf	readDHT@timeOut& (0+255),w,b
  3179  0021BC  1104               	iorwf	(readDHT@timeOut+1)& (0+255),w,b
  3180  0021BE  A4D8               	btfss	status,2,c
  3181  0021C0  EFE4  F010         	goto	u3401
  3182  0021C4  EFE6  F010         	goto	u3400
  3183  0021C8                     u3401:
  3184  0021C8  EFE8  F010         	goto	l4965
  3185  0021CC                     u3400:
  3186  0021CC  EFC7  F010         	goto	l4953
  3187  0021D0                     l4965:
  3188                           
  3189                           ; BSR set to: 2
  3190                           ;DHT.c: 50:     while(!PORTDbits.RD0 & 1) {
  3191  0021D0  A083               	btfss	131,0,c	;volatile
  3192  0021D2  EFED  F010         	goto	u3411
  3193  0021D6  EFF0  F010         	goto	u3410
  3194  0021DA                     u3411:
  3195  0021DA  0E01               	movlw	1
  3196  0021DC  EFF1  F010         	goto	u3420
  3197  0021E0                     u3410:
  3198  0021E0  0E00               	movlw	0
  3199  0021E2                     u3420:
  3200  0021E2  6F00               	movwf	??_readDHT& (0+255),b
  3201  0021E4  6B01               	clrf	(??_readDHT+1)& (0+255),b
  3202  0021E6  B100               	btfsc	??_readDHT& (0+255),0,b
  3203  0021E8  EFF8  F010         	goto	u3431
  3204  0021EC  EFFA  F010         	goto	u3430
  3205  0021F0                     u3431:
  3206  0021F0  EFDA  F010         	goto	l4959
  3207  0021F4                     u3430:
  3208  0021F4                     
  3209                           ; BSR set to: 2
  3210                           ;DHT.c: 58:     timeOut = 10000000;
  3211  0021F4  0E96               	movlw	150
  3212  0021F6  6F04               	movwf	(readDHT@timeOut+1)& (0+255),b
  3213  0021F8  0E80               	movlw	128
  3214  0021FA  6F03               	movwf	readDHT@timeOut& (0+255),b
  3215                           
  3216                           ;DHT.c: 59:     while(PORTDbits.RD0 & 1) {
  3217  0021FC  EF0E  F011         	goto	l789
  3218  002200                     l4969:
  3219                           
  3220                           ; BSR set to: 2
  3221                           ;DHT.c: 61:         if(--timeOut == 0) {
  3222  002200  0703               	decf	readDHT@timeOut& (0+255),f,b
  3223  002202  A0D8               	btfss	status,0,c
  3224  002204  0704               	decf	(readDHT@timeOut+1)& (0+255),f,b
  3225  002206  5103               	movf	readDHT@timeOut& (0+255),w,b
  3226  002208  1104               	iorwf	(readDHT@timeOut+1)& (0+255),w,b
  3227  00220A  A4D8               	btfss	status,2,c
  3228  00220C  EF0A  F011         	goto	u3441
  3229  002210  EF0C  F011         	goto	u3440
  3230  002214                     u3441:
  3231  002214  EF0E  F011         	goto	l789
  3232  002218                     u3440:
  3233  002218  EFC7  F010         	goto	l4953
  3234  00221C                     l789:
  3235                           
  3236                           ; BSR set to: 2
  3237                           ;DHT.c: 59:     while(PORTDbits.RD0 & 1) {
  3238  00221C  B083               	btfsc	131,0,c	;volatile
  3239  00221E  EF13  F011         	goto	u3451
  3240  002222  EF15  F011         	goto	u3450
  3241  002226                     u3451:
  3242  002226  EF00  F011         	goto	l4969
  3243  00222A                     u3450:
  3244  00222A                     
  3245                           ; BSR set to: 2
  3246                           ;DHT.c: 67:     humidity_dht11[0] = getByte();
  3247  00222A  EC69  F012         	call	_getByte	;wreg free
  3248  00222E  0100               	movlb	0	; () banked
  3249  002230  6F8E               	movwf	_humidity_dht11& (0+255),b
  3250                           
  3251                           ;DHT.c: 68:     humidity_dht11[1] = getByte();
  3252  002232  EC69  F012         	call	_getByte	;wreg free
  3253  002236  0100               	movlb	0	; () banked
  3254  002238  6F8F               	movwf	(_humidity_dht11+1)& (0+255),b
  3255                           
  3256                           ;DHT.c: 69:     temperature_dht11[0] = getByte();
  3257  00223A  EC69  F012         	call	_getByte	;wreg free
  3258  00223E  0100               	movlb	0	; () banked
  3259  002240  6F90               	movwf	_temperature_dht11& (0+255),b
  3260                           
  3261                           ;DHT.c: 70:     temperature_dht11[1] = getByte();
  3262  002242  EC69  F012         	call	_getByte	;wreg free
  3263  002246  0100               	movlb	0	; () banked
  3264  002248  6F91               	movwf	(_temperature_dht11+1)& (0+255),b
  3265                           
  3266                           ;DHT.c: 71:     checkSum = getByte();
  3267  00224A  EC69  F012         	call	_getByte	;wreg free
  3268  00224E  0100               	movlb	0	; () banked
  3269  002250  6FA0               	movwf	_checkSum& (0+255),b
  3270  002252                     
  3271                           ; BSR set to: 0
  3272                           ;DHT.c: 73:     char test = (humidity_dht11[0] + humidity_dht11[1] + temperature_dht11[0
      +                          ] + temperature_dht11[1] ) & 0xFF;
  3273  002252  518F               	movf	(_humidity_dht11+1)& (0+255),w,b
  3274  002254  2591               	addwf	(_temperature_dht11+1)& (0+255),w,b
  3275  002256  258E               	addwf	_humidity_dht11& (0+255),w,b
  3276  002258  2590               	addwf	_temperature_dht11& (0+255),w,b
  3277  00225A  0102               	movlb	2	; () banked
  3278  00225C  6F02               	movwf	readDHT@test& (0+255),b
  3279  00225E                     
  3280                           ; BSR set to: 2
  3281                           ;DHT.c: 74:     if( test != checkSum ) {
  3282  00225E  0100               	movlb	0	; () banked
  3283  002260  51A0               	movf	_checkSum& (0+255),w,b
  3284  002262  0102               	movlb	2	; () banked
  3285  002264  1902               	xorwf	readDHT@test& (0+255),w,b
  3286  002266  B4D8               	btfsc	status,2,c
  3287  002268  EF38  F011         	goto	u3461
  3288  00226C  EF3A  F011         	goto	u3460
  3289  002270                     u3461:
  3290  002270  EF3C  F011         	goto	l4985
  3291  002274                     u3460:
  3292  002274  EFC7  F010         	goto	l4953
  3293  002278                     l4985:
  3294                           
  3295                           ; BSR set to: 2
  3296                           ;DHT.c: 79:     error = 0;
  3297  002278  0E00               	movlw	0
  3298  00227A  0100               	movlb	0	; () banked
  3299  00227C  6F9E               	movwf	_error& (0+255),b
  3300  00227E                     l783:
  3301                           
  3302                           ; BSR set to: 0
  3303  00227E  0012               	return		;funcret
  3304  002280                     __end_of_readDHT:
  3305                           	opt callstack 0
  3306                           
  3307 ;; *************** function _getByte *****************
  3308 ;; Defined at:
  3309 ;;		line 8 in file "DHT.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;		None
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;  timeOut         2    3[BANK1 ] unsigned int 
  3314 ;;  j               1    5[BANK1 ] unsigned char 
  3315 ;;  i               1    2[BANK1 ] unsigned char 
  3316 ;; Return value:  Size  Location     Type
  3317 ;;                  1    wreg      unsigned char 
  3318 ;; Registers used:
  3319 ;;		wreg, status,2, status,0
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3326 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3327 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3328 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3329 ;;Total ram usage:        6 bytes
  3330 ;; Hardware stack levels used:    1
  3331 ;; Hardware stack levels required when called:    7
  3332 ;; This function calls:
  3333 ;;		Nothing
  3334 ;; This function is called by:
  3335 ;;		_readDHT
  3336 ;; This function uses a non-reentrant model
  3337 ;;
  3338                           
  3339                           	psect	text20
  3340  0024D2                     __ptext20:
  3341                           	opt callstack 0
  3342  0024D2                     _getByte:
  3343                           	opt callstack 21
  3344  0024D2                     
  3345                           ;DHT.c: 12:     for(j = 0; j < 8; j++)
  3346  0024D2  0E00               	movlw	0
  3347  0024D4  0101               	movlb	1	; () banked
  3348  0024D6  6FFF               	movwf	getByte@j& (0+255),b
  3349  0024D8                     l4799:
  3350                           
  3351                           ; BSR set to: 1
  3352                           ;DHT.c: 13:     {;DHT.c: 14:         timeOut = 10000000;
  3353  0024D8  0E96               	movlw	150
  3354  0024DA  6FFE               	movwf	(getByte@timeOut+1)& (0+255),b
  3355  0024DC  0E80               	movlw	128
  3356  0024DE  6FFD               	movwf	getByte@timeOut& (0+255),b
  3357                           
  3358                           ;DHT.c: 15:         while(!PORTDbits.RD0 & 1)
  3359  0024E0  EF81  F012         	goto	l4807
  3360  0024E4                     l4801:
  3361                           
  3362                           ; BSR set to: 1
  3363                           ;DHT.c: 16:             if(--timeOut == 0) return 0;
  3364  0024E4  07FD               	decf	getByte@timeOut& (0+255),f,b
  3365  0024E6  A0D8               	btfss	status,0,c
  3366  0024E8  07FE               	decf	(getByte@timeOut+1)& (0+255),f,b
  3367  0024EA  51FD               	movf	getByte@timeOut& (0+255),w,b
  3368  0024EC  11FE               	iorwf	(getByte@timeOut+1)& (0+255),w,b
  3369  0024EE  A4D8               	btfss	status,2,c
  3370  0024F0  EF7C  F012         	goto	u3271
  3371  0024F4  EF7E  F012         	goto	u3270
  3372  0024F8                     u3271:
  3373  0024F8  EF81  F012         	goto	l4807
  3374  0024FC                     u3270:
  3375  0024FC                     l4803:
  3376                           
  3377                           ; BSR set to: 1
  3378  0024FC  0E00               	movlw	0
  3379  0024FE  EFE8  F012         	goto	l770
  3380  002502                     l4807:
  3381                           
  3382                           ; BSR set to: 1
  3383                           ;DHT.c: 15:         while(!PORTDbits.RD0 & 1)
  3384  002502  A083               	btfss	131,0,c	;volatile
  3385  002504  EF86  F012         	goto	u3281
  3386  002508  EF89  F012         	goto	u3280
  3387  00250C                     u3281:
  3388  00250C  0E01               	movlw	1
  3389  00250E  EF8A  F012         	goto	u3290
  3390  002512                     u3280:
  3391  002512  0E00               	movlw	0
  3392  002514                     u3290:
  3393  002514  6FFA               	movwf	??_getByte& (0+255),b
  3394  002516  6BFB               	clrf	(??_getByte+1)& (0+255),b
  3395  002518  B1FA               	btfsc	??_getByte& (0+255),0,b
  3396  00251A  EF91  F012         	goto	u3301
  3397  00251E  EF93  F012         	goto	u3300
  3398  002522                     u3301:
  3399  002522  EF72  F012         	goto	l4801
  3400  002526                     u3300:
  3401  002526                     
  3402                           ; BSR set to: 1
  3403                           ;DHT.c: 17:         _delay((unsigned long)((28)*(10000000/4000000.0)));
  3404  002526  0E17               	movlw	23
  3405  002528                     u4097:
  3406  002528  2EE8               	decfsz	wreg,f,c
  3407  00252A  D7FE               	bra	u4097
  3408  00252C  F000               	nop	
  3409  00252E                     
  3410                           ;DHT.c: 18:         if(PORTDbits.RD0 == 0){
  3411  00252E  B083               	btfsc	131,0,c	;volatile
  3412  002530  EF9C  F012         	goto	u3311
  3413  002534  EF9E  F012         	goto	u3310
  3414  002538                     u3311:
  3415  002538  EFB2  F012         	goto	l4815
  3416  00253C                     u3310:
  3417  00253C                     
  3418                           ;DHT.c: 19:             i &= ~(1<<(7 - j));
  3419  00253C  0101               	movlb	1	; () banked
  3420  00253E  51FF               	movf	getByte@j& (0+255),w,b
  3421  002540  0807               	sublw	7
  3422  002542  6FFA               	movwf	??_getByte& (0+255),b
  3423  002544  0E01               	movlw	1
  3424  002546  6FFB               	movwf	(??_getByte+1)& (0+255),b
  3425  002548  2BFA               	incf	??_getByte& (0+255),f,b
  3426  00254A  EFA9  F012         	goto	u3324
  3427  00254E                     u3325:
  3428  00254E  90D8               	bcf	status,0,c
  3429  002550  37FB               	rlcf	(??_getByte+1)& (0+255),f,b
  3430  002552                     u3324:
  3431  002552  2FFA               	decfsz	??_getByte& (0+255),f,b
  3432  002554  EFA7  F012         	goto	u3325
  3433  002558  0101               	movlb	1	; () banked
  3434  00255A  51FB               	movf	(??_getByte+1)& (0+255),w,b
  3435  00255C  0AFF               	xorlw	255
  3436  00255E  17FC               	andwf	getByte@i& (0+255),f,b
  3437                           
  3438                           ;DHT.c: 20:         }
  3439  002560  EFC3  F012         	goto	l4817
  3440  002564                     l4815:
  3441                           
  3442                           ;DHT.c: 22:             i |= (1 << (7 - j));
  3443  002564  0101               	movlb	1	; () banked
  3444  002566  51FF               	movf	getByte@j& (0+255),w,b
  3445  002568  0807               	sublw	7
  3446  00256A  6FFA               	movwf	??_getByte& (0+255),b
  3447  00256C  0E01               	movlw	1
  3448  00256E  6FFB               	movwf	(??_getByte+1)& (0+255),b
  3449  002570  2BFA               	incf	??_getByte& (0+255),f,b
  3450  002572  EFBD  F012         	goto	u3334
  3451  002576                     u3335:
  3452  002576  90D8               	bcf	status,0,c
  3453  002578  37FB               	rlcf	(??_getByte+1)& (0+255),f,b
  3454  00257A                     u3334:
  3455  00257A  2FFA               	decfsz	??_getByte& (0+255),f,b
  3456  00257C  EFBB  F012         	goto	u3335
  3457  002580  0101               	movlb	1	; () banked
  3458  002582  51FB               	movf	(??_getByte+1)& (0+255),w,b
  3459  002584  13FC               	iorwf	getByte@i& (0+255),f,b
  3460  002586                     l4817:
  3461                           
  3462                           ; BSR set to: 1
  3463                           ;DHT.c: 24:         timeOut = 10000000;
  3464  002586  0E96               	movlw	150
  3465  002588  6FFE               	movwf	(getByte@timeOut+1)& (0+255),b
  3466  00258A  0E80               	movlw	128
  3467  00258C  6FFD               	movwf	getByte@timeOut& (0+255),b
  3468                           
  3469                           ;DHT.c: 25:         while(PORTDbits.RD0 & 1)
  3470  00258E  EFD7  F012         	goto	l774
  3471  002592                     l4819:
  3472                           
  3473                           ; BSR set to: 1
  3474                           ;DHT.c: 26:             if(--timeOut == 0) return 0;
  3475  002592  07FD               	decf	getByte@timeOut& (0+255),f,b
  3476  002594  A0D8               	btfss	status,0,c
  3477  002596  07FE               	decf	(getByte@timeOut+1)& (0+255),f,b
  3478  002598  51FD               	movf	getByte@timeOut& (0+255),w,b
  3479  00259A  11FE               	iorwf	(getByte@timeOut+1)& (0+255),w,b
  3480  00259C  A4D8               	btfss	status,2,c
  3481  00259E  EFD3  F012         	goto	u3341
  3482  0025A2  EFD5  F012         	goto	u3340
  3483  0025A6                     u3341:
  3484  0025A6  EFD7  F012         	goto	l774
  3485  0025AA                     u3340:
  3486  0025AA  EF7E  F012         	goto	l4803
  3487  0025AE                     l774:
  3488                           
  3489                           ; BSR set to: 1
  3490                           ;DHT.c: 25:         while(PORTDbits.RD0 & 1)
  3491  0025AE  B083               	btfsc	131,0,c	;volatile
  3492  0025B0  EFDC  F012         	goto	u3351
  3493  0025B4  EFDE  F012         	goto	u3350
  3494  0025B8                     u3351:
  3495  0025B8  EFC9  F012         	goto	l4819
  3496  0025BC                     u3350:
  3497  0025BC                     
  3498                           ; BSR set to: 1
  3499                           ;DHT.c: 27:     }
  3500  0025BC  2BFF               	incf	getByte@j& (0+255),f,b
  3501  0025BE                     
  3502                           ; BSR set to: 1
  3503  0025BE  0E07               	movlw	7
  3504  0025C0  65FF               	cpfsgt	getByte@j& (0+255),b
  3505  0025C2  EFE5  F012         	goto	u3361
  3506  0025C6  EFE7  F012         	goto	u3360
  3507  0025CA                     u3361:
  3508  0025CA  EF6C  F012         	goto	l4799
  3509  0025CE                     u3360:
  3510  0025CE                     
  3511                           ; BSR set to: 1
  3512                           ;DHT.c: 28:     return i;
  3513  0025CE  51FC               	movf	getByte@i& (0+255),w,b
  3514  0025D0                     l770:
  3515                           
  3516                           ; BSR set to: 1
  3517  0025D0  0012               	return		;funcret
  3518  0025D2                     __end_of_getByte:
  3519                           	opt callstack 0
  3520                           
  3521 ;; *************** function _getTempAndHumid *****************
  3522 ;; Defined at:
  3523 ;;		line 83 in file "DHT.c"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;		None
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;		None
  3528 ;; Return value:  Size  Location     Type
  3529 ;;                  1    wreg      void 
  3530 ;; Registers used:
  3531 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3532 ;; Tracked objects:
  3533 ;;		On entry : 0/0
  3534 ;;		On exit  : 0/0
  3535 ;;		Unchanged: 0/0
  3536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3541 ;;Total ram usage:        0 bytes
  3542 ;; Hardware stack levels used:    1
  3543 ;; Hardware stack levels required when called:   12
  3544 ;; This function calls:
  3545 ;;		_PrintTempHumid
  3546 ;; This function is called by:
  3547 ;;		_FSM
  3548 ;; This function uses a non-reentrant model
  3549 ;;
  3550                           
  3551                           	psect	text21
  3552  003602                     __ptext21:
  3553                           	opt callstack 0
  3554  003602                     _getTempAndHumid:
  3555                           	opt callstack 17
  3556  003602                     
  3557                           ;DHT.c: 88:     if(error == 1) {
  3558  003602  0100               	movlb	0	; () banked
  3559  003604  059E               	decf	_error& (0+255),w,b
  3560  003606  A4D8               	btfss	status,2,c
  3561  003608  EF08  F01B         	goto	u3471
  3562  00360C  EF0A  F01B         	goto	u3470
  3563  003610                     u3471:
  3564  003610  EF0C  F01B         	goto	l796
  3565  003614                     u3470:
  3566  003614  EF19  F01B         	goto	l797
  3567  003618                     l796:
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;DHT.c: 91:     Temp = temperature_dht11[0];
  3571  003618  C090  F098         	movff	_temperature_dht11,_Temp
  3572  00361C  6B99               	clrf	(_Temp+1)& (0+255),b
  3573                           
  3574                           ;DHT.c: 92:     Humid = humidity_dht11[0];
  3575  00361E  C08E  F096         	movff	_humidity_dht11,_Humid
  3576  003622  6B97               	clrf	(_Humid+1)& (0+255),b
  3577  003624                     
  3578                           ; BSR set to: 0
  3579                           ;DHT.c: 93:     PrintTempHumid(1);
  3580  003624  0E00               	movlw	0
  3581  003626  0102               	movlb	2	; () banked
  3582  003628  6F07               	movwf	(PrintTempHumid@val+1)& (0+255),b
  3583  00362A  0E01               	movlw	1
  3584  00362C  6F06               	movwf	PrintTempHumid@val& (0+255),b
  3585  00362E  ECD1  F013         	call	_PrintTempHumid	;wreg free
  3586  003632                     l797:
  3587  003632  0012               	return		;funcret
  3588  003634                     __end_of_getTempAndHumid:
  3589                           	opt callstack 0
  3590                           
  3591 ;; *************** function _PrintTempHumid *****************
  3592 ;; Defined at:
  3593 ;;		line 233 in file "LCD.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;  val             2    6[BANK2 ] int 
  3596 ;; Auto vars:     Size  Location     Type
  3597 ;;		None
  3598 ;; Return value:  Size  Location     Type
  3599 ;;                  1    wreg      void 
  3600 ;; Registers used:
  3601 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3602 ;; Tracked objects:
  3603 ;;		On entry : 0/0
  3604 ;;		On exit  : 0/0
  3605 ;;		Unchanged: 0/0
  3606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3607 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3610 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3611 ;;Total ram usage:        2 bytes
  3612 ;; Hardware stack levels used:    1
  3613 ;; Hardware stack levels required when called:   11
  3614 ;; This function calls:
  3615 ;;		_LCDMoveCursor
  3616 ;;		_LCDPutChar
  3617 ;;		_LCDPutStr
  3618 ;;		___awdiv
  3619 ;;		___awmod
  3620 ;; This function is called by:
  3621 ;;		_getTempAndHumid
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625                           	psect	text22
  3626  0027A2                     __ptext22:
  3627                           	opt callstack 0
  3628  0027A2                     _PrintTempHumid:
  3629                           	opt callstack 17
  3630  0027A2                     
  3631                           ;LCD.c: 234:     if(val == 1) {
  3632  0027A2  0102               	movlb	2	; () banked
  3633  0027A4  0506               	decf	PrintTempHumid@val& (0+255),w,b
  3634  0027A6  1107               	iorwf	(PrintTempHumid@val+1)& (0+255),w,b
  3635  0027A8  A4D8               	btfss	status,2,c
  3636  0027AA  EFD9  F013         	goto	u3261
  3637  0027AE  EFDB  F013         	goto	u3260
  3638  0027B2                     u3261:
  3639  0027B2  EF28  F014         	goto	l4785
  3640  0027B6                     u3260:
  3641  0027B6                     
  3642                           ; BSR set to: 2
  3643                           ;LCD.c: 235:         LCDMoveCursor(1, 0x4);
  3644  0027B6  0E04               	movlw	4
  3645  0027B8  6F01               	movwf	LCDMoveCursor@pos& (0+255),b
  3646  0027BA  0E01               	movlw	1
  3647  0027BC  EC4A  F01A         	call	_LCDMoveCursor
  3648                           
  3649                           ;LCD.c: 236:         LCDPutChar(Temp/10 + '0');
  3650  0027C0  C098  F1FA         	movff	_Temp,___awdiv@dividend
  3651  0027C4  C099  F1FB         	movff	_Temp+1,___awdiv@dividend+1
  3652  0027C8  0E00               	movlw	0
  3653  0027CA  0101               	movlb	1	; () banked
  3654  0027CC  6FFD               	movwf	(___awdiv@divisor+1)& (0+255),b
  3655  0027CE  0E0A               	movlw	10
  3656  0027D0  6FFC               	movwf	___awdiv@divisor& (0+255),b
  3657  0027D2  EC5F  F013         	call	___awdiv	;wreg free
  3658  0027D6  0101               	movlb	1	; () banked
  3659  0027D8  51FA               	movf	?___awdiv& (0+255),w,b
  3660  0027DA  0F30               	addlw	48
  3661  0027DC  EC40  F017         	call	_LCDPutChar
  3662                           
  3663                           ;LCD.c: 237:         LCDPutChar(Temp%10 + '0');
  3664  0027E0  C098  F1FA         	movff	_Temp,___awmod@dividend
  3665  0027E4  C099  F1FB         	movff	_Temp+1,___awmod@dividend+1
  3666  0027E8  0E00               	movlw	0
  3667  0027EA  0101               	movlb	1	; () banked
  3668  0027EC  6FFD               	movwf	(___awmod@divisor+1)& (0+255),b
  3669  0027EE  0E0A               	movlw	10
  3670  0027F0  6FFC               	movwf	___awmod@divisor& (0+255),b
  3671  0027F2  EC72  F015         	call	___awmod	;wreg free
  3672  0027F6  0101               	movlb	1	; () banked
  3673  0027F8  51FA               	movf	?___awmod& (0+255),w,b
  3674  0027FA  0F30               	addlw	48
  3675  0027FC  EC40  F017         	call	_LCDPutChar
  3676                           
  3677                           ;LCD.c: 238:         LCDMoveCursor(1, 0xB);
  3678  002800  0E0B               	movlw	11
  3679  002802  0102               	movlb	2	; () banked
  3680  002804  6F01               	movwf	LCDMoveCursor@pos& (0+255),b
  3681  002806  0E01               	movlw	1
  3682  002808  EC4A  F01A         	call	_LCDMoveCursor
  3683                           
  3684                           ;LCD.c: 239:         LCDPutChar(Humid/10 + '0');
  3685  00280C  C096  F1FA         	movff	_Humid,___awdiv@dividend
  3686  002810  C097  F1FB         	movff	_Humid+1,___awdiv@dividend+1
  3687  002814  0E00               	movlw	0
  3688  002816  0101               	movlb	1	; () banked
  3689  002818  6FFD               	movwf	(___awdiv@divisor+1)& (0+255),b
  3690  00281A  0E0A               	movlw	10
  3691  00281C  6FFC               	movwf	___awdiv@divisor& (0+255),b
  3692  00281E  EC5F  F013         	call	___awdiv	;wreg free
  3693  002822  0101               	movlb	1	; () banked
  3694  002824  51FA               	movf	?___awdiv& (0+255),w,b
  3695  002826  0F30               	addlw	48
  3696  002828  EC40  F017         	call	_LCDPutChar
  3697                           
  3698                           ;LCD.c: 240:         LCDPutChar(Humid%10 + '0');
  3699  00282C  C096  F1FA         	movff	_Humid,___awmod@dividend
  3700  002830  C097  F1FB         	movff	_Humid+1,___awmod@dividend+1
  3701  002834  0E00               	movlw	0
  3702  002836  0101               	movlb	1	; () banked
  3703  002838  6FFD               	movwf	(___awmod@divisor+1)& (0+255),b
  3704  00283A  0E0A               	movlw	10
  3705  00283C  6FFC               	movwf	___awmod@divisor& (0+255),b
  3706  00283E  EC72  F015         	call	___awmod	;wreg free
  3707  002842  0101               	movlb	1	; () banked
  3708  002844  51FA               	movf	?___awmod& (0+255),w,b
  3709  002846  0F30               	addlw	48
  3710  002848  EC40  F017         	call	_LCDPutChar
  3711                           
  3712                           ;LCD.c: 241:     }
  3713  00284C  EF41  F014         	goto	l185
  3714  002850                     l4785:
  3715                           
  3716                           ; BSR set to: 2
  3717                           ;LCD.c: 243:         LCDMoveCursor(1, 0x4);
  3718  002850  0E04               	movlw	4
  3719  002852  6F01               	movwf	LCDMoveCursor@pos& (0+255),b
  3720  002854  0E01               	movlw	1
  3721  002856  EC4A  F01A         	call	_LCDMoveCursor
  3722  00285A                     
  3723                           ;LCD.c: 244:         LCDPutStr("--");
  3724  00285A  0E72               	movlw	low STR_7
  3725  00285C  0102               	movlb	2	; () banked
  3726  00285E  6F01               	movwf	LCDPutStr@ptr& (0+255),b
  3727  002860  0E10               	movlw	high STR_7
  3728  002862  6F02               	movwf	(LCDPutStr@ptr+1)& (0+255),b
  3729  002864  ECCA  F019         	call	_LCDPutStr	;wreg free
  3730  002868                     
  3731                           ;LCD.c: 245:         LCDMoveCursor(1, 0xB);
  3732  002868  0E0B               	movlw	11
  3733  00286A  0102               	movlb	2	; () banked
  3734  00286C  6F01               	movwf	LCDMoveCursor@pos& (0+255),b
  3735  00286E  0E01               	movlw	1
  3736  002870  EC4A  F01A         	call	_LCDMoveCursor
  3737                           
  3738                           ;LCD.c: 246:         LCDPutStr("--");
  3739  002874  0E72               	movlw	low STR_7
  3740  002876  0102               	movlb	2	; () banked
  3741  002878  6F01               	movwf	LCDPutStr@ptr& (0+255),b
  3742  00287A  0E10               	movlw	high STR_7
  3743  00287C  6F02               	movwf	(LCDPutStr@ptr+1)& (0+255),b
  3744  00287E  ECCA  F019         	call	_LCDPutStr	;wreg free
  3745  002882                     l185:
  3746  002882  0012               	return		;funcret
  3747  002884                     __end_of_PrintTempHumid:
  3748                           	opt callstack 0
  3749                           
  3750 ;; *************** function _Pump_Operation *****************
  3751 ;; Defined at:
  3752 ;;		line 64 in file "system.c"
  3753 ;; Parameters:    Size  Location     Type
  3754 ;;		None
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;		None
  3757 ;; Return value:  Size  Location     Type
  3758 ;;                  1    wreg      void 
  3759 ;; Registers used:
  3760 ;;		None
  3761 ;; Tracked objects:
  3762 ;;		On entry : 0/0
  3763 ;;		On exit  : 0/0
  3764 ;;		Unchanged: 0/0
  3765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3770 ;;Total ram usage:        0 bytes
  3771 ;; Hardware stack levels used:    1
  3772 ;; Hardware stack levels required when called:    7
  3773 ;; This function calls:
  3774 ;;		Nothing
  3775 ;; This function is called by:
  3776 ;;		_FSM
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           	psect	text23
  3781  00385E                     __ptext23:
  3782                           	opt callstack 0
  3783  00385E                     _Pump_Operation:
  3784                           	opt callstack 22
  3785  00385E                     
  3786                           ;system.c: 65:     LATDbits.LATD4 = 1;
  3787  00385E  888C               	bsf	140,4,c	;volatile
  3788  003860  0012               	return		;funcret
  3789  003862                     __end_of_Pump_Operation:
  3790                           	opt callstack 0
  3791                           
  3792 ;; *************** function _Pump_Off *****************
  3793 ;; Defined at:
  3794 ;;		line 68 in file "system.c"
  3795 ;; Parameters:    Size  Location     Type
  3796 ;;		None
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;		None
  3799 ;; Return value:  Size  Location     Type
  3800 ;;                  1    wreg      void 
  3801 ;; Registers used:
  3802 ;;		wreg, status,2
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3812 ;;Total ram usage:        0 bytes
  3813 ;; Hardware stack levels used:    1
  3814 ;; Hardware stack levels required when called:    7
  3815 ;; This function calls:
  3816 ;;		Nothing
  3817 ;; This function is called by:
  3818 ;;		_FSM
  3819 ;; This function uses a non-reentrant model
  3820 ;;
  3821                           
  3822                           	psect	text24
  3823  003830                     __ptext24:
  3824                           	opt callstack 0
  3825  003830                     _Pump_Off:
  3826                           	opt callstack 22
  3827  003830                     
  3828                           ;system.c: 69:     pump_flag = 0;
  3829  003830  0E00               	movlw	0
  3830  003832  0100               	movlb	0	; () banked
  3831  003834  6FA3               	movwf	_pump_flag& (0+255),b
  3832  003836                     
  3833                           ; BSR set to: 0
  3834                           ;system.c: 70:     LATDbits.LATD4 = 0;
  3835  003836  988C               	bcf	140,4,c	;volatile
  3836  003838                     
  3837                           ; BSR set to: 0
  3838  003838  0012               	return		;funcret
  3839  00383A                     __end_of_Pump_Off:
  3840                           	opt callstack 0
  3841                           
  3842 ;; *************** function _PrintPump *****************
  3843 ;; Defined at:
  3844 ;;		line 204 in file "LCD.c"
  3845 ;; Parameters:    Size  Location     Type
  3846 ;;		None
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;		None
  3849 ;; Return value:  Size  Location     Type
  3850 ;;                  1    wreg      void 
  3851 ;; Registers used:
  3852 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3853 ;; Tracked objects:
  3854 ;;		On entry : 0/0
  3855 ;;		On exit  : 0/0
  3856 ;;		Unchanged: 0/0
  3857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3862 ;;Total ram usage:        0 bytes
  3863 ;; Hardware stack levels used:    1
  3864 ;; Hardware stack levels required when called:   11
  3865 ;; This function calls:
  3866 ;;		_LCDPutInst
  3867 ;;		_LCDPutStr
  3868 ;; This function is called by:
  3869 ;;		_FSM
  3870 ;; This function uses a non-reentrant model
  3871 ;;
  3872                           
  3873                           	psect	text25
  3874  0037C2                     __ptext25:
  3875                           	opt callstack 0
  3876  0037C2                     _PrintPump:
  3877                           	opt callstack 18
  3878  0037C2                     
  3879                           ;LCD.c: 205:     LCDPutInst(0x80);
  3880  0037C2  0E80               	movlw	128
  3881  0037C4  EC7E  F017         	call	_LCDPutInst
  3882  0037C8                     
  3883                           ;LCD.c: 206:     LCDPutStr("   PUMP ON      ");
  3884  0037C8  0E25               	movlw	low STR_5
  3885  0037CA  0102               	movlb	2	; () banked
  3886  0037CC  6F01               	movwf	LCDPutStr@ptr& (0+255),b
  3887  0037CE  0E10               	movlw	high STR_5
  3888  0037D0  6F02               	movwf	(LCDPutStr@ptr+1)& (0+255),b
  3889  0037D2  ECCA  F019         	call	_LCDPutStr	;wreg free
  3890  0037D6  0012               	return		;funcret
  3891  0037D8                     __end_of_PrintPump:
  3892                           	opt callstack 0
  3893                           
  3894 ;; *************** function _PrintIdle *****************
  3895 ;; Defined at:
  3896 ;;		line 190 in file "LCD.c"
  3897 ;; Parameters:    Size  Location     Type
  3898 ;;		None
  3899 ;; Auto vars:     Size  Location     Type
  3900 ;;		None
  3901 ;; Return value:  Size  Location     Type
  3902 ;;                  1    wreg      void 
  3903 ;; Registers used:
  3904 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3905 ;; Tracked objects:
  3906 ;;		On entry : 0/0
  3907 ;;		On exit  : 0/0
  3908 ;;		Unchanged: 0/0
  3909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3914 ;;Total ram usage:        0 bytes
  3915 ;; Hardware stack levels used:    1
  3916 ;; Hardware stack levels required when called:   11
  3917 ;; This function calls:
  3918 ;;		_LCDPutInst
  3919 ;;		_LCDPutStr
  3920 ;; This function is called by:
  3921 ;;		_main
  3922 ;;		_FSM
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925                           
  3926                           	psect	text26
  3927  003634                     __ptext26:
  3928                           	opt callstack 0
  3929  003634                     _PrintIdle:
  3930                           	opt callstack 19
  3931  003634                     
  3932                           ;LCD.c: 191:     LCDPutInst(0x80);
  3933  003634  0E80               	movlw	128
  3934  003636  EC7E  F017         	call	_LCDPutInst
  3935  00363A                     
  3936                           ;LCD.c: 192:     LCDPutStr("   IDLE STATE   ");
  3937  00363A  0E47               	movlw	low STR_1
  3938  00363C  0102               	movlb	2	; () banked
  3939  00363E  6F01               	movwf	LCDPutStr@ptr& (0+255),b
  3940  003640  0E10               	movlw	high STR_1
  3941  003642  6F02               	movwf	(LCDPutStr@ptr+1)& (0+255),b
  3942  003644  ECCA  F019         	call	_LCDPutStr	;wreg free
  3943  003648                     
  3944                           ;LCD.c: 193:     LCDPutInst(0xC0);
  3945  003648  0EC0               	movlw	192
  3946  00364A  EC7E  F017         	call	_LCDPutInst
  3947                           
  3948                           ;LCD.c: 194:     LCDPutStr("                ");
  3949  00364E  0E14               	movlw	low STR_2
  3950  003650  0102               	movlb	2	; () banked
  3951  003652  6F01               	movwf	LCDPutStr@ptr& (0+255),b
  3952  003654  0E10               	movlw	high STR_2
  3953  003656  6F02               	movwf	(LCDPutStr@ptr+1)& (0+255),b
  3954  003658  ECCA  F019         	call	_LCDPutStr	;wreg free
  3955  00365C  0012               	return		;funcret
  3956  00365E                     __end_of_PrintIdle:
  3957                           	opt callstack 0
  3958                           
  3959 ;; *************** function _PrintHeater *****************
  3960 ;; Defined at:
  3961 ;;		line 197 in file "LCD.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;		None
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;		None
  3966 ;; Return value:  Size  Location     Type
  3967 ;;                  1    wreg      void 
  3968 ;; Registers used:
  3969 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3979 ;;Total ram usage:        0 bytes
  3980 ;; Hardware stack levels used:    1
  3981 ;; Hardware stack levels required when called:   11
  3982 ;; This function calls:
  3983 ;;		_LCDPutInst
  3984 ;;		_LCDPutStr
  3985 ;; This function is called by:
  3986 ;;		_FSM
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           
  3990                           	psect	text27
  3991  00365E                     __ptext27:
  3992                           	opt callstack 0
  3993  00365E                     _PrintHeater:
  3994                           	opt callstack 18
  3995  00365E                     
  3996                           ;LCD.c: 198:     LCDPutInst(0x80);
  3997  00365E  0E80               	movlw	128
  3998  003660  EC7E  F017         	call	_LCDPutInst
  3999  003664                     
  4000                           ;LCD.c: 199:     LCDPutStr("   HEATER ON    ");
  4001  003664  0E36               	movlw	low STR_3
  4002  003666  0102               	movlb	2	; () banked
  4003  003668  6F01               	movwf	LCDPutStr@ptr& (0+255),b
  4004  00366A  0E10               	movlw	high STR_3
  4005  00366C  6F02               	movwf	(LCDPutStr@ptr+1)& (0+255),b
  4006  00366E  ECCA  F019         	call	_LCDPutStr	;wreg free
  4007  003672                     
  4008                           ;LCD.c: 200:     LCDPutInst(0xC0);
  4009  003672  0EC0               	movlw	192
  4010  003674  EC7E  F017         	call	_LCDPutInst
  4011                           
  4012                           ;LCD.c: 201:     LCDPutStr("T =    H = ");
  4013  003678  0E66               	movlw	low STR_4
  4014  00367A  0102               	movlb	2	; () banked
  4015  00367C  6F01               	movwf	LCDPutStr@ptr& (0+255),b
  4016  00367E  0E10               	movlw	high STR_4
  4017  003680  6F02               	movwf	(LCDPutStr@ptr+1)& (0+255),b
  4018  003682  ECCA  F019         	call	_LCDPutStr	;wreg free
  4019  003686  0012               	return		;funcret
  4020  003688                     __end_of_PrintHeater:
  4021                           	opt callstack 0
  4022                           
  4023 ;; *************** function _LCDPutStr *****************
  4024 ;; Defined at:
  4025 ;;		line 159 in file "LCD.c"
  4026 ;; Parameters:    Size  Location     Type
  4027 ;;  ptr             2    1[BANK2 ] PTR const unsigned char 
  4028 ;;		 -> STR_9(19), STR_8(3), STR_7(3), STR_6(14), 
  4029 ;;		 -> STR_5(17), STR_4(12), STR_3(17), STR_2(17), 
  4030 ;;		 -> STR_1(17), 
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;		None
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  1    wreg      void 
  4035 ;; Registers used:
  4036 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4042 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4045 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4046 ;;Total ram usage:        2 bytes
  4047 ;; Hardware stack levels used:    1
  4048 ;; Hardware stack levels required when called:   10
  4049 ;; This function calls:
  4050 ;;		_LCDPutChar
  4051 ;; This function is called by:
  4052 ;;		_PrintIdle
  4053 ;;		_PrintHeater
  4054 ;;		_PrintPump
  4055 ;;		_PrintTempHumid
  4056 ;;		_LCDPrint
  4057 ;; This function uses a non-reentrant model
  4058 ;;
  4059                           
  4060                           	psect	text28
  4061  003394                     __ptext28:
  4062                           	opt callstack 0
  4063  003394                     _LCDPutStr:
  4064                           	opt callstack 19
  4065  003394                     
  4066                           ;LCD.c: 159: void LCDPutStr (const char *ptr);LCD.c: 160: {;LCD.c: 161:     while(*ptr) 
      +                          LCDPutChar(*(ptr++));
  4067  003394  EFD9  F019         	goto	l4661
  4068  003398                     l4657:
  4069  003398  C201  FFF6         	movff	LCDPutStr@ptr,tblptrl
  4070  00339C  C202  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
  4071  0033A0                     	if	0	;tblptru may be non-zero
  4072  0033A0                     	endif
  4073  0033A0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4074  0033A0  0E00               	movlw	low (__mediumconst shr (0+16))
  4075  0033A2  6EF8               	movwf	tblptru,c
  4076  0033A4                     	endif
  4077  0033A4  0008               	tblrd		*
  4078  0033A6  50F5               	movf	tablat,w,c
  4079  0033A8  EC40  F017         	call	_LCDPutChar
  4080  0033AC  0102               	movlb	2	; () banked
  4081  0033AE  4B01               	infsnz	LCDPutStr@ptr& (0+255),f,b
  4082  0033B0  2B02               	incf	(LCDPutStr@ptr+1)& (0+255),f,b
  4083  0033B2                     l4661:
  4084  0033B2  C201  FFF6         	movff	LCDPutStr@ptr,tblptrl
  4085  0033B6  C202  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
  4086  0033BA                     	if	0	;tblptru may be non-zero
  4087  0033BA                     	endif
  4088  0033BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4089  0033BA  0E00               	movlw	low (__mediumconst shr (0+16))
  4090  0033BC  6EF8               	movwf	tblptru,c
  4091  0033BE                     	endif
  4092  0033BE  0008               	tblrd		*
  4093  0033C0  50F5               	movf	tablat,w,c
  4094  0033C2  0900               	iorlw	0
  4095  0033C4  A4D8               	btfss	status,2,c
  4096  0033C6  EFE7  F019         	goto	u3121
  4097  0033CA  EFE9  F019         	goto	u3120
  4098  0033CE                     u3121:
  4099  0033CE  EFCC  F019         	goto	l4657
  4100  0033D2                     u3120:
  4101  0033D2  0012               	return		;funcret
  4102  0033D4                     __end_of_LCDPutStr:
  4103                           	opt callstack 0
  4104                           
  4105 ;; *************** function _PrintDemo *****************
  4106 ;; Defined at:
  4107 ;;		line 251 in file "LCD.c"
  4108 ;; Parameters:    Size  Location     Type
  4109 ;;		None
  4110 ;; Auto vars:     Size  Location     Type
  4111 ;;		None
  4112 ;; Return value:  Size  Location     Type
  4113 ;;                  1    wreg      void 
  4114 ;; Registers used:
  4115 ;;		wreg, status,2, status,0, cstack
  4116 ;; Tracked objects:
  4117 ;;		On entry : 0/0
  4118 ;;		On exit  : 0/0
  4119 ;;		Unchanged: 0/0
  4120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4125 ;;Total ram usage:        0 bytes
  4126 ;; Hardware stack levels used:    1
  4127 ;; Hardware stack levels required when called:   11
  4128 ;; This function calls:
  4129 ;;		_LCDMoveCursor
  4130 ;;		_LCDPutChar
  4131 ;;		___awdiv
  4132 ;;		___awmod
  4133 ;; This function is called by:
  4134 ;;		_FSM
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138                           	psect	text29
  4139  002C46                     __ptext29:
  4140                           	opt callstack 0
  4141  002C46                     _PrintDemo:
  4142                           	opt callstack 18
  4143  002C46                     
  4144                           ;LCD.c: 252:     LCDMoveCursor(1, 0x4);
  4145  002C46  0E04               	movlw	4
  4146  002C48  0102               	movlb	2	; () banked
  4147  002C4A  6F01               	movwf	LCDMoveCursor@pos& (0+255),b
  4148  002C4C  0E01               	movlw	1
  4149  002C4E  EC4A  F01A         	call	_LCDMoveCursor
  4150                           
  4151                           ;LCD.c: 253:     LCDPutChar(demoTemp/10 + '0');
  4152  002C52  C09C  F1FA         	movff	_demoTemp,___awdiv@dividend
  4153  002C56  C09D  F1FB         	movff	_demoTemp+1,___awdiv@dividend+1
  4154  002C5A  0E00               	movlw	0
  4155  002C5C  0101               	movlb	1	; () banked
  4156  002C5E  6FFD               	movwf	(___awdiv@divisor+1)& (0+255),b
  4157  002C60  0E0A               	movlw	10
  4158  002C62  6FFC               	movwf	___awdiv@divisor& (0+255),b
  4159  002C64  EC5F  F013         	call	___awdiv	;wreg free
  4160  002C68  0101               	movlb	1	; () banked
  4161  002C6A  51FA               	movf	?___awdiv& (0+255),w,b
  4162  002C6C  0F30               	addlw	48
  4163  002C6E  EC40  F017         	call	_LCDPutChar
  4164                           
  4165                           ;LCD.c: 254:     LCDPutChar(demoTemp%10 + '0');
  4166  002C72  C09C  F1FA         	movff	_demoTemp,___awmod@dividend
  4167  002C76  C09D  F1FB         	movff	_demoTemp+1,___awmod@dividend+1
  4168  002C7A  0E00               	movlw	0
  4169  002C7C  0101               	movlb	1	; () banked
  4170  002C7E  6FFD               	movwf	(___awmod@divisor+1)& (0+255),b
  4171  002C80  0E0A               	movlw	10
  4172  002C82  6FFC               	movwf	___awmod@divisor& (0+255),b
  4173  002C84  EC72  F015         	call	___awmod	;wreg free
  4174  002C88  0101               	movlb	1	; () banked
  4175  002C8A  51FA               	movf	?___awmod& (0+255),w,b
  4176  002C8C  0F30               	addlw	48
  4177  002C8E  EC40  F017         	call	_LCDPutChar
  4178                           
  4179                           ;LCD.c: 255:     LCDMoveCursor(1, 0xB);
  4180  002C92  0E0B               	movlw	11
  4181  002C94  0102               	movlb	2	; () banked
  4182  002C96  6F01               	movwf	LCDMoveCursor@pos& (0+255),b
  4183  002C98  0E01               	movlw	1
  4184  002C9A  EC4A  F01A         	call	_LCDMoveCursor
  4185                           
  4186                           ;LCD.c: 256:     LCDPutChar(demoHumid/10 + '0');
  4187  002C9E  C09A  F1FA         	movff	_demoHumid,___awdiv@dividend
  4188  002CA2  C09B  F1FB         	movff	_demoHumid+1,___awdiv@dividend+1
  4189  002CA6  0E00               	movlw	0
  4190  002CA8  0101               	movlb	1	; () banked
  4191  002CAA  6FFD               	movwf	(___awdiv@divisor+1)& (0+255),b
  4192  002CAC  0E0A               	movlw	10
  4193  002CAE  6FFC               	movwf	___awdiv@divisor& (0+255),b
  4194  002CB0  EC5F  F013         	call	___awdiv	;wreg free
  4195  002CB4  0101               	movlb	1	; () banked
  4196  002CB6  51FA               	movf	?___awdiv& (0+255),w,b
  4197  002CB8  0F30               	addlw	48
  4198  002CBA  EC40  F017         	call	_LCDPutChar
  4199                           
  4200                           ;LCD.c: 257:     LCDPutChar(demoHumid%10 + '0');
  4201  002CBE  C09A  F1FA         	movff	_demoHumid,___awmod@dividend
  4202  002CC2  C09B  F1FB         	movff	_demoHumid+1,___awmod@dividend+1
  4203  002CC6  0E00               	movlw	0
  4204  002CC8  0101               	movlb	1	; () banked
  4205  002CCA  6FFD               	movwf	(___awmod@divisor+1)& (0+255),b
  4206  002CCC  0E0A               	movlw	10
  4207  002CCE  6FFC               	movwf	___awmod@divisor& (0+255),b
  4208  002CD0  EC72  F015         	call	___awmod	;wreg free
  4209  002CD4  0101               	movlb	1	; () banked
  4210  002CD6  51FA               	movf	?___awmod& (0+255),w,b
  4211  002CD8  0F30               	addlw	48
  4212  002CDA  EC40  F017         	call	_LCDPutChar
  4213  002CDE  0012               	return		;funcret
  4214  002CE0                     __end_of_PrintDemo:
  4215                           	opt callstack 0
  4216                           
  4217 ;; *************** function ___awmod *****************
  4218 ;; Defined at:
  4219 ;;		line 7 in file "D:\Programs\MPLABX\pic\sources\c99\common\awmod.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;  dividend        2    0[BANK1 ] int 
  4222 ;;  divisor         2    2[BANK1 ] int 
  4223 ;; Auto vars:     Size  Location     Type
  4224 ;;  sign            1    5[BANK1 ] unsigned char 
  4225 ;;  counter         1    4[BANK1 ] unsigned char 
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  2    0[BANK1 ] int 
  4228 ;; Registers used:
  4229 ;;		wreg, status,2, status,0
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4235 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4236 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4238 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4239 ;;Total ram usage:        6 bytes
  4240 ;; Hardware stack levels used:    1
  4241 ;; Hardware stack levels required when called:    7
  4242 ;; This function calls:
  4243 ;;		Nothing
  4244 ;; This function is called by:
  4245 ;;		_PrintTempHumid
  4246 ;;		_PrintDemo
  4247 ;; This function uses a non-reentrant model
  4248 ;;
  4249                           
  4250                           	psect	text30
  4251  002AE4                     __ptext30:
  4252                           	opt callstack 0
  4253  002AE4                     ___awmod:
  4254                           	opt callstack 20
  4255  002AE4  0E00               	movlw	0
  4256  002AE6  0101               	movlb	1	; () banked
  4257  002AE8  6FFF               	movwf	___awmod@sign& (0+255),b
  4258  002AEA                     
  4259                           ; BSR set to: 1
  4260  002AEA  BFFB               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  4261  002AEC  EF7C  F015         	goto	u3200
  4262  002AF0  EF7A  F015         	goto	u3201
  4263  002AF4                     u3201:
  4264  002AF4  EF82  F015         	goto	l4725
  4265  002AF8                     u3200:
  4266  002AF8                     
  4267                           ; BSR set to: 1
  4268  002AF8  6DFA               	negf	___awmod@dividend& (0+255),b
  4269  002AFA  1FFB               	comf	(___awmod@dividend+1)& (0+255),f,b
  4270  002AFC  B0D8               	btfsc	status,0,c
  4271  002AFE  2BFB               	incf	(___awmod@dividend+1)& (0+255),f,b
  4272  002B00                     
  4273                           ; BSR set to: 1
  4274  002B00  0E01               	movlw	1
  4275  002B02  6FFF               	movwf	___awmod@sign& (0+255),b
  4276  002B04                     l4725:
  4277                           
  4278                           ; BSR set to: 1
  4279  002B04  BFFD               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  4280  002B06  EF89  F015         	goto	u3210
  4281  002B0A  EF87  F015         	goto	u3211
  4282  002B0E                     u3211:
  4283  002B0E  EF8D  F015         	goto	l4729
  4284  002B12                     u3210:
  4285  002B12                     
  4286                           ; BSR set to: 1
  4287  002B12  6DFC               	negf	___awmod@divisor& (0+255),b
  4288  002B14  1FFD               	comf	(___awmod@divisor+1)& (0+255),f,b
  4289  002B16  B0D8               	btfsc	status,0,c
  4290  002B18  2BFD               	incf	(___awmod@divisor+1)& (0+255),f,b
  4291  002B1A                     l4729:
  4292                           
  4293                           ; BSR set to: 1
  4294  002B1A  51FC               	movf	___awmod@divisor& (0+255),w,b
  4295  002B1C  11FD               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  4296  002B1E  B4D8               	btfsc	status,2,c
  4297  002B20  EF94  F015         	goto	u3221
  4298  002B24  EF96  F015         	goto	u3220
  4299  002B28                     u3221:
  4300  002B28  EFBA  F015         	goto	l4745
  4301  002B2C                     u3220:
  4302  002B2C                     
  4303                           ; BSR set to: 1
  4304  002B2C  0E01               	movlw	1
  4305  002B2E  6FFE               	movwf	___awmod@counter& (0+255),b
  4306  002B30  EF9E  F015         	goto	l4735
  4307  002B34                     l4733:
  4308                           
  4309                           ; BSR set to: 1
  4310  002B34  90D8               	bcf	status,0,c
  4311  002B36  37FC               	rlcf	___awmod@divisor& (0+255),f,b
  4312  002B38  37FD               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4313  002B3A  2BFE               	incf	___awmod@counter& (0+255),f,b
  4314  002B3C                     l4735:
  4315                           
  4316                           ; BSR set to: 1
  4317  002B3C  AFFD               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4318  002B3E  EFA3  F015         	goto	u3231
  4319  002B42  EFA5  F015         	goto	u3230
  4320  002B46                     u3231:
  4321  002B46  EF9A  F015         	goto	l4733
  4322  002B4A                     u3230:
  4323  002B4A                     l4737:
  4324                           
  4325                           ; BSR set to: 1
  4326  002B4A  51FC               	movf	___awmod@divisor& (0+255),w,b
  4327  002B4C  5DFA               	subwf	___awmod@dividend& (0+255),w,b
  4328  002B4E  51FD               	movf	(___awmod@divisor+1)& (0+255),w,b
  4329  002B50  59FB               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4330  002B52  A0D8               	btfss	status,0,c
  4331  002B54  EFAE  F015         	goto	u3241
  4332  002B58  EFB0  F015         	goto	u3240
  4333  002B5C                     u3241:
  4334  002B5C  EFB4  F015         	goto	l4741
  4335  002B60                     u3240:
  4336  002B60                     
  4337                           ; BSR set to: 1
  4338  002B60  51FC               	movf	___awmod@divisor& (0+255),w,b
  4339  002B62  5FFA               	subwf	___awmod@dividend& (0+255),f,b
  4340  002B64  51FD               	movf	(___awmod@divisor+1)& (0+255),w,b
  4341  002B66  5BFB               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4342  002B68                     l4741:
  4343                           
  4344                           ; BSR set to: 1
  4345  002B68  90D8               	bcf	status,0,c
  4346  002B6A  33FD               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4347  002B6C  33FC               	rrcf	___awmod@divisor& (0+255),f,b
  4348  002B6E                     
  4349                           ; BSR set to: 1
  4350  002B6E  2FFE               	decfsz	___awmod@counter& (0+255),f,b
  4351  002B70  EFA5  F015         	goto	l4737
  4352  002B74                     l4745:
  4353                           
  4354                           ; BSR set to: 1
  4355  002B74  51FF               	movf	___awmod@sign& (0+255),w,b
  4356  002B76  B4D8               	btfsc	status,2,c
  4357  002B78  EFC0  F015         	goto	u3251
  4358  002B7C  EFC2  F015         	goto	u3250
  4359  002B80                     u3251:
  4360  002B80  EFC6  F015         	goto	l4749
  4361  002B84                     u3250:
  4362  002B84                     
  4363                           ; BSR set to: 1
  4364  002B84  6DFA               	negf	___awmod@dividend& (0+255),b
  4365  002B86  1FFB               	comf	(___awmod@dividend+1)& (0+255),f,b
  4366  002B88  B0D8               	btfsc	status,0,c
  4367  002B8A  2BFB               	incf	(___awmod@dividend+1)& (0+255),f,b
  4368  002B8C                     l4749:
  4369                           
  4370                           ; BSR set to: 1
  4371  002B8C  C1FA  F1FA         	movff	___awmod@dividend,?___awmod
  4372  002B90  C1FB  F1FB         	movff	___awmod@dividend+1,?___awmod+1
  4373  002B94                     
  4374                           ; BSR set to: 1
  4375  002B94  0012               	return		;funcret
  4376  002B96                     __end_of___awmod:
  4377                           	opt callstack 0
  4378                           
  4379 ;; *************** function ___awdiv *****************
  4380 ;; Defined at:
  4381 ;;		line 7 in file "D:\Programs\MPLABX\pic\sources\c99\common\awdiv.c"
  4382 ;; Parameters:    Size  Location     Type
  4383 ;;  dividend        2    0[BANK1 ] int 
  4384 ;;  divisor         2    2[BANK1 ] int 
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;  quotient        2    2[BANK2 ] int 
  4387 ;;  sign            1    1[BANK2 ] unsigned char 
  4388 ;;  counter         1    0[BANK2 ] unsigned char 
  4389 ;; Return value:  Size  Location     Type
  4390 ;;                  2    0[BANK1 ] int 
  4391 ;; Registers used:
  4392 ;;		wreg, status,2, status,0
  4393 ;; Tracked objects:
  4394 ;;		On entry : 0/0
  4395 ;;		On exit  : 0/0
  4396 ;;		Unchanged: 0/0
  4397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4398 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4399 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4401 ;;      Totals:         0       0       4       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4402 ;;Total ram usage:        8 bytes
  4403 ;; Hardware stack levels used:    1
  4404 ;; Hardware stack levels required when called:    7
  4405 ;; This function calls:
  4406 ;;		Nothing
  4407 ;; This function is called by:
  4408 ;;		_PrintTempHumid
  4409 ;;		_PrintDemo
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           
  4413                           	psect	text31
  4414  0026BE                     __ptext31:
  4415                           	opt callstack 0
  4416  0026BE                     ___awdiv:
  4417                           	opt callstack 20
  4418  0026BE  0E00               	movlw	0
  4419  0026C0  0102               	movlb	2	; () banked
  4420  0026C2  6F01               	movwf	___awdiv@sign& (0+255),b
  4421  0026C4                     
  4422                           ; BSR set to: 2
  4423  0026C4  0101               	movlb	1	; () banked
  4424  0026C6  BFFD               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  4425  0026C8  EF6A  F013         	goto	u3140
  4426  0026CC  EF68  F013         	goto	u3141
  4427  0026D0                     u3141:
  4428  0026D0  EF71  F013         	goto	l4681
  4429  0026D4                     u3140:
  4430  0026D4                     
  4431                           ; BSR set to: 1
  4432  0026D4  6DFC               	negf	___awdiv@divisor& (0+255),b
  4433  0026D6  1FFD               	comf	(___awdiv@divisor+1)& (0+255),f,b
  4434  0026D8  B0D8               	btfsc	status,0,c
  4435  0026DA  2BFD               	incf	(___awdiv@divisor+1)& (0+255),f,b
  4436  0026DC                     
  4437                           ; BSR set to: 1
  4438  0026DC  0E01               	movlw	1
  4439  0026DE  0102               	movlb	2	; () banked
  4440  0026E0  6F01               	movwf	___awdiv@sign& (0+255),b
  4441  0026E2                     l4681:
  4442  0026E2  0101               	movlb	1	; () banked
  4443  0026E4  BFFB               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  4444  0026E6  EF79  F013         	goto	u3150
  4445  0026EA  EF77  F013         	goto	u3151
  4446  0026EE                     u3151:
  4447  0026EE  EF80  F013         	goto	l4687
  4448  0026F2                     u3150:
  4449  0026F2                     
  4450                           ; BSR set to: 1
  4451  0026F2  6DFA               	negf	___awdiv@dividend& (0+255),b
  4452  0026F4  1FFB               	comf	(___awdiv@dividend+1)& (0+255),f,b
  4453  0026F6  B0D8               	btfsc	status,0,c
  4454  0026F8  2BFB               	incf	(___awdiv@dividend+1)& (0+255),f,b
  4455  0026FA                     
  4456                           ; BSR set to: 1
  4457  0026FA  0E01               	movlw	1
  4458  0026FC  0102               	movlb	2	; () banked
  4459  0026FE  1B01               	xorwf	___awdiv@sign& (0+255),f,b
  4460  002700                     l4687:
  4461  002700  0E00               	movlw	0
  4462  002702  0102               	movlb	2	; () banked
  4463  002704  6F03               	movwf	(___awdiv@quotient+1)& (0+255),b
  4464  002706  0E00               	movlw	0
  4465  002708  6F02               	movwf	___awdiv@quotient& (0+255),b
  4466  00270A                     
  4467                           ; BSR set to: 2
  4468  00270A  0101               	movlb	1	; () banked
  4469  00270C  51FC               	movf	___awdiv@divisor& (0+255),w,b
  4470  00270E  11FD               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  4471  002710  B4D8               	btfsc	status,2,c
  4472  002712  EF8D  F013         	goto	u3161
  4473  002716  EF8F  F013         	goto	u3160
  4474  00271A                     u3161:
  4475  00271A  EFBF  F013         	goto	l4709
  4476  00271E                     u3160:
  4477  00271E                     
  4478                           ; BSR set to: 1
  4479  00271E  0E01               	movlw	1
  4480  002720  0102               	movlb	2	; () banked
  4481  002722  6F00               	movwf	___awdiv@counter& (0+255),b
  4482  002724  EF99  F013         	goto	l4695
  4483  002728                     l4693:
  4484                           
  4485                           ; BSR set to: 1
  4486  002728  90D8               	bcf	status,0,c
  4487  00272A  37FC               	rlcf	___awdiv@divisor& (0+255),f,b
  4488  00272C  37FD               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  4489  00272E  0102               	movlb	2	; () banked
  4490  002730  2B00               	incf	___awdiv@counter& (0+255),f,b
  4491  002732                     l4695:
  4492                           
  4493                           ; BSR set to: 2
  4494  002732  0101               	movlb	1	; () banked
  4495  002734  AFFD               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4496  002736  EF9F  F013         	goto	u3171
  4497  00273A  EFA1  F013         	goto	u3170
  4498  00273E                     u3171:
  4499  00273E  EF94  F013         	goto	l4693
  4500  002742                     u3170:
  4501  002742                     l4697:
  4502  002742  0102               	movlb	2	; () banked
  4503  002744  90D8               	bcf	status,0,c
  4504  002746  3702               	rlcf	___awdiv@quotient& (0+255),f,b
  4505  002748  3703               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  4506  00274A                     
  4507                           ; BSR set to: 2
  4508  00274A  0101               	movlb	1	; () banked
  4509  00274C  51FC               	movf	___awdiv@divisor& (0+255),w,b
  4510  00274E  5DFA               	subwf	___awdiv@dividend& (0+255),w,b
  4511  002750  51FD               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4512  002752  59FB               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  4513  002754  A0D8               	btfss	status,0,c
  4514  002756  EFAF  F013         	goto	u3181
  4515  00275A  EFB1  F013         	goto	u3180
  4516  00275E                     u3181:
  4517  00275E  EFB7  F013         	goto	l4705
  4518  002762                     u3180:
  4519  002762                     
  4520                           ; BSR set to: 1
  4521  002762  51FC               	movf	___awdiv@divisor& (0+255),w,b
  4522  002764  5FFA               	subwf	___awdiv@dividend& (0+255),f,b
  4523  002766  51FD               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4524  002768  5BFB               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  4525  00276A                     
  4526                           ; BSR set to: 1
  4527  00276A  0102               	movlb	2	; () banked
  4528  00276C  8102               	bsf	___awdiv@quotient& (0+255),0,b
  4529  00276E                     l4705:
  4530  00276E  0101               	movlb	1	; () banked
  4531  002770  90D8               	bcf	status,0,c
  4532  002772  33FD               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  4533  002774  33FC               	rrcf	___awdiv@divisor& (0+255),f,b
  4534  002776                     
  4535                           ; BSR set to: 1
  4536  002776  0102               	movlb	2	; () banked
  4537  002778  2F00               	decfsz	___awdiv@counter& (0+255),f,b
  4538  00277A  EFA1  F013         	goto	l4697
  4539  00277E                     l4709:
  4540  00277E  0102               	movlb	2	; () banked
  4541  002780  5101               	movf	___awdiv@sign& (0+255),w,b
  4542  002782  B4D8               	btfsc	status,2,c
  4543  002784  EFC6  F013         	goto	u3191
  4544  002788  EFC8  F013         	goto	u3190
  4545  00278C                     u3191:
  4546  00278C  EFCC  F013         	goto	l4713
  4547  002790                     u3190:
  4548  002790                     
  4549                           ; BSR set to: 2
  4550  002790  6D02               	negf	___awdiv@quotient& (0+255),b
  4551  002792  1F03               	comf	(___awdiv@quotient+1)& (0+255),f,b
  4552  002794  B0D8               	btfsc	status,0,c
  4553  002796  2B03               	incf	(___awdiv@quotient+1)& (0+255),f,b
  4554  002798                     l4713:
  4555                           
  4556                           ; BSR set to: 2
  4557  002798  C202  F1FA         	movff	___awdiv@quotient,?___awdiv
  4558  00279C  C203  F1FB         	movff	___awdiv@quotient+1,?___awdiv+1
  4559  0027A0                     
  4560                           ; BSR set to: 2
  4561  0027A0  0012               	return		;funcret
  4562  0027A2                     __end_of___awdiv:
  4563                           	opt callstack 0
  4564                           
  4565 ;; *************** function _LCDPutChar *****************
  4566 ;; Defined at:
  4567 ;;		line 121 in file "LCD.c"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;  ch              1    wreg     unsigned char 
  4570 ;; Auto vars:     Size  Location     Type
  4571 ;;  ch              1    0[BANK2 ] unsigned char 
  4572 ;; Return value:  Size  Location     Type
  4573 ;;                  1    wreg      void 
  4574 ;; Registers used:
  4575 ;;		wreg, status,2, status,0, cstack
  4576 ;; Tracked objects:
  4577 ;;		On entry : 0/0
  4578 ;;		On exit  : 0/0
  4579 ;;		Unchanged: 0/0
  4580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4582 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4583 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4584 ;;      Totals:         0       0       1       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4585 ;;Total ram usage:        2 bytes
  4586 ;; Hardware stack levels used:    1
  4587 ;; Hardware stack levels required when called:    9
  4588 ;; This function calls:
  4589 ;;		_WritePort_BBSPI
  4590 ;; This function is called by:
  4591 ;;		_LCDPutStr
  4592 ;;		_PrintTempHumid
  4593 ;;		_PrintDemo
  4594 ;; This function uses a non-reentrant model
  4595 ;;
  4596                           
  4597                           	psect	text32
  4598  002E80                     __ptext32:
  4599                           	opt callstack 0
  4600  002E80                     _LCDPutChar:
  4601                           	opt callstack 19
  4602                           
  4603                           ; BSR set to: 2
  4604                           ;incstack = 0
  4605                           ;LCDPutChar@ch stored from wreg
  4606  002E80  0102               	movlb	2	; () banked
  4607  002E82  6F00               	movwf	LCDPutChar@ch& (0+255),b
  4608  002E84                     
  4609                           ;LCD.c: 121: void LCDPutChar (unsigned char ch);LCD.c: 122: {;LCD.c: 123:     _delay((un
      +                          signed long)((5)*(10000000/4000.0)));
  4610  002E84  0E11               	movlw	17
  4611  002E86  0101               	movlb	1	; () banked
  4612  002E88  6FFF               	movwf	??_LCDPutChar& (0+255),b
  4613  002E8A  0E3A               	movlw	58
  4614  002E8C                     u4107:
  4615  002E8C  2EE8               	decfsz	wreg,f,c
  4616  002E8E  D7FE               	bra	u4107
  4617  002E90  2FFF               	decfsz	??_LCDPutChar& (0+255),f,b
  4618  002E92  D7FC               	bra	u4107
  4619  002E94  F000               	nop	
  4620  002E96                     
  4621                           ;LCD.c: 124:     WritePort_BBSPI (0x12, 0x80);
  4622  002E96  0E80               	movlw	128
  4623  002E98  0101               	movlb	1	; () banked
  4624  002E9A  6FFD               	movwf	WritePort_BBSPI@a& (0+255),b
  4625  002E9C  0E12               	movlw	18
  4626  002E9E  ECB5  F01B         	call	_WritePort_BBSPI
  4627  002EA2                     
  4628                           ;LCD.c: 125:     _delay((unsigned long)((1)*(10000000/4000.0)));
  4629  002EA2  0E04               	movlw	4
  4630  002EA4  0101               	movlb	1	; () banked
  4631  002EA6  6FFF               	movwf	??_LCDPutChar& (0+255),b
  4632  002EA8  0E3D               	movlw	61
  4633  002EAA                     u4117:
  4634  002EAA  2EE8               	decfsz	wreg,f,c
  4635  002EAC  D7FE               	bra	u4117
  4636  002EAE  2FFF               	decfsz	??_LCDPutChar& (0+255),f,b
  4637  002EB0  D7FC               	bra	u4117
  4638  002EB2  D000               	nop2	
  4639  002EB4                     
  4640                           ;LCD.c: 126:     WritePort_BBSPI (0x13, ch);
  4641  002EB4  C200  F1FD         	movff	LCDPutChar@ch,WritePort_BBSPI@a
  4642  002EB8  0E13               	movlw	19
  4643  002EBA  ECB5  F01B         	call	_WritePort_BBSPI
  4644  002EBE                     
  4645                           ;LCD.c: 127:     _delay((unsigned long)((1)*(10000000/4000.0)));
  4646  002EBE  0E04               	movlw	4
  4647  002EC0  0101               	movlb	1	; () banked
  4648  002EC2  6FFF               	movwf	??_LCDPutChar& (0+255),b
  4649  002EC4  0E3D               	movlw	61
  4650  002EC6                     u4127:
  4651  002EC6  2EE8               	decfsz	wreg,f,c
  4652  002EC8  D7FE               	bra	u4127
  4653  002ECA  2FFF               	decfsz	??_LCDPutChar& (0+255),f,b
  4654  002ECC  D7FC               	bra	u4127
  4655  002ECE  D000               	nop2	
  4656  002ED0                     
  4657                           ;LCD.c: 128:     WritePort_BBSPI (0x12, 0xC0);
  4658  002ED0  0EC0               	movlw	192
  4659  002ED2  0101               	movlb	1	; () banked
  4660  002ED4  6FFD               	movwf	WritePort_BBSPI@a& (0+255),b
  4661  002ED6  0E12               	movlw	18
  4662  002ED8  ECB5  F01B         	call	_WritePort_BBSPI
  4663  002EDC                     
  4664                           ;LCD.c: 129:     _delay((unsigned long)((1)*(10000000/4000.0)));
  4665  002EDC  0E04               	movlw	4
  4666  002EDE  0101               	movlb	1	; () banked
  4667  002EE0  6FFF               	movwf	??_LCDPutChar& (0+255),b
  4668  002EE2  0E3D               	movlw	61
  4669  002EE4                     u4137:
  4670  002EE4  2EE8               	decfsz	wreg,f,c
  4671  002EE6  D7FE               	bra	u4137
  4672  002EE8  2FFF               	decfsz	??_LCDPutChar& (0+255),f,b
  4673  002EEA  D7FC               	bra	u4137
  4674  002EEC  D000               	nop2	
  4675  002EEE                     
  4676                           ;LCD.c: 130:     WritePort_BBSPI (0x12, 0x00);
  4677  002EEE  0E00               	movlw	0
  4678  002EF0  0101               	movlb	1	; () banked
  4679  002EF2  6FFD               	movwf	WritePort_BBSPI@a& (0+255),b
  4680  002EF4  0E12               	movlw	18
  4681  002EF6  ECB5  F01B         	call	_WritePort_BBSPI
  4682  002EFA  0012               	return		;funcret
  4683  002EFC                     __end_of_LCDPutChar:
  4684                           	opt callstack 0
  4685                           
  4686 ;; *************** function _LCDMoveCursor *****************
  4687 ;; Defined at:
  4688 ;;		line 164 in file "LCD.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;  line            1    wreg     unsigned char 
  4691 ;;  pos             1    1[BANK2 ] unsigned char 
  4692 ;; Auto vars:     Size  Location     Type
  4693 ;;  line            1    2[BANK2 ] unsigned char 
  4694 ;;  position        1    3[BANK2 ] unsigned char 
  4695 ;; Return value:  Size  Location     Type
  4696 ;;                  1    wreg      void 
  4697 ;; Registers used:
  4698 ;;		wreg, status,2, status,0, cstack
  4699 ;; Tracked objects:
  4700 ;;		On entry : 0/0
  4701 ;;		On exit  : 0/0
  4702 ;;		Unchanged: 0/0
  4703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4704 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4705 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4707 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4708 ;;Total ram usage:        5 bytes
  4709 ;; Hardware stack levels used:    1
  4710 ;; Hardware stack levels required when called:   10
  4711 ;; This function calls:
  4712 ;;		_LCDPutInst
  4713 ;; This function is called by:
  4714 ;;		_PrintTempHumid
  4715 ;;		_PrintDemo
  4716 ;;		_LCDPrint
  4717 ;; This function uses a non-reentrant model
  4718 ;;
  4719                           
  4720                           	psect	text33
  4721  003494                     __ptext33:
  4722                           	opt callstack 0
  4723  003494                     _LCDMoveCursor:
  4724                           	opt callstack 17
  4725                           
  4726                           ;incstack = 0
  4727                           ;LCDMoveCursor@line stored from wreg
  4728  003494  0102               	movlb	2	; () banked
  4729  003496  6F02               	movwf	LCDMoveCursor@line& (0+255),b
  4730  003498                     
  4731                           ;LCD.c: 165:     unsigned char position = (line == 0) ? (128 + pos) : (192 + pos);
  4732  003498  0102               	movlb	2	; () banked
  4733  00349A  5102               	movf	LCDMoveCursor@line& (0+255),w,b
  4734  00349C  B4D8               	btfsc	status,2,c
  4735  00349E  EF53  F01A         	goto	u3131
  4736  0034A2  EF55  F01A         	goto	u3130
  4737  0034A6                     u3131:
  4738  0034A6  EF5D  F01A         	goto	l4667
  4739  0034AA                     u3130:
  4740  0034AA                     
  4741                           ; BSR set to: 2
  4742  0034AA  0EC0               	movlw	192
  4743  0034AC  2501               	addwf	LCDMoveCursor@pos& (0+255),w,b
  4744  0034AE  6F04               	movwf	_LCDMoveCursor$413& (0+255),b
  4745  0034B0  6B05               	clrf	(_LCDMoveCursor$413+1)& (0+255),b
  4746  0034B2  0E00               	movlw	0
  4747  0034B4  2305               	addwfc	(_LCDMoveCursor$413+1)& (0+255),f,b
  4748  0034B6  EF63  F01A         	goto	l4669
  4749  0034BA                     l4667:
  4750                           
  4751                           ; BSR set to: 2
  4752  0034BA  0E80               	movlw	128
  4753  0034BC  2501               	addwf	LCDMoveCursor@pos& (0+255),w,b
  4754  0034BE  6F04               	movwf	_LCDMoveCursor$413& (0+255),b
  4755  0034C0  6B05               	clrf	(_LCDMoveCursor$413+1)& (0+255),b
  4756  0034C2  0E00               	movlw	0
  4757  0034C4  2305               	addwfc	(_LCDMoveCursor$413+1)& (0+255),f,b
  4758  0034C6                     l4669:
  4759                           
  4760                           ; BSR set to: 2
  4761  0034C6  C204  F203         	movff	_LCDMoveCursor$413,LCDMoveCursor@position
  4762  0034CA                     
  4763                           ; BSR set to: 2
  4764                           ;LCD.c: 166:     LCDPutInst(position);
  4765  0034CA  5103               	movf	LCDMoveCursor@position& (0+255),w,b
  4766  0034CC  EC7E  F017         	call	_LCDPutInst
  4767  0034D0  0012               	return		;funcret
  4768  0034D2                     __end_of_LCDMoveCursor:
  4769                           	opt callstack 0
  4770                           
  4771 ;; *************** function _LCDPutInst *****************
  4772 ;; Defined at:
  4773 ;;		line 140 in file "LCD.c"
  4774 ;; Parameters:    Size  Location     Type
  4775 ;;  ch              1    wreg     unsigned char 
  4776 ;; Auto vars:     Size  Location     Type
  4777 ;;  ch              1    0[BANK2 ] unsigned char 
  4778 ;; Return value:  Size  Location     Type
  4779 ;;                  1    wreg      void 
  4780 ;; Registers used:
  4781 ;;		wreg, status,2, status,0, cstack
  4782 ;; Tracked objects:
  4783 ;;		On entry : 0/0
  4784 ;;		On exit  : 0/0
  4785 ;;		Unchanged: 0/0
  4786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4788 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4789 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4790 ;;      Totals:         0       0       1       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4791 ;;Total ram usage:        2 bytes
  4792 ;; Hardware stack levels used:    1
  4793 ;; Hardware stack levels required when called:    9
  4794 ;; This function calls:
  4795 ;;		_WritePort_BBSPI
  4796 ;; This function is called by:
  4797 ;;		_LCDInit
  4798 ;;		_LCDMoveCursor
  4799 ;;		_LCD_SetUp
  4800 ;;		_PrintIdle
  4801 ;;		_PrintHeater
  4802 ;;		_PrintPump
  4803 ;; This function uses a non-reentrant model
  4804 ;;
  4805                           
  4806                           	psect	text34
  4807  002EFC                     __ptext34:
  4808                           	opt callstack 0
  4809  002EFC                     _LCDPutInst:
  4810                           	opt callstack 19
  4811                           
  4812                           ;incstack = 0
  4813                           ;LCDPutInst@ch stored from wreg
  4814  002EFC  0102               	movlb	2	; () banked
  4815  002EFE  6F00               	movwf	LCDPutInst@ch& (0+255),b
  4816  002F00                     
  4817                           ;LCD.c: 140: void LCDPutInst (unsigned char ch);LCD.c: 141: {;LCD.c: 142:     _delay((un
      +                          signed long)((5)*(10000000/4000.0)));
  4818  002F00  0E11               	movlw	17
  4819  002F02  0101               	movlb	1	; () banked
  4820  002F04  6FFF               	movwf	??_LCDPutInst& (0+255),b
  4821  002F06  0E3A               	movlw	58
  4822  002F08                     u4147:
  4823  002F08  2EE8               	decfsz	wreg,f,c
  4824  002F0A  D7FE               	bra	u4147
  4825  002F0C  2FFF               	decfsz	??_LCDPutInst& (0+255),f,b
  4826  002F0E  D7FC               	bra	u4147
  4827  002F10  F000               	nop	
  4828  002F12                     
  4829                           ;LCD.c: 143:     WritePort_BBSPI (0x12, 0x00);
  4830  002F12  0E00               	movlw	0
  4831  002F14  0101               	movlb	1	; () banked
  4832  002F16  6FFD               	movwf	WritePort_BBSPI@a& (0+255),b
  4833  002F18  0E12               	movlw	18
  4834  002F1A  ECB5  F01B         	call	_WritePort_BBSPI
  4835  002F1E                     
  4836                           ;LCD.c: 144:     _delay((unsigned long)((1)*(10000000/4000.0)));
  4837  002F1E  0E04               	movlw	4
  4838  002F20  0101               	movlb	1	; () banked
  4839  002F22  6FFF               	movwf	??_LCDPutInst& (0+255),b
  4840  002F24  0E3D               	movlw	61
  4841  002F26                     u4157:
  4842  002F26  2EE8               	decfsz	wreg,f,c
  4843  002F28  D7FE               	bra	u4157
  4844  002F2A  2FFF               	decfsz	??_LCDPutInst& (0+255),f,b
  4845  002F2C  D7FC               	bra	u4157
  4846  002F2E  D000               	nop2	
  4847  002F30                     
  4848                           ;LCD.c: 145:     WritePort_BBSPI (0x13, ch);
  4849  002F30  C200  F1FD         	movff	LCDPutInst@ch,WritePort_BBSPI@a
  4850  002F34  0E13               	movlw	19
  4851  002F36  ECB5  F01B         	call	_WritePort_BBSPI
  4852  002F3A                     
  4853                           ;LCD.c: 146:     _delay((unsigned long)((1)*(10000000/4000.0)));
  4854  002F3A  0E04               	movlw	4
  4855  002F3C  0101               	movlb	1	; () banked
  4856  002F3E  6FFF               	movwf	??_LCDPutInst& (0+255),b
  4857  002F40  0E3D               	movlw	61
  4858  002F42                     u4167:
  4859  002F42  2EE8               	decfsz	wreg,f,c
  4860  002F44  D7FE               	bra	u4167
  4861  002F46  2FFF               	decfsz	??_LCDPutInst& (0+255),f,b
  4862  002F48  D7FC               	bra	u4167
  4863  002F4A  D000               	nop2	
  4864  002F4C                     
  4865                           ;LCD.c: 147:     WritePort_BBSPI (0x12,0x40);
  4866  002F4C  0E40               	movlw	64
  4867  002F4E  0101               	movlb	1	; () banked
  4868  002F50  6FFD               	movwf	WritePort_BBSPI@a& (0+255),b
  4869  002F52  0E12               	movlw	18
  4870  002F54  ECB5  F01B         	call	_WritePort_BBSPI
  4871  002F58                     
  4872                           ;LCD.c: 148:     _delay((unsigned long)((1)*(10000000/4000.0)));
  4873  002F58  0E04               	movlw	4
  4874  002F5A  0101               	movlb	1	; () banked
  4875  002F5C  6FFF               	movwf	??_LCDPutInst& (0+255),b
  4876  002F5E  0E3D               	movlw	61
  4877  002F60                     u4177:
  4878  002F60  2EE8               	decfsz	wreg,f,c
  4879  002F62  D7FE               	bra	u4177
  4880  002F64  2FFF               	decfsz	??_LCDPutInst& (0+255),f,b
  4881  002F66  D7FC               	bra	u4177
  4882  002F68  D000               	nop2	
  4883  002F6A                     
  4884                           ;LCD.c: 149:     WritePort_BBSPI (0x12, 0x00);
  4885  002F6A  0E00               	movlw	0
  4886  002F6C  0101               	movlb	1	; () banked
  4887  002F6E  6FFD               	movwf	WritePort_BBSPI@a& (0+255),b
  4888  002F70  0E12               	movlw	18
  4889  002F72  ECB5  F01B         	call	_WritePort_BBSPI
  4890  002F76  0012               	return		;funcret
  4891  002F78                     __end_of_LCDPutInst:
  4892                           	opt callstack 0
  4893                           
  4894 ;; *************** function _WritePort_BBSPI *****************
  4895 ;; Defined at:
  4896 ;;		line 105 in file "LCD.c"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;  port_add        1    wreg     unsigned char 
  4899 ;;  a               1    3[BANK1 ] unsigned char 
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;  port_add        1    4[BANK1 ] unsigned char 
  4902 ;; Return value:  Size  Location     Type
  4903 ;;                  1    wreg      void 
  4904 ;; Registers used:
  4905 ;;		wreg, status,2, status,0, cstack
  4906 ;; Tracked objects:
  4907 ;;		On entry : 0/0
  4908 ;;		On exit  : 0/0
  4909 ;;		Unchanged: 0/0
  4910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4911 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4912 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4914 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4915 ;;Total ram usage:        2 bytes
  4916 ;; Hardware stack levels used:    1
  4917 ;; Hardware stack levels required when called:    8
  4918 ;; This function calls:
  4919 ;;		_SendByteBBSPI
  4920 ;; This function is called by:
  4921 ;;		_LCDInit
  4922 ;;		_LCDPutChar
  4923 ;;		_LCDPutInst
  4924 ;; This function uses a non-reentrant model
  4925 ;;
  4926                           
  4927                           	psect	text35
  4928  00376A                     __ptext35:
  4929                           	opt callstack 0
  4930  00376A                     _WritePort_BBSPI:
  4931                           	opt callstack 19
  4932                           
  4933                           ;incstack = 0
  4934                           ;WritePort_BBSPI@port_add stored from wreg
  4935  00376A  0101               	movlb	1	; () banked
  4936  00376C  6FFE               	movwf	WritePort_BBSPI@port_add& (0+255),b
  4937  00376E                     
  4938                           ;LCD.c: 105: void WritePort_BBSPI (unsigned char port_add, unsigned char a);LCD.c: 106: 
      +                          {;LCD.c: 107:     LATAbits.LATA2 = 0;
  4939  00376E  9489               	bcf	137,2,c	;volatile
  4940  003770                     
  4941                           ;LCD.c: 108:     SendByteBBSPI(0x40);
  4942  003770  0E40               	movlw	64
  4943  003772  ECBC  F017         	call	_SendByteBBSPI
  4944                           
  4945                           ;LCD.c: 109:     SendByteBBSPI(port_add);
  4946  003776  0101               	movlb	1	; () banked
  4947  003778  51FE               	movf	WritePort_BBSPI@port_add& (0+255),w,b
  4948  00377A  ECBC  F017         	call	_SendByteBBSPI
  4949                           
  4950                           ;LCD.c: 110:     SendByteBBSPI(a);
  4951  00377E  0101               	movlb	1	; () banked
  4952  003780  51FD               	movf	WritePort_BBSPI@a& (0+255),w,b
  4953  003782  ECBC  F017         	call	_SendByteBBSPI
  4954  003786                     
  4955                           ;LCD.c: 111:     LATAbits.LATA2 = 1;
  4956  003786  8489               	bsf	137,2,c	;volatile
  4957  003788  0012               	return		;funcret
  4958  00378A                     __end_of_WritePort_BBSPI:
  4959                           	opt callstack 0
  4960                           
  4961 ;; *************** function _SendByteBBSPI *****************
  4962 ;; Defined at:
  4963 ;;		line 52 in file "LCD.c"
  4964 ;; Parameters:    Size  Location     Type
  4965 ;;  output          1    wreg     unsigned char 
  4966 ;; Auto vars:     Size  Location     Type
  4967 ;;  output          1    0[BANK1 ] unsigned char 
  4968 ;;  input           1    2[BANK1 ] unsigned char 
  4969 ;;  bitcount        1    1[BANK1 ] unsigned char 
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  1    wreg      void 
  4972 ;; Registers used:
  4973 ;;		wreg, status,2, status,0
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4980 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4982 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4983 ;;Total ram usage:        3 bytes
  4984 ;; Hardware stack levels used:    1
  4985 ;; Hardware stack levels required when called:    7
  4986 ;; This function calls:
  4987 ;;		Nothing
  4988 ;; This function is called by:
  4989 ;;		_Port_BBSPIInit
  4990 ;;		_WritePort_BBSPI
  4991 ;; This function uses a non-reentrant model
  4992 ;;
  4993                           
  4994                           	psect	text36
  4995  002F78                     __ptext36:
  4996                           	opt callstack 0
  4997  002F78                     _SendByteBBSPI:
  4998                           	opt callstack 19
  4999                           
  5000                           ;incstack = 0
  5001                           ;SendByteBBSPI@output stored from wreg
  5002  002F78  0101               	movlb	1	; () banked
  5003  002F7A  6FFA               	movwf	SendByteBBSPI@output& (0+255),b
  5004  002F7C                     
  5005                           ;LCD.c: 52: void SendByteBBSPI (unsigned char output);LCD.c: 53: {;LCD.c: 54:     unsign
      +                          ed char bitcount;;LCD.c: 55:     unsigned char input = output;
  5006  002F7C  C1FA  F1FC         	movff	SendByteBBSPI@output,SendByteBBSPI@input
  5007  002F80                     
  5008                           ;LCD.c: 57:     for(bitcount=0;bitcount<8;bitcount++)
  5009  002F80  0E00               	movlw	0
  5010  002F82  0101               	movlb	1	; () banked
  5011  002F84  6FFB               	movwf	SendByteBBSPI@bitcount& (0+255),b
  5012  002F86                     l119:
  5013                           
  5014                           ; BSR set to: 1
  5015                           ;LCD.c: 58:     {;LCD.c: 60:         if(output & 0x80)
  5016  002F86  AFFA               	btfss	SendByteBBSPI@output& (0+255),7,b
  5017  002F88  EFC8  F017         	goto	u3091
  5018  002F8C  EFCA  F017         	goto	u3090
  5019  002F90                     u3091:
  5020  002F90  EFCD  F017         	goto	l121
  5021  002F94                     u3090:
  5022  002F94                     
  5023                           ; BSR set to: 1
  5024                           ;LCD.c: 61:             LATCbits.LATC5 = 1;
  5025  002F94  8A8B               	bsf	139,5,c	;volatile
  5026  002F96  EFCE  F017         	goto	l122
  5027  002F9A                     l121:
  5028                           
  5029                           ; BSR set to: 1
  5030                           ;LCD.c: 63:             LATCbits.LATC5 = 0;
  5031  002F9A  9A8B               	bcf	139,5,c	;volatile
  5032  002F9C                     l122:
  5033                           
  5034                           ; BSR set to: 1
  5035                           ;LCD.c: 65:         if (LATCbits.LATC4)
  5036  002F9C  A88B               	btfss	139,4,c	;volatile
  5037  002F9E  EFD3  F017         	goto	u3101
  5038  002FA2  EFD5  F017         	goto	u3100
  5039  002FA6                     u3101:
  5040  002FA6  EFD9  F017         	goto	l4575
  5041  002FAA                     u3100:
  5042  002FAA                     
  5043                           ; BSR set to: 1
  5044                           ;LCD.c: 66:             input = (input << 1) | 0x1;
  5045  002FAA  80D8               	bsf	status,0,c
  5046  002FAC  37FC               	rlcf	SendByteBBSPI@input& (0+255),f,b
  5047  002FAE  EFDC  F017         	goto	l4577
  5048  002FB2                     l4575:
  5049                           
  5050                           ; BSR set to: 1
  5051                           ;LCD.c: 68:             input = input << 1;
  5052  002FB2  51FC               	movf	SendByteBBSPI@input& (0+255),w,b
  5053  002FB4  25FC               	addwf	SendByteBBSPI@input& (0+255),w,b
  5054  002FB6  6FFC               	movwf	SendByteBBSPI@input& (0+255),b
  5055  002FB8                     l4577:
  5056                           
  5057                           ; BSR set to: 1
  5058                           ;LCD.c: 69:         LATCbits.LATC3 = 1;
  5059  002FB8  868B               	bsf	139,3,c	;volatile
  5060  002FBA                     
  5061                           ; BSR set to: 1
  5062                           ;LCD.c: 70:         __nop();__nop();__nop();__nop();__nop();__nop();
  5063  002FBA  F000               	nop	
  5064  002FBC  F000               	nop	
  5065  002FBE  F000               	nop	
  5066  002FC0  F000               	nop	
  5067  002FC2  F000               	nop	
  5068  002FC4  F000               	nop	
  5069  002FC6                     
  5070                           ;LCD.c: 71:         __nop();__nop();__nop();__nop();__nop();__nop();
  5071  002FC6  F000               	nop	
  5072  002FC8  F000               	nop	
  5073  002FCA  F000               	nop	
  5074  002FCC  F000               	nop	
  5075  002FCE  F000               	nop	
  5076  002FD0  F000               	nop	
  5077  002FD2                     
  5078                           ;LCD.c: 72:         LATCbits.LATC3 = 0;
  5079  002FD2  968B               	bcf	139,3,c	;volatile
  5080                           
  5081                           ;LCD.c: 73:         output <<= 1;
  5082  002FD4  0101               	movlb	1	; () banked
  5083  002FD6  90D8               	bcf	status,0,c
  5084  002FD8  37FA               	rlcf	SendByteBBSPI@output& (0+255),f,b
  5085  002FDA                     
  5086                           ; BSR set to: 1
  5087                           ;LCD.c: 74:     }
  5088  002FDA  2BFB               	incf	SendByteBBSPI@bitcount& (0+255),f,b
  5089  002FDC                     
  5090                           ; BSR set to: 1
  5091  002FDC  0E07               	movlw	7
  5092  002FDE  65FB               	cpfsgt	SendByteBBSPI@bitcount& (0+255),b
  5093  002FE0  EFF4  F017         	goto	u3111
  5094  002FE4  EFF6  F017         	goto	u3110
  5095  002FE8                     u3111:
  5096  002FE8  EFC3  F017         	goto	l119
  5097  002FEC                     u3110:
  5098  002FEC                     
  5099                           ; BSR set to: 1
  5100  002FEC  0012               	return		;funcret
  5101  002FEE                     __end_of_SendByteBBSPI:
  5102                           	opt callstack 0
  5103                           
  5104 ;; *************** function _Heater_Operation *****************
  5105 ;; Defined at:
  5106 ;;		line 51 in file "system.c"
  5107 ;; Parameters:    Size  Location     Type
  5108 ;;		None
  5109 ;; Auto vars:     Size  Location     Type
  5110 ;;		None
  5111 ;; Return value:  Size  Location     Type
  5112 ;;                  1    wreg      void 
  5113 ;; Registers used:
  5114 ;;		None
  5115 ;; Tracked objects:
  5116 ;;		On entry : 0/0
  5117 ;;		On exit  : 0/0
  5118 ;;		Unchanged: 0/0
  5119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5124 ;;Total ram usage:        0 bytes
  5125 ;; Hardware stack levels used:    1
  5126 ;; Hardware stack levels required when called:    7
  5127 ;; This function calls:
  5128 ;;		Nothing
  5129 ;; This function is called by:
  5130 ;;		_FSM
  5131 ;; This function uses a non-reentrant model
  5132 ;;
  5133                           
  5134                           	psect	text37
  5135  003862                     __ptext37:
  5136                           	opt callstack 0
  5137  003862                     _Heater_Operation:
  5138                           	opt callstack 22
  5139  003862                     
  5140                           ;system.c: 52:     LATDbits.LATD3 = 1;
  5141  003862  868C               	bsf	140,3,c	;volatile
  5142  003864  0012               	return		;funcret
  5143  003866                     __end_of_Heater_Operation:
  5144                           	opt callstack 0
  5145                           
  5146 ;; *************** function _Heater_Off *****************
  5147 ;; Defined at:
  5148 ;;		line 55 in file "system.c"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;		None
  5151 ;; Auto vars:     Size  Location     Type
  5152 ;;		None
  5153 ;; Return value:  Size  Location     Type
  5154 ;;                  1    wreg      void 
  5155 ;; Registers used:
  5156 ;;		wreg, status,2
  5157 ;; Tracked objects:
  5158 ;;		On entry : 0/0
  5159 ;;		On exit  : 0/0
  5160 ;;		Unchanged: 0/0
  5161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5166 ;;Total ram usage:        0 bytes
  5167 ;; Hardware stack levels used:    1
  5168 ;; Hardware stack levels required when called:    7
  5169 ;; This function calls:
  5170 ;;		Nothing
  5171 ;; This function is called by:
  5172 ;;		_CheckTemp
  5173 ;;		_FSM
  5174 ;; This function uses a non-reentrant model
  5175 ;;
  5176                           
  5177                           	psect	text38
  5178  00383A                     __ptext38:
  5179                           	opt callstack 0
  5180  00383A                     _Heater_Off:
  5181                           	opt callstack 21
  5182  00383A                     
  5183                           ;system.c: 56:     heater_flag = 0;
  5184  00383A  0E00               	movlw	0
  5185  00383C  0100               	movlb	0	; () banked
  5186  00383E  6FA4               	movwf	_heater_flag& (0+255),b
  5187  003840                     
  5188                           ; BSR set to: 0
  5189                           ;system.c: 57:     LATDbits.LATD3 = 0;
  5190  003840  968C               	bcf	140,3,c	;volatile
  5191  003842                     
  5192                           ; BSR set to: 0
  5193  003842  0012               	return		;funcret
  5194  003844                     __end_of_Heater_Off:
  5195                           	opt callstack 0
  5196                           
  5197 ;; *************** function _global_timer *****************
  5198 ;; Defined at:
  5199 ;;		line 6 in file "main.c"
  5200 ;; Parameters:    Size  Location     Type
  5201 ;;		None
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;		None
  5204 ;; Return value:  Size  Location     Type
  5205 ;;                  1    wreg      void 
  5206 ;; Registers used:
  5207 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5208 ;; Tracked objects:
  5209 ;;		On entry : 0/0
  5210 ;;		On exit  : 0/0
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5215 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5216 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5217 ;;Total ram usage:       10 bytes
  5218 ;; Hardware stack levels used:    1
  5219 ;; Hardware stack levels required when called:    6
  5220 ;; This function calls:
  5221 ;;		_UpdateElements
  5222 ;;		_UpdateTimeOut
  5223 ;;		_readButtonRA5
  5224 ;;		_readButtonRB0
  5225 ;; This function is called by:
  5226 ;;		Interrupt level 2
  5227 ;; This function uses a non-reentrant model
  5228 ;;
  5229                           
  5230                           	psect	intcode
  5231  000008                     __pintcode:
  5232                           	opt callstack 0
  5233  000008                     _global_timer:
  5234                           	opt callstack 17
  5235                           
  5236                           ; BSR set to: 0
  5237                           ;incstack = 0
  5238  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5239  00000A  EDDC  F011         	call	int_func,f	;refresh shadow registers
  5240                           
  5241                           	psect	intcode_body
  5242  0023B8                     __pintcode_body:
  5243                           	opt callstack 17
  5244  0023B8                     int_func:
  5245                           	opt callstack 17
  5246  0023B8  0006               	pop		; remove dummy address from shadow register refresh
  5247  0023BA  CFE1 F0CC          	movff	fsr1l,??_global_timer
  5248  0023BE  CFE2 F0CD          	movff	fsr1h,??_global_timer+1
  5249  0023C2  CFD9 F0CE          	movff	fsr2l,??_global_timer+2
  5250  0023C6  CFDA F0CF          	movff	fsr2h,??_global_timer+3
  5251  0023CA  CFF3 F0D0          	movff	prodl,??_global_timer+4
  5252  0023CE  CFF4 F0D1          	movff	prodh,??_global_timer+5
  5253  0023D2  CFF6 F0D2          	movff	tblptrl,??_global_timer+6
  5254  0023D6  CFF7 F0D3          	movff	tblptrh,??_global_timer+7
  5255  0023DA  CFF8 F0D4          	movff	tblptru,??_global_timer+8
  5256  0023DE  CFF5 F0D5          	movff	tablat,??_global_timer+9
  5257  0023E2                     
  5258                           ;main.c: 8:     if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1) {
  5259  0023E2  AAF2               	btfss	242,5,c	;volatile
  5260  0023E4  EFF6  F011         	goto	i2u386_41
  5261  0023E8  EFF8  F011         	goto	i2u386_40
  5262  0023EC                     i2u386_41:
  5263  0023EC  EF17  F012         	goto	i2l5271
  5264  0023F0                     i2u386_40:
  5265  0023F0  A4F2               	btfss	242,2,c	;volatile
  5266  0023F2  EFFD  F011         	goto	i2u387_41
  5267  0023F6  EFFF  F011         	goto	i2u387_40
  5268  0023FA                     i2u387_41:
  5269  0023FA  EF17  F012         	goto	i2l5271
  5270  0023FE                     i2u387_40:
  5271  0023FE                     
  5272                           ;main.c: 9:         if(idle_flag == 0 && demo_flag == 0) {
  5273  0023FE  505E               	movf	_idle_flag^0,w,c
  5274  002400  A4D8               	btfss	status,2,c
  5275  002402  EF05  F012         	goto	i2u388_41
  5276  002406  EF07  F012         	goto	i2u388_40
  5277  00240A                     i2u388_41:
  5278  00240A  EF12  F012         	goto	i2l5267
  5279  00240E                     i2u388_40:
  5280  00240E  0100               	movlb	0	; () banked
  5281  002410  51A6               	movf	_demo_flag& (0+255),w,b
  5282  002412  A4D8               	btfss	status,2,c
  5283  002414  EF0E  F012         	goto	i2u389_41
  5284  002418  EF10  F012         	goto	i2u389_40
  5285  00241C                     i2u389_41:
  5286  00241C  EF12  F012         	goto	i2l5267
  5287  002420                     i2u389_40:
  5288  002420                     
  5289                           ; BSR set to: 0
  5290                           ;main.c: 10:             timer_list_count[0]++;
  5291  002420  4B7E               	infsnz	_timer_list_count& (0+255),f,b
  5292  002422  2B7F               	incf	(_timer_list_count+1)& (0+255),f,b
  5293  002424                     i2l5267:
  5294                           
  5295                           ;main.c: 12:         TMR0 = 0xB2;
  5296  002424  0E00               	movlw	0
  5297  002426  6ED7               	movwf	215,c	;volatile
  5298  002428  0EB2               	movlw	178
  5299  00242A  6ED6               	movwf	214,c	;volatile
  5300  00242C                     
  5301                           ;main.c: 13:         INTCONbits.TMR0IF = 0;
  5302  00242C  94F2               	bcf	242,2,c	;volatile
  5303  00242E                     i2l5271:
  5304                           
  5305                           ;main.c: 15:     if(timer_list_count[0] >= 1 && idle_flag == 0) {
  5306  00242E  0100               	movlb	0	; () banked
  5307  002430  517E               	movf	_timer_list_count& (0+255),w,b
  5308  002432  117F               	iorwf	(_timer_list_count+1)& (0+255),w,b
  5309  002434  B4D8               	btfsc	status,2,c
  5310  002436  EF1F  F012         	goto	i2u390_41
  5311  00243A  EF21  F012         	goto	i2u390_40
  5312  00243E                     i2u390_41:
  5313  00243E  EF31  F012         	goto	i2l5281
  5314  002442                     i2u390_40:
  5315  002442                     
  5316                           ; BSR set to: 0
  5317  002442  505E               	movf	_idle_flag^0,w,c
  5318  002444  A4D8               	btfss	status,2,c
  5319  002446  EF27  F012         	goto	i2u391_41
  5320  00244A  EF29  F012         	goto	i2u391_40
  5321  00244E                     i2u391_41:
  5322  00244E  EF31  F012         	goto	i2l5281
  5323  002452                     i2u391_40:
  5324  002452                     
  5325                           ; BSR set to: 0
  5326                           ;main.c: 16:         timer_list_count[0] = 0;
  5327  002452  0E00               	movlw	0
  5328  002454  6F7F               	movwf	(_timer_list_count+1)& (0+255),b
  5329  002456  0E00               	movlw	0
  5330  002458  6F7E               	movwf	_timer_list_count& (0+255),b
  5331  00245A                     
  5332                           ; BSR set to: 0
  5333                           ;main.c: 17:         UpdateElements();
  5334  00245A  EC40  F011         	call	_UpdateElements	;wreg free
  5335  00245E                     
  5336                           ;main.c: 18:         UpdateTimeOut();
  5337  00245E  EC2A  F01A         	call	_UpdateTimeOut	;wreg free
  5338  002462                     i2l5281:
  5339                           
  5340                           ;main.c: 21:     if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1) {
  5341  002462  A09D               	btfss	157,0,c	;volatile
  5342  002464  EF36  F012         	goto	i2u392_41
  5343  002468  EF38  F012         	goto	i2u392_40
  5344  00246C                     i2u392_41:
  5345  00246C  EF53  F012         	goto	i2l500
  5346  002470                     i2u392_40:
  5347  002470  A09E               	btfss	158,0,c	;volatile
  5348  002472  EF3D  F012         	goto	i2u393_41
  5349  002476  EF3F  F012         	goto	i2u393_40
  5350  00247A                     i2u393_41:
  5351  00247A  EF53  F012         	goto	i2l500
  5352  00247E                     i2u393_40:
  5353  00247E                     
  5354                           ;main.c: 22:          if(ready_2 == 0) {
  5355  00247E  0100               	movlb	0	; () banked
  5356  002480  51AC               	movf	_ready_2& (0+255),w,b
  5357  002482  A4D8               	btfss	status,2,c
  5358  002484  EF46  F012         	goto	i2u394_41
  5359  002488  EF48  F012         	goto	i2u394_40
  5360  00248C                     i2u394_41:
  5361  00248C  EF4A  F012         	goto	i2l5289
  5362  002490                     i2u394_40:
  5363  002490                     
  5364                           ; BSR set to: 0
  5365                           ;main.c: 23:             ready_2 = 1;
  5366  002490  0E01               	movlw	1
  5367  002492  6FAC               	movwf	_ready_2& (0+255),b
  5368  002494                     i2l5289:
  5369                           
  5370                           ; BSR set to: 0
  5371                           ;main.c: 28:         readButtonRA5();
  5372  002494  ECF8  F00F         	call	_readButtonRA5	;wreg free
  5373  002498                     
  5374                           ;main.c: 29:         readButtonRB0();
  5375  002498  EC5D  F00D         	call	_readButtonRB0	;wreg free
  5376  00249C                     
  5377                           ;main.c: 30:         TMR1H = 0xF6;
  5378  00249C  0EF6               	movlw	246
  5379  00249E  6ECF               	movwf	207,c	;volatile
  5380  0024A0                     
  5381                           ;main.c: 31:         TMR1L = 0x3C;
  5382  0024A0  0E3C               	movlw	60
  5383  0024A2  6ECE               	movwf	206,c	;volatile
  5384  0024A4                     
  5385                           ;main.c: 32:         PIR1bits.TMR1IF = 0;
  5386  0024A4  909E               	bcf	158,0,c	;volatile
  5387  0024A6                     i2l500:
  5388  0024A6  C0D5  FFF5         	movff	??_global_timer+9,tablat
  5389  0024AA  C0D4  FFF8         	movff	??_global_timer+8,tblptru
  5390  0024AE  C0D3  FFF7         	movff	??_global_timer+7,tblptrh
  5391  0024B2  C0D2  FFF6         	movff	??_global_timer+6,tblptrl
  5392  0024B6  C0D1  FFF4         	movff	??_global_timer+5,prodh
  5393  0024BA  C0D0  FFF3         	movff	??_global_timer+4,prodl
  5394  0024BE  C0CF  FFDA         	movff	??_global_timer+3,fsr2h
  5395  0024C2  C0CE  FFD9         	movff	??_global_timer+2,fsr2l
  5396  0024C6  C0CD  FFE2         	movff	??_global_timer+1,fsr1h
  5397  0024CA  C0CC  FFE1         	movff	??_global_timer,fsr1l
  5398  0024CE  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5399  0024D0  0011               	retfie		f
  5400  0024D2                     __end_of_global_timer:
  5401                           	opt callstack 0
  5402                           
  5403 ;; *************** function _readButtonRB0 *****************
  5404 ;; Defined at:
  5405 ;;		line 56 in file "buttons.c"
  5406 ;; Parameters:    Size  Location     Type
  5407 ;;		None
  5408 ;; Auto vars:     Size  Location     Type
  5409 ;;		None
  5410 ;; Return value:  Size  Location     Type
  5411 ;;                  1    wreg      void 
  5412 ;; Registers used:
  5413 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5414 ;; Tracked objects:
  5415 ;;		On entry : 0/0
  5416 ;;		On exit  : 0/0
  5417 ;;		Unchanged: 0/0
  5418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5423 ;;Total ram usage:        0 bytes
  5424 ;; Hardware stack levels used:    1
  5425 ;; Hardware stack levels required when called:    5
  5426 ;; This function calls:
  5427 ;;		_PrintSetTime
  5428 ;;		_PrintSetUp
  5429 ;;		_SetUp_Humid
  5430 ;;		_SetUp_Temp
  5431 ;;		i2_CheckHumid
  5432 ;;		i2_CheckTemp
  5433 ;;		i2___awmod
  5434 ;; This function is called by:
  5435 ;;		_global_timer
  5436 ;; This function uses a non-reentrant model
  5437 ;;
  5438                           
  5439                           	psect	text40
  5440  001ABA                     __ptext40:
  5441                           	opt callstack 0
  5442  001ABA                     _readButtonRB0:
  5443                           	opt callstack 17
  5444  001ABA                     
  5445                           ;buttons.c: 59:     if(PORTBbits.RB0 == 0 && isPress_2 == 0) {
  5446  001ABA  B081               	btfsc	129,0,c	;volatile
  5447  001ABC  EF62  F00D         	goto	i2u262_41
  5448  001AC0  EF64  F00D         	goto	i2u262_40
  5449  001AC4                     i2u262_41:
  5450  001AC4  EF41  F00E         	goto	i2l944
  5451  001AC8                     i2u262_40:
  5452  001AC8  0100               	movlb	0	; () banked
  5453  001ACA  51AF               	movf	_isPress_2& (0+255),w,b
  5454  001ACC  A4D8               	btfss	status,2,c
  5455  001ACE  EF6B  F00D         	goto	i2u263_41
  5456  001AD2  EF6D  F00D         	goto	i2u263_40
  5457  001AD6                     i2u263_41:
  5458  001AD6  EF41  F00E         	goto	i2l944
  5459  001ADA                     i2u263_40:
  5460  001ADA                     
  5461                           ; BSR set to: 0
  5462                           ;buttons.c: 60:         isPress_2 = 1;
  5463  001ADA  0E01               	movlw	1
  5464  001ADC  6FAF               	movwf	_isPress_2& (0+255),b
  5465  001ADE                     
  5466                           ; BSR set to: 0
  5467                           ;buttons.c: 61:         if(idle_flag == 1) {
  5468  001ADE  045E               	decf	_idle_flag^0,w,c
  5469  001AE0  A4D8               	btfss	status,2,c
  5470  001AE2  EF75  F00D         	goto	i2u264_41
  5471  001AE6  EF77  F00D         	goto	i2u264_40
  5472  001AEA                     i2u264_41:
  5473  001AEA  EFFC  F00D         	goto	i2l4177
  5474  001AEE                     i2u264_40:
  5475  001AEE                     
  5476                           ; BSR set to: 0
  5477                           ;buttons.c: 62:             if(set_flag == 0) {
  5478  001AEE  51AA               	movf	_set_flag& (0+255),w,b
  5479  001AF0  A4D8               	btfss	status,2,c
  5480  001AF2  EF7D  F00D         	goto	i2u265_41
  5481  001AF6  EF7F  F00D         	goto	i2u265_40
  5482  001AFA                     i2u265_41:
  5483  001AFA  EF90  F00D         	goto	i2l4159
  5484  001AFE                     i2u265_40:
  5485  001AFE                     
  5486                           ; BSR set to: 0
  5487                           ;buttons.c: 63:                 MAX_HEAT = 0;
  5488  001AFE  0E00               	movlw	0
  5489  001B00  6FE7               	movwf	_MAX_HEAT& (0+255),b
  5490                           
  5491                           ;buttons.c: 64:                 MAX_HUMID = 0;
  5492  001B02  0E00               	movlw	0
  5493  001B04  6FE6               	movwf	_MAX_HUMID& (0+255),b
  5494                           
  5495                           ;buttons.c: 65:                 Time = 0;
  5496  001B06  0E00               	movlw	0
  5497  001B08  6FE0               	movwf	(_Time+1)& (0+255),b
  5498  001B0A  0E00               	movlw	0
  5499  001B0C  6FDF               	movwf	_Time& (0+255),b
  5500  001B0E                     
  5501                           ; BSR set to: 0
  5502                           ;buttons.c: 66:                 PrintSetUp();
  5503  001B0E  ECEC  F01B         	call	_PrintSetUp	;wreg free
  5504  001B12                     
  5505                           ;buttons.c: 67:                 temp_set_flag = 1;
  5506  001B12  0E01               	movlw	1
  5507  001B14  0100               	movlb	0	; () banked
  5508  001B16  6FA9               	movwf	_temp_set_flag& (0+255),b
  5509  001B18                     
  5510                           ; BSR set to: 0
  5511                           ;buttons.c: 68:                 set_flag = 1;
  5512  001B18  0E01               	movlw	1
  5513  001B1A  6FAA               	movwf	_set_flag& (0+255),b
  5514                           
  5515                           ;buttons.c: 69:             }
  5516  001B1C  EF4B  F00E         	goto	i2l956
  5517  001B20                     i2l4159:
  5518                           
  5519                           ; BSR set to: 0
  5520  001B20  05AA               	decf	_set_flag& (0+255),w,b
  5521  001B22  A4D8               	btfss	status,2,c
  5522  001B24  EF96  F00D         	goto	i2u266_41
  5523  001B28  EF98  F00D         	goto	i2u266_40
  5524  001B2C                     i2u266_41:
  5525  001B2C  EFB3  F00D         	goto	i2l4165
  5526  001B30                     i2u266_40:
  5527  001B30                     
  5528                           ; BSR set to: 0
  5529  001B30  05A9               	decf	_temp_set_flag& (0+255),w,b
  5530  001B32  A4D8               	btfss	status,2,c
  5531  001B34  EF9E  F00D         	goto	i2u267_41
  5532  001B38  EFA0  F00D         	goto	i2u267_40
  5533  001B3C                     i2u267_41:
  5534  001B3C  EFB3  F00D         	goto	i2l4165
  5535  001B40                     i2u267_40:
  5536  001B40                     
  5537                           ; BSR set to: 0
  5538                           ;buttons.c: 71:                 MAX_HEAT = (MAX_HEAT + 5) % 60;
  5539  001B40  0E05               	movlw	5
  5540  001B42  25E7               	addwf	_MAX_HEAT& (0+255),w,b
  5541  001B44  6E01               	movwf	i2___awmod@dividend^0,c
  5542  001B46  6A02               	clrf	(i2___awmod@dividend+1)^0,c
  5543  001B48  0E00               	movlw	0
  5544  001B4A  2202               	addwfc	(i2___awmod@dividend+1)^0,f,c
  5545  001B4C  0E00               	movlw	0
  5546  001B4E  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  5547  001B50  0E3C               	movlw	60
  5548  001B52  6E03               	movwf	i2___awmod@divisor^0,c
  5549  001B54  ECCB  F015         	call	i2___awmod	;wreg free
  5550  001B58  5001               	movf	?i2___awmod^0,w,c
  5551  001B5A  0100               	movlb	0	; () banked
  5552  001B5C  6FE7               	movwf	_MAX_HEAT& (0+255),b
  5553                           
  5554                           ;buttons.c: 72:                 SetUp_Temp();
  5555  001B5E  ECEA  F019         	call	_SetUp_Temp	;wreg free
  5556                           
  5557                           ;buttons.c: 73:             }
  5558  001B62  EF4B  F00E         	goto	i2l956
  5559  001B66                     i2l4165:
  5560                           
  5561                           ; BSR set to: 0
  5562  001B66  05AA               	decf	_set_flag& (0+255),w,b
  5563  001B68  A4D8               	btfss	status,2,c
  5564  001B6A  EFB9  F00D         	goto	i2u268_41
  5565  001B6E  EFBB  F00D         	goto	i2u268_40
  5566  001B72                     i2u268_41:
  5567  001B72  EFD6  F00D         	goto	i2l4171
  5568  001B76                     i2u268_40:
  5569  001B76                     
  5570                           ; BSR set to: 0
  5571  001B76  05A8               	decf	_humid_set_flag& (0+255),w,b
  5572  001B78  A4D8               	btfss	status,2,c
  5573  001B7A  EFC1  F00D         	goto	i2u269_41
  5574  001B7E  EFC3  F00D         	goto	i2u269_40
  5575  001B82                     i2u269_41:
  5576  001B82  EFD6  F00D         	goto	i2l4171
  5577  001B86                     i2u269_40:
  5578  001B86                     
  5579                           ; BSR set to: 0
  5580                           ;buttons.c: 75:                 MAX_HUMID = (MAX_HUMID + 10) % 90;
  5581  001B86  0E0A               	movlw	10
  5582  001B88  25E6               	addwf	_MAX_HUMID& (0+255),w,b
  5583  001B8A  6E01               	movwf	i2___awmod@dividend^0,c
  5584  001B8C  6A02               	clrf	(i2___awmod@dividend+1)^0,c
  5585  001B8E  0E00               	movlw	0
  5586  001B90  2202               	addwfc	(i2___awmod@dividend+1)^0,f,c
  5587  001B92  0E00               	movlw	0
  5588  001B94  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  5589  001B96  0E5A               	movlw	90
  5590  001B98  6E03               	movwf	i2___awmod@divisor^0,c
  5591  001B9A  ECCB  F015         	call	i2___awmod	;wreg free
  5592  001B9E  5001               	movf	?i2___awmod^0,w,c
  5593  001BA0  0100               	movlb	0	; () banked
  5594  001BA2  6FE6               	movwf	_MAX_HUMID& (0+255),b
  5595                           
  5596                           ;buttons.c: 76:                 SetUp_Humid();
  5597  001BA4  EC0A  F01A         	call	_SetUp_Humid	;wreg free
  5598                           
  5599                           ;buttons.c: 77:             }
  5600  001BA8  EF4B  F00E         	goto	i2l956
  5601  001BAC                     i2l4171:
  5602                           
  5603                           ; BSR set to: 0
  5604  001BAC  05AA               	decf	_set_flag& (0+255),w,b
  5605  001BAE  A4D8               	btfss	status,2,c
  5606  001BB0  EFDC  F00D         	goto	i2u270_41
  5607  001BB4  EFDE  F00D         	goto	i2u270_40
  5608  001BB8                     i2u270_41:
  5609  001BB8  EFFA  F00D         	goto	i2l947
  5610  001BBC                     i2u270_40:
  5611  001BBC                     
  5612                           ; BSR set to: 0
  5613  001BBC  05A7               	decf	_time_set_flag& (0+255),w,b
  5614  001BBE  A4D8               	btfss	status,2,c
  5615  001BC0  EFE4  F00D         	goto	i2u271_41
  5616  001BC4  EFE6  F00D         	goto	i2u271_40
  5617  001BC8                     i2u271_41:
  5618  001BC8  EFFA  F00D         	goto	i2l947
  5619  001BCC                     i2u271_40:
  5620  001BCC                     
  5621                           ; BSR set to: 0
  5622                           ;buttons.c: 79:                 Time = (Time + 1) % 10;
  5623  001BCC  0E01               	movlw	1
  5624  001BCE  25DF               	addwf	_Time& (0+255),w,b
  5625  001BD0  6E01               	movwf	i2___awmod@dividend^0,c
  5626  001BD2  0E00               	movlw	0
  5627  001BD4  21E0               	addwfc	(_Time+1)& (0+255),w,b
  5628  001BD6  6E02               	movwf	(i2___awmod@dividend+1)^0,c
  5629  001BD8  0E00               	movlw	0
  5630  001BDA  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  5631  001BDC  0E0A               	movlw	10
  5632  001BDE  6E03               	movwf	i2___awmod@divisor^0,c
  5633  001BE0  ECCB  F015         	call	i2___awmod	;wreg free
  5634  001BE4  C001  F0DF         	movff	?i2___awmod,_Time
  5635  001BE8  C002  F0E0         	movff	?i2___awmod+1,_Time+1
  5636                           
  5637                           ;buttons.c: 80:                 PrintSetTime();
  5638  001BEC  EC88  F019         	call	_PrintSetTime	;wreg free
  5639  001BF0  EF4B  F00E         	goto	i2l956
  5640  001BF4                     i2l947:
  5641                           
  5642                           ; BSR set to: 0
  5643                           ;buttons.c: 82:         }
  5644  001BF4  EF4B  F00E         	goto	i2l956
  5645  001BF8                     i2l4177:
  5646                           
  5647                           ; BSR set to: 0
  5648  001BF8  505E               	movf	_idle_flag^0,w,c
  5649  001BFA  A4D8               	btfss	status,2,c
  5650  001BFC  EF02  F00E         	goto	i2u272_41
  5651  001C00  EF04  F00E         	goto	i2u272_40
  5652  001C04                     i2u272_41:
  5653  001C04  EF4B  F00E         	goto	i2l956
  5654  001C08                     i2u272_40:
  5655  001C08                     
  5656                           ; BSR set to: 0
  5657                           ;buttons.c: 84:             if(demo_flag == 0) {
  5658  001C08  51A6               	movf	_demo_flag& (0+255),w,b
  5659  001C0A  A4D8               	btfss	status,2,c
  5660  001C0C  EF0A  F00E         	goto	i2u273_41
  5661  001C10  EF0C  F00E         	goto	i2u273_40
  5662  001C14                     i2u273_41:
  5663  001C14  EF12  F00E         	goto	i2l4189
  5664  001C18                     i2u273_40:
  5665  001C18                     
  5666                           ; BSR set to: 0
  5667                           ;buttons.c: 85:                 LATDbits.LATD7 = 1;
  5668  001C18  8E8C               	bsf	140,7,c	;volatile
  5669                           
  5670                           ;buttons.c: 86:                 LATDbits.LATD6 = 0;
  5671  001C1A  9C8C               	bcf	140,6,c	;volatile
  5672  001C1C                     
  5673                           ; BSR set to: 0
  5674                           ;buttons.c: 87:                 idle_flag = 1;
  5675  001C1C  0E01               	movlw	1
  5676  001C1E  6E5E               	movwf	_idle_flag^0,c
  5677  001C20  EF4B  F00E         	goto	i2l956
  5678  001C24                     i2l4189:
  5679                           
  5680                           ; BSR set to: 0
  5681  001C24  05A6               	decf	_demo_flag& (0+255),w,b
  5682  001C26  A4D8               	btfss	status,2,c
  5683  001C28  EF18  F00E         	goto	i2u274_41
  5684  001C2C  EF1A  F00E         	goto	i2u274_40
  5685  001C30                     i2u274_41:
  5686  001C30  EF4B  F00E         	goto	i2l956
  5687  001C34                     i2u274_40:
  5688  001C34                     
  5689                           ; BSR set to: 0
  5690                           ;buttons.c: 91:                 demoTemp = (demoTemp + 5) % 60;
  5691  001C34  0E05               	movlw	5
  5692  001C36  259C               	addwf	_demoTemp& (0+255),w,b
  5693  001C38  6E01               	movwf	i2___awmod@dividend^0,c
  5694  001C3A  0E00               	movlw	0
  5695  001C3C  219D               	addwfc	(_demoTemp+1)& (0+255),w,b
  5696  001C3E  6E02               	movwf	(i2___awmod@dividend+1)^0,c
  5697  001C40  0E00               	movlw	0
  5698  001C42  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  5699  001C44  0E3C               	movlw	60
  5700  001C46  6E03               	movwf	i2___awmod@divisor^0,c
  5701  001C48  ECCB  F015         	call	i2___awmod	;wreg free
  5702  001C4C  C001  F09C         	movff	?i2___awmod,_demoTemp
  5703  001C50  C002  F09D         	movff	?i2___awmod+1,_demoTemp+1
  5704                           
  5705                           ;buttons.c: 92:                 demoHumid = (demoHumid + 10) % 90;
  5706  001C54  0E0A               	movlw	10
  5707  001C56  0100               	movlb	0	; () banked
  5708  001C58  259A               	addwf	_demoHumid& (0+255),w,b
  5709  001C5A  6E01               	movwf	i2___awmod@dividend^0,c
  5710  001C5C  0E00               	movlw	0
  5711  001C5E  219B               	addwfc	(_demoHumid+1)& (0+255),w,b
  5712  001C60  6E02               	movwf	(i2___awmod@dividend+1)^0,c
  5713  001C62  0E00               	movlw	0
  5714  001C64  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  5715  001C66  0E5A               	movlw	90
  5716  001C68  6E03               	movwf	i2___awmod@divisor^0,c
  5717  001C6A  ECCB  F015         	call	i2___awmod	;wreg free
  5718  001C6E  C001  F09A         	movff	?i2___awmod,_demoHumid
  5719  001C72  C002  F09B         	movff	?i2___awmod+1,_demoHumid+1
  5720                           
  5721                           ;buttons.c: 93:                 CheckTemp();
  5722  001C76  EC11  F015         	call	i2_CheckTemp	;wreg free
  5723                           
  5724                           ;buttons.c: 94:                 CheckHumid();
  5725  001C7A  EC2F  F018         	call	i2_CheckHumid	;wreg free
  5726  001C7E  EF4B  F00E         	goto	i2l956
  5727  001C82                     i2l944:
  5728  001C82  A081               	btfss	129,0,c	;volatile
  5729  001C84  EF46  F00E         	goto	i2u275_41
  5730  001C88  EF48  F00E         	goto	i2u275_40
  5731  001C8C                     i2u275_41:
  5732  001C8C  EF4B  F00E         	goto	i2l956
  5733  001C90                     i2u275_40:
  5734  001C90  0E00               	movlw	0
  5735  001C92  0100               	movlb	0	; () banked
  5736  001C94  6FAF               	movwf	_isPress_2& (0+255),b
  5737  001C96                     i2l956:
  5738  001C96  0012               	return		;funcret
  5739  001C98                     __end_of_readButtonRB0:
  5740                           	opt callstack 0
  5741                           
  5742 ;; *************** function i2_CheckTemp *****************
  5743 ;; Defined at:
  5744 ;;		line 37 in file "system.c"
  5745 ;; Parameters:    Size  Location     Type
  5746 ;;		None
  5747 ;; Auto vars:     Size  Location     Type
  5748 ;;		None
  5749 ;; Return value:  Size  Location     Type
  5750 ;;                  1    wreg      void 
  5751 ;; Registers used:
  5752 ;;		wreg, status,2, status,0, cstack
  5753 ;; Tracked objects:
  5754 ;;		On entry : 0/0
  5755 ;;		On exit  : 0/0
  5756 ;;		Unchanged: 0/0
  5757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5760 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5761 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5762 ;;Total ram usage:        3 bytes
  5763 ;; Hardware stack levels used:    1
  5764 ;; Hardware stack levels required when called:    1
  5765 ;; This function calls:
  5766 ;;		i2_Heater_Off
  5767 ;;		i2_Pump_On
  5768 ;; This function is called by:
  5769 ;;		_readButtonRB0
  5770 ;;		_Task_Init
  5771 ;;		_dispatchISR
  5772 ;; This function uses a non-reentrant model
  5773 ;;
  5774                           
  5775                           	psect	text41
  5776  002A22                     __ptext41:
  5777                           	opt callstack 0
  5778  002A22                     i2_CheckTemp:
  5779                           	opt callstack 20
  5780  002A22                     
  5781                           ;system.c: 38:     if((demoTemp >= MAX_HEAT || Temp >= MAX_HEAT) && heater_flag == 1) {
  5782  002A22  0100               	movlb	0	; () banked
  5783  002A24  51E7               	movf	_MAX_HEAT& (0+255),w,b
  5784  002A26  6E01               	movwf	??i2_CheckTemp^0,c
  5785  002A28  6A02               	clrf	(??i2_CheckTemp+1)^0,c
  5786  002A2A  5001               	movf	??i2_CheckTemp^0,w,c
  5787  002A2C  5D9C               	subwf	_demoTemp& (0+255),w,b
  5788  002A2E  519D               	movf	(_demoTemp+1)& (0+255),w,b
  5789  002A30  0A80               	xorlw	128
  5790  002A32  6E03               	movwf	(??i2_CheckTemp+2)^0,c
  5791  002A34  5002               	movf	(??i2_CheckTemp+1)^0,w,c
  5792  002A36  0A80               	xorlw	128
  5793  002A38  5803               	subwfb	(??i2_CheckTemp+2)^0,w,c
  5794  002A3A  B0D8               	btfsc	status,0,c
  5795  002A3C  EF22  F015         	goto	i2u238_41
  5796  002A40  EF24  F015         	goto	i2u238_40
  5797  002A44                     i2u238_41:
  5798  002A44  EF36  F015         	goto	i2l4037
  5799  002A48                     i2u238_40:
  5800  002A48                     
  5801                           ; BSR set to: 0
  5802  002A48  51E7               	movf	_MAX_HEAT& (0+255),w,b
  5803  002A4A  6E01               	movwf	??i2_CheckTemp^0,c
  5804  002A4C  6A02               	clrf	(??i2_CheckTemp+1)^0,c
  5805  002A4E  5001               	movf	??i2_CheckTemp^0,w,c
  5806  002A50  5D98               	subwf	_Temp& (0+255),w,b
  5807  002A52  5199               	movf	(_Temp+1)& (0+255),w,b
  5808  002A54  0A80               	xorlw	128
  5809  002A56  6E03               	movwf	(??i2_CheckTemp+2)^0,c
  5810  002A58  5002               	movf	(??i2_CheckTemp+1)^0,w,c
  5811  002A5A  0A80               	xorlw	128
  5812  002A5C  5803               	subwfb	(??i2_CheckTemp+2)^0,w,c
  5813  002A5E  A0D8               	btfss	status,0,c
  5814  002A60  EF34  F015         	goto	i2u239_41
  5815  002A64  EF36  F015         	goto	i2u239_40
  5816  002A68                     i2u239_41:
  5817  002A68  EF42  F015         	goto	i2l4041
  5818  002A6C                     i2u239_40:
  5819  002A6C                     i2l4037:
  5820                           
  5821                           ; BSR set to: 0
  5822  002A6C  05A4               	decf	_heater_flag& (0+255),w,b
  5823  002A6E  A4D8               	btfss	status,2,c
  5824  002A70  EF3C  F015         	goto	i2u240_41
  5825  002A74  EF3E  F015         	goto	i2u240_40
  5826  002A78                     i2u240_41:
  5827  002A78  EF42  F015         	goto	i2l4041
  5828  002A7C                     i2u240_40:
  5829  002A7C                     
  5830                           ; BSR set to: 0
  5831                           ;system.c: 39:         Heater_Off();
  5832  002A7C  EC22  F01C         	call	i2_Heater_Off	;wreg free
  5833                           
  5834                           ;system.c: 40:         Pump_On();
  5835  002A80  EC2B  F01C         	call	i2_Pump_On	;wreg free
  5836  002A84                     i2l4041:
  5837                           
  5838                           ;system.c: 42:     if((demoTemp >= MAX_HEAT || Temp >= MAX_HEAT) && pump_flag == 1) {
  5839  002A84  0100               	movlb	0	; () banked
  5840  002A86  51E7               	movf	_MAX_HEAT& (0+255),w,b
  5841  002A88  6E01               	movwf	??i2_CheckTemp^0,c
  5842  002A8A  6A02               	clrf	(??i2_CheckTemp+1)^0,c
  5843  002A8C  5001               	movf	??i2_CheckTemp^0,w,c
  5844  002A8E  5D9C               	subwf	_demoTemp& (0+255),w,b
  5845  002A90  519D               	movf	(_demoTemp+1)& (0+255),w,b
  5846  002A92  0A80               	xorlw	128
  5847  002A94  6E03               	movwf	(??i2_CheckTemp+2)^0,c
  5848  002A96  5002               	movf	(??i2_CheckTemp+1)^0,w,c
  5849  002A98  0A80               	xorlw	128
  5850  002A9A  5803               	subwfb	(??i2_CheckTemp+2)^0,w,c
  5851  002A9C  B0D8               	btfsc	status,0,c
  5852  002A9E  EF53  F015         	goto	i2u241_41
  5853  002AA2  EF55  F015         	goto	i2u241_40
  5854  002AA6                     i2u241_41:
  5855  002AA6  EF67  F015         	goto	i2l4045
  5856  002AAA                     i2u241_40:
  5857  002AAA                     
  5858                           ; BSR set to: 0
  5859  002AAA  51E7               	movf	_MAX_HEAT& (0+255),w,b
  5860  002AAC  6E01               	movwf	??i2_CheckTemp^0,c
  5861  002AAE  6A02               	clrf	(??i2_CheckTemp+1)^0,c
  5862  002AB0  5001               	movf	??i2_CheckTemp^0,w,c
  5863  002AB2  5D98               	subwf	_Temp& (0+255),w,b
  5864  002AB4  5199               	movf	(_Temp+1)& (0+255),w,b
  5865  002AB6  0A80               	xorlw	128
  5866  002AB8  6E03               	movwf	(??i2_CheckTemp+2)^0,c
  5867  002ABA  5002               	movf	(??i2_CheckTemp+1)^0,w,c
  5868  002ABC  0A80               	xorlw	128
  5869  002ABE  5803               	subwfb	(??i2_CheckTemp+2)^0,w,c
  5870  002AC0  A0D8               	btfss	status,0,c
  5871  002AC2  EF65  F015         	goto	i2u242_41
  5872  002AC6  EF67  F015         	goto	i2u242_40
  5873  002ACA                     i2u242_41:
  5874  002ACA  EF71  F015         	goto	i2l1108
  5875  002ACE                     i2u242_40:
  5876  002ACE                     i2l4045:
  5877                           
  5878                           ; BSR set to: 0
  5879  002ACE  05A3               	decf	_pump_flag& (0+255),w,b
  5880  002AD0  A4D8               	btfss	status,2,c
  5881  002AD2  EF6D  F015         	goto	i2u243_41
  5882  002AD6  EF6F  F015         	goto	i2u243_40
  5883  002ADA                     i2u243_41:
  5884  002ADA  EF71  F015         	goto	i2l1108
  5885  002ADE                     i2u243_40:
  5886  002ADE                     
  5887                           ; BSR set to: 0
  5888                           ;system.c: 43:         idle_flag = 1;
  5889  002ADE  0E01               	movlw	1
  5890  002AE0  6E5E               	movwf	_idle_flag^0,c
  5891  002AE2                     i2l1108:
  5892                           
  5893                           ; BSR set to: 0
  5894  002AE2  0012               	return		;funcret
  5895  002AE4                     __end_ofi2_CheckTemp:
  5896                           	opt callstack 0
  5897                           
  5898 ;; *************** function i2_Pump_On *****************
  5899 ;; Defined at:
  5900 ;;		line 60 in file "system.c"
  5901 ;; Parameters:    Size  Location     Type
  5902 ;;		None
  5903 ;; Auto vars:     Size  Location     Type
  5904 ;;		None
  5905 ;; Return value:  Size  Location     Type
  5906 ;;                  1    wreg      void 
  5907 ;; Registers used:
  5908 ;;		wreg, status,2
  5909 ;; Tracked objects:
  5910 ;;		On entry : 0/0
  5911 ;;		On exit  : 0/0
  5912 ;;		Unchanged: 0/0
  5913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5918 ;;Total ram usage:        0 bytes
  5919 ;; Hardware stack levels used:    1
  5920 ;; This function calls:
  5921 ;;		Nothing
  5922 ;; This function is called by:
  5923 ;;		_Task_Init
  5924 ;;		i2_CheckTemp
  5925 ;;		_dispatchISR
  5926 ;; This function uses a non-reentrant model
  5927 ;;
  5928                           
  5929                           	psect	text42
  5930  003856                     __ptext42:
  5931                           	opt callstack 0
  5932  003856                     i2_Pump_On:
  5933                           	opt callstack 20
  5934  003856                     
  5935                           ;system.c: 61:     pump_flag = 1;
  5936  003856  0E01               	movlw	1
  5937  003858  0100               	movlb	0	; () banked
  5938  00385A  6FA3               	movwf	_pump_flag& (0+255),b
  5939  00385C                     
  5940                           ; BSR set to: 0
  5941  00385C  0012               	return		;funcret
  5942  00385E                     __end_ofi2_Pump_On:
  5943                           	opt callstack 0
  5944                           
  5945 ;; *************** function i2_Heater_Off *****************
  5946 ;; Defined at:
  5947 ;;		line 55 in file "system.c"
  5948 ;; Parameters:    Size  Location     Type
  5949 ;;		None
  5950 ;; Auto vars:     Size  Location     Type
  5951 ;;		None
  5952 ;; Return value:  Size  Location     Type
  5953 ;;                  1    wreg      void 
  5954 ;; Registers used:
  5955 ;;		wreg, status,2
  5956 ;; Tracked objects:
  5957 ;;		On entry : 0/0
  5958 ;;		On exit  : 0/0
  5959 ;;		Unchanged: 0/0
  5960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5965 ;;Total ram usage:        0 bytes
  5966 ;; Hardware stack levels used:    1
  5967 ;; This function calls:
  5968 ;;		Nothing
  5969 ;; This function is called by:
  5970 ;;		i2_CheckTemp
  5971 ;; This function uses a non-reentrant model
  5972 ;;
  5973                           
  5974                           	psect	text43
  5975  003844                     __ptext43:
  5976                           	opt callstack 0
  5977  003844                     i2_Heater_Off:
  5978                           	opt callstack 20
  5979  003844                     
  5980                           ;system.c: 56:     heater_flag = 0;
  5981  003844  0E00               	movlw	0
  5982  003846  0100               	movlb	0	; () banked
  5983  003848  6FA4               	movwf	_heater_flag& (0+255),b
  5984  00384A                     
  5985                           ; BSR set to: 0
  5986                           ;system.c: 57:     LATDbits.LATD3 = 0;
  5987  00384A  968C               	bcf	140,3,c	;volatile
  5988  00384C                     
  5989                           ; BSR set to: 0
  5990  00384C  0012               	return		;funcret
  5991  00384E                     __end_ofi2_Heater_Off:
  5992                           	opt callstack 0
  5993                           
  5994 ;; *************** function i2_CheckHumid *****************
  5995 ;; Defined at:
  5996 ;;		line 31 in file "system.c"
  5997 ;; Parameters:    Size  Location     Type
  5998 ;;		None
  5999 ;; Auto vars:     Size  Location     Type
  6000 ;;		None
  6001 ;; Return value:  Size  Location     Type
  6002 ;;                  1    wreg      void 
  6003 ;; Registers used:
  6004 ;;		wreg, status,2, status,0
  6005 ;; Tracked objects:
  6006 ;;		On entry : 0/0
  6007 ;;		On exit  : 0/0
  6008 ;;		Unchanged: 0/0
  6009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6012 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6013 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6014 ;;Total ram usage:        3 bytes
  6015 ;; Hardware stack levels used:    1
  6016 ;; This function calls:
  6017 ;;		Nothing
  6018 ;; This function is called by:
  6019 ;;		_readButtonRB0
  6020 ;;		_Task_Init
  6021 ;;		_dispatchISR
  6022 ;; This function uses a non-reentrant model
  6023 ;;
  6024                           
  6025                           	psect	text44
  6026  00305E                     __ptext44:
  6027                           	opt callstack 0
  6028  00305E                     i2_CheckHumid:
  6029                           	opt callstack 21
  6030  00305E                     
  6031                           ;system.c: 32:     if((demoHumid > MAX_HUMID || Humid >= MAX_HUMID) && idle_flag == 0 &&
      +                           LATDbits.LATD2 == 0) {
  6032  00305E  0100               	movlb	0	; () banked
  6033  003060  51E6               	movf	_MAX_HUMID& (0+255),w,b
  6034  003062  6E01               	movwf	??i2_CheckHumid^0,c
  6035  003064  6A02               	clrf	(??i2_CheckHumid+1)^0,c
  6036  003066  519A               	movf	_demoHumid& (0+255),w,b
  6037  003068  5C01               	subwf	??i2_CheckHumid^0,w,c
  6038  00306A  5002               	movf	(??i2_CheckHumid+1)^0,w,c
  6039  00306C  0A80               	xorlw	128
  6040  00306E  6E03               	movwf	(??i2_CheckHumid+2)^0,c
  6041  003070  519B               	movf	(_demoHumid+1)& (0+255),w,b
  6042  003072  0A80               	xorlw	128
  6043  003074  5803               	subwfb	(??i2_CheckHumid+2)^0,w,c
  6044  003076  A0D8               	btfss	status,0,c
  6045  003078  EF40  F018         	goto	i2u234_41
  6046  00307C  EF42  F018         	goto	i2u234_40
  6047  003080                     i2u234_41:
  6048  003080  EF54  F018         	goto	i2l4027
  6049  003084                     i2u234_40:
  6050  003084                     
  6051                           ; BSR set to: 0
  6052  003084  51E6               	movf	_MAX_HUMID& (0+255),w,b
  6053  003086  6E01               	movwf	??i2_CheckHumid^0,c
  6054  003088  6A02               	clrf	(??i2_CheckHumid+1)^0,c
  6055  00308A  5001               	movf	??i2_CheckHumid^0,w,c
  6056  00308C  5D96               	subwf	_Humid& (0+255),w,b
  6057  00308E  5197               	movf	(_Humid+1)& (0+255),w,b
  6058  003090  0A80               	xorlw	128
  6059  003092  6E03               	movwf	(??i2_CheckHumid+2)^0,c
  6060  003094  5002               	movf	(??i2_CheckHumid+1)^0,w,c
  6061  003096  0A80               	xorlw	128
  6062  003098  5803               	subwfb	(??i2_CheckHumid+2)^0,w,c
  6063  00309A  A0D8               	btfss	status,0,c
  6064  00309C  EF52  F018         	goto	i2u235_41
  6065  0030A0  EF54  F018         	goto	i2u235_40
  6066  0030A4                     i2u235_41:
  6067  0030A4  EF64  F018         	goto	i2l1099
  6068  0030A8                     i2u235_40:
  6069  0030A8                     i2l4027:
  6070                           
  6071                           ; BSR set to: 0
  6072  0030A8  505E               	movf	_idle_flag^0,w,c
  6073  0030AA  A4D8               	btfss	status,2,c
  6074  0030AC  EF5A  F018         	goto	i2u236_41
  6075  0030B0  EF5C  F018         	goto	i2u236_40
  6076  0030B4                     i2u236_41:
  6077  0030B4  EF64  F018         	goto	i2l1099
  6078  0030B8                     i2u236_40:
  6079  0030B8                     
  6080                           ; BSR set to: 0
  6081  0030B8  B48C               	btfsc	140,2,c	;volatile
  6082  0030BA  EF61  F018         	goto	i2u237_41
  6083  0030BE  EF63  F018         	goto	i2u237_40
  6084  0030C2                     i2u237_41:
  6085  0030C2  EF64  F018         	goto	i2l1099
  6086  0030C6                     i2u237_40:
  6087  0030C6                     
  6088                           ; BSR set to: 0
  6089                           ;system.c: 33:         LATDbits.LATD2 = 1;
  6090  0030C6  848C               	bsf	140,2,c	;volatile
  6091  0030C8                     i2l1099:
  6092                           
  6093                           ; BSR set to: 0
  6094  0030C8  0012               	return		;funcret
  6095  0030CA                     __end_ofi2_CheckHumid:
  6096                           	opt callstack 0
  6097                           
  6098 ;; *************** function _SetUp_Temp *****************
  6099 ;; Defined at:
  6100 ;;		line 209 in file "LCD.c"
  6101 ;; Parameters:    Size  Location     Type
  6102 ;;		None
  6103 ;; Auto vars:     Size  Location     Type
  6104 ;;		None
  6105 ;; Return value:  Size  Location     Type
  6106 ;;                  1    wreg      void 
  6107 ;; Registers used:
  6108 ;;		wreg, status,2, status,0, cstack
  6109 ;; Tracked objects:
  6110 ;;		On entry : 0/0
  6111 ;;		On exit  : 0/0
  6112 ;;		Unchanged: 0/0
  6113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6118 ;;Total ram usage:        0 bytes
  6119 ;; Hardware stack levels used:    1
  6120 ;; Hardware stack levels required when called:    4
  6121 ;; This function calls:
  6122 ;;		i2_LCDMoveCursor
  6123 ;;		i2_LCDPutChar
  6124 ;;		i2___awdiv
  6125 ;;		i2___awmod
  6126 ;; This function is called by:
  6127 ;;		_readButtonRB0
  6128 ;; This function uses a non-reentrant model
  6129 ;;
  6130                           
  6131                           	psect	text45
  6132  0033D4                     __ptext45:
  6133                           	opt callstack 0
  6134  0033D4                     _SetUp_Temp:
  6135                           	opt callstack 17
  6136  0033D4                     
  6137                           ;LCD.c: 210:     LCDMoveCursor(1, 0x4);
  6138  0033D4  0E04               	movlw	4
  6139  0033D6  6E08               	movwf	i2LCDMoveCursor@pos^0,c
  6140  0033D8  0E01               	movlw	1
  6141  0033DA  ECE4  F01A         	call	i2_LCDMoveCursor
  6142                           
  6143                           ;LCD.c: 211:     LCDPutChar(MAX_HEAT/10 + '0');
  6144  0033DE  C0E7  F001         	movff	_MAX_HEAT,i2___awdiv@dividend
  6145  0033E2  6A02               	clrf	(i2___awdiv@dividend+1)^0,c
  6146  0033E4  0E00               	movlw	0
  6147  0033E6  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  6148  0033E8  0E0A               	movlw	10
  6149  0033EA  6E03               	movwf	i2___awdiv@divisor^0,c
  6150  0033EC  ECAF  F014         	call	i2___awdiv	;wreg free
  6151  0033F0  5001               	movf	?i2___awdiv^0,w,c
  6152  0033F2  0F30               	addlw	48
  6153  0033F4  EC98  F018         	call	i2_LCDPutChar
  6154                           
  6155                           ;LCD.c: 212:     LCDPutChar(MAX_HEAT%10 + '0');
  6156  0033F8  C0E7  F001         	movff	_MAX_HEAT,i2___awmod@dividend
  6157  0033FC  6A02               	clrf	(i2___awmod@dividend+1)^0,c
  6158  0033FE  0E00               	movlw	0
  6159  003400  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  6160  003402  0E0A               	movlw	10
  6161  003404  6E03               	movwf	i2___awmod@divisor^0,c
  6162  003406  ECCB  F015         	call	i2___awmod	;wreg free
  6163  00340A  5001               	movf	?i2___awmod^0,w,c
  6164  00340C  0F30               	addlw	48
  6165  00340E  EC98  F018         	call	i2_LCDPutChar
  6166  003412  0012               	return		;funcret
  6167  003414                     __end_of_SetUp_Temp:
  6168                           	opt callstack 0
  6169                           
  6170 ;; *************** function _SetUp_Humid *****************
  6171 ;; Defined at:
  6172 ;;		line 216 in file "LCD.c"
  6173 ;; Parameters:    Size  Location     Type
  6174 ;;		None
  6175 ;; Auto vars:     Size  Location     Type
  6176 ;;		None
  6177 ;; Return value:  Size  Location     Type
  6178 ;;                  1    wreg      void 
  6179 ;; Registers used:
  6180 ;;		wreg, status,2, status,0, cstack
  6181 ;; Tracked objects:
  6182 ;;		On entry : 0/0
  6183 ;;		On exit  : 0/0
  6184 ;;		Unchanged: 0/0
  6185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6190 ;;Total ram usage:        0 bytes
  6191 ;; Hardware stack levels used:    1
  6192 ;; Hardware stack levels required when called:    4
  6193 ;; This function calls:
  6194 ;;		i2_LCDMoveCursor
  6195 ;;		i2_LCDPutChar
  6196 ;;		i2___awdiv
  6197 ;;		i2___awmod
  6198 ;; This function is called by:
  6199 ;;		_readButtonRB0
  6200 ;; This function uses a non-reentrant model
  6201 ;;
  6202                           
  6203                           	psect	text46
  6204  003414                     __ptext46:
  6205                           	opt callstack 0
  6206  003414                     _SetUp_Humid:
  6207                           	opt callstack 17
  6208  003414                     
  6209                           ;LCD.c: 217:     LCDMoveCursor(1, 0xB);
  6210  003414  0E0B               	movlw	11
  6211  003416  6E08               	movwf	i2LCDMoveCursor@pos^0,c
  6212  003418  0E01               	movlw	1
  6213  00341A  ECE4  F01A         	call	i2_LCDMoveCursor
  6214                           
  6215                           ;LCD.c: 218:     LCDPutChar(MAX_HUMID/10 + '0');
  6216  00341E  C0E6  F001         	movff	_MAX_HUMID,i2___awdiv@dividend
  6217  003422  6A02               	clrf	(i2___awdiv@dividend+1)^0,c
  6218  003424  0E00               	movlw	0
  6219  003426  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  6220  003428  0E0A               	movlw	10
  6221  00342A  6E03               	movwf	i2___awdiv@divisor^0,c
  6222  00342C  ECAF  F014         	call	i2___awdiv	;wreg free
  6223  003430  5001               	movf	?i2___awdiv^0,w,c
  6224  003432  0F30               	addlw	48
  6225  003434  EC98  F018         	call	i2_LCDPutChar
  6226                           
  6227                           ;LCD.c: 219:     LCDPutChar(MAX_HUMID%10 + '0');
  6228  003438  C0E6  F001         	movff	_MAX_HUMID,i2___awmod@dividend
  6229  00343C  6A02               	clrf	(i2___awmod@dividend+1)^0,c
  6230  00343E  0E00               	movlw	0
  6231  003440  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  6232  003442  0E0A               	movlw	10
  6233  003444  6E03               	movwf	i2___awmod@divisor^0,c
  6234  003446  ECCB  F015         	call	i2___awmod	;wreg free
  6235  00344A  5001               	movf	?i2___awmod^0,w,c
  6236  00344C  0F30               	addlw	48
  6237  00344E  EC98  F018         	call	i2_LCDPutChar
  6238  003452  0012               	return		;funcret
  6239  003454                     __end_of_SetUp_Humid:
  6240                           	opt callstack 0
  6241                           
  6242 ;; *************** function _PrintSetUp *****************
  6243 ;; Defined at:
  6244 ;;		line 228 in file "LCD.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;		None
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;		None
  6249 ;; Return value:  Size  Location     Type
  6250 ;;                  1    wreg      void 
  6251 ;; Registers used:
  6252 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6253 ;; Tracked objects:
  6254 ;;		On entry : 0/0
  6255 ;;		On exit  : 0/0
  6256 ;;		Unchanged: 0/0
  6257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6262 ;;Total ram usage:        0 bytes
  6263 ;; Hardware stack levels used:    1
  6264 ;; Hardware stack levels required when called:    4
  6265 ;; This function calls:
  6266 ;;		i2_LCDPutInst
  6267 ;;		i2_LCDPutStr
  6268 ;; This function is called by:
  6269 ;;		_readButtonRB0
  6270 ;; This function uses a non-reentrant model
  6271 ;;
  6272                           
  6273                           	psect	text47
  6274  0037D8                     __ptext47:
  6275                           	opt callstack 0
  6276  0037D8                     _PrintSetUp:
  6277                           	opt callstack 17
  6278  0037D8                     
  6279                           ;LCD.c: 229:     LCDPutInst(0xC0);
  6280  0037D8  0EC0               	movlw	192
  6281  0037DA  ECCB  F018         	call	i2_LCDPutInst
  6282  0037DE                     
  6283                           ;LCD.c: 230:     LCDPutStr("T = 00 H = 00");
  6284  0037DE  0E58               	movlw	low STR_6
  6285  0037E0  6E08               	movwf	i2LCDPutStr@ptr^0,c
  6286  0037E2  0E10               	movlw	high STR_6
  6287  0037E4  6E09               	movwf	(i2LCDPutStr@ptr+1)^0,c
  6288  0037E6  EC69  F01A         	call	i2_LCDPutStr	;wreg free
  6289  0037EA  0012               	return		;funcret
  6290  0037EC                     __end_of_PrintSetUp:
  6291                           	opt callstack 0
  6292                           
  6293 ;; *************** function _readButtonRA5 *****************
  6294 ;; Defined at:
  6295 ;;		line 8 in file "buttons.c"
  6296 ;; Parameters:    Size  Location     Type
  6297 ;;		None
  6298 ;; Auto vars:     Size  Location     Type
  6299 ;;		None
  6300 ;; Return value:  Size  Location     Type
  6301 ;;                  1    wreg      void 
  6302 ;; Registers used:
  6303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6304 ;; Tracked objects:
  6305 ;;		On entry : 0/0
  6306 ;;		On exit  : 0/0
  6307 ;;		Unchanged: 0/0
  6308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6313 ;;Total ram usage:        0 bytes
  6314 ;; Hardware stack levels used:    1
  6315 ;; Hardware stack levels required when called:    5
  6316 ;; This function calls:
  6317 ;;		_PrintSetTime
  6318 ;;		_TMR_StopTimer
  6319 ;;		_Task_Init
  6320 ;;		i2_LCDPutInst
  6321 ;;		i2_LCDPutStr
  6322 ;;		i2_PrintIdle
  6323 ;;		i2_TMR_StartTimer
  6324 ;; This function is called by:
  6325 ;;		_global_timer
  6326 ;; This function uses a non-reentrant model
  6327 ;;
  6328                           
  6329                           	psect	text48
  6330  001FF0                     __ptext48:
  6331                           	opt callstack 0
  6332  001FF0                     _readButtonRA5:
  6333                           	opt callstack 17
  6334  001FF0                     
  6335                           ;buttons.c: 11:     if(PORTAbits.RA5 == 0 && isPress_1 == 0) {
  6336  001FF0  BA80               	btfsc	128,5,c	;volatile
  6337  001FF2  EFFD  F00F         	goto	i2u360_41
  6338  001FF6  EFFF  F00F         	goto	i2u360_40
  6339  001FFA                     i2u360_41:
  6340  001FFA  EF97  F010         	goto	i2l924
  6341  001FFE                     i2u360_40:
  6342  001FFE  0100               	movlb	0	; () banked
  6343  002000  51B0               	movf	_isPress_1& (0+255),w,b
  6344  002002  A4D8               	btfss	status,2,c
  6345  002004  EF06  F010         	goto	i2u361_41
  6346  002008  EF08  F010         	goto	i2u361_40
  6347  00200C                     i2u361_41:
  6348  00200C  EF97  F010         	goto	i2l924
  6349  002010                     i2u361_40:
  6350  002010                     
  6351                           ; BSR set to: 0
  6352                           ;buttons.c: 12:         isPress_1 = 1;
  6353  002010  0E01               	movlw	1
  6354  002012  6FB0               	movwf	_isPress_1& (0+255),b
  6355  002014                     
  6356                           ; BSR set to: 0
  6357                           ;buttons.c: 13:         if(idle_flag == 1) {
  6358  002014  045E               	decf	_idle_flag^0,w,c
  6359  002016  A4D8               	btfss	status,2,c
  6360  002018  EF10  F010         	goto	i2u362_41
  6361  00201C  EF12  F010         	goto	i2u362_40
  6362  002020                     i2u362_41:
  6363  002020  EF61  F010         	goto	i2l5097
  6364  002024                     i2u362_40:
  6365  002024                     
  6366                           ; BSR set to: 0
  6367                           ;buttons.c: 14:             if(set_flag == 1) {
  6368  002024  05AA               	decf	_set_flag& (0+255),w,b
  6369  002026  A4D8               	btfss	status,2,c
  6370  002028  EF18  F010         	goto	i2u363_41
  6371  00202C  EF1A  F010         	goto	i2u363_40
  6372  002030                     i2u363_41:
  6373  002030  EF53  F010         	goto	i2l5091
  6374  002034                     i2u363_40:
  6375  002034                     
  6376                           ; BSR set to: 0
  6377                           ;buttons.c: 15:                 if(temp_set_flag == 1) {
  6378  002034  05A9               	decf	_temp_set_flag& (0+255),w,b
  6379  002036  A4D8               	btfss	status,2,c
  6380  002038  EF20  F010         	goto	i2u364_41
  6381  00203C  EF22  F010         	goto	i2u364_40
  6382  002040                     i2u364_41:
  6383  002040  EF2A  F010         	goto	i2l5071
  6384  002044                     i2u364_40:
  6385  002044                     
  6386                           ; BSR set to: 0
  6387                           ;buttons.c: 16:                     temp_set_flag = 0;
  6388  002044  0E00               	movlw	0
  6389  002046  6FA9               	movwf	_temp_set_flag& (0+255),b
  6390                           
  6391                           ;buttons.c: 17:                     humid_set_flag = 1;
  6392  002048  0E01               	movlw	1
  6393  00204A  6FA8               	movwf	_humid_set_flag& (0+255),b
  6394  00204C  EFA1  F010         	goto	i2l928
  6395  002050                     i2l5067:
  6396                           
  6397                           ; BSR set to: 0
  6398                           ;buttons.c: 18:                     return;
  6399  002050  EFA1  F010         	goto	i2l928
  6400  002054                     i2l5071:
  6401                           
  6402                           ; BSR set to: 0
  6403  002054  05A8               	decf	_humid_set_flag& (0+255),w,b
  6404  002056  A4D8               	btfss	status,2,c
  6405  002058  EF30  F010         	goto	i2u365_41
  6406  00205C  EF32  F010         	goto	i2u365_40
  6407  002060                     i2u365_41:
  6408  002060  EF43  F010         	goto	i2l5085
  6409  002064                     i2u365_40:
  6410  002064                     
  6411                           ; BSR set to: 0
  6412                           ;buttons.c: 21:                     humid_set_flag = 0;
  6413  002064  0E00               	movlw	0
  6414  002066  6FA8               	movwf	_humid_set_flag& (0+255),b
  6415                           
  6416                           ;buttons.c: 22:                     time_set_flag = 1;
  6417  002068  0E01               	movlw	1
  6418  00206A  6FA7               	movwf	_time_set_flag& (0+255),b
  6419  00206C                     
  6420                           ; BSR set to: 0
  6421                           ;buttons.c: 23:                     LCDPutInst(0xC0);
  6422  00206C  0EC0               	movlw	192
  6423  00206E  ECCB  F018         	call	i2_LCDPutInst
  6424  002072                     
  6425                           ;buttons.c: 24:                     LCDPutStr("   Time = 00      ");
  6426  002072  0E01               	movlw	low STR_9
  6427  002074  6E08               	movwf	i2LCDPutStr@ptr^0,c
  6428  002076  0E10               	movlw	high STR_9
  6429  002078  6E09               	movwf	(i2LCDPutStr@ptr+1)^0,c
  6430  00207A  EC69  F01A         	call	i2_LCDPutStr	;wreg free
  6431  00207E                     
  6432                           ;buttons.c: 25:                     PrintSetTime();
  6433  00207E  EC88  F019         	call	_PrintSetTime	;wreg free
  6434  002082  EFA1  F010         	goto	i2l928
  6435  002086                     i2l5085:
  6436                           
  6437                           ; BSR set to: 0
  6438  002086  05A7               	decf	_time_set_flag& (0+255),w,b
  6439  002088  A4D8               	btfss	status,2,c
  6440  00208A  EF49  F010         	goto	i2u366_41
  6441  00208E  EF4B  F010         	goto	i2u366_40
  6442  002092                     i2u366_41:
  6443  002092  EF28  F010         	goto	i2l5067
  6444  002096                     i2u366_40:
  6445  002096                     
  6446                           ; BSR set to: 0
  6447                           ;buttons.c: 29:                     time_set_flag = 0;
  6448  002096  0E00               	movlw	0
  6449  002098  6FA7               	movwf	_time_set_flag& (0+255),b
  6450                           
  6451                           ;buttons.c: 30:                     set_flag = 0;
  6452  00209A  0E00               	movlw	0
  6453  00209C  6FAA               	movwf	_set_flag& (0+255),b
  6454  00209E                     
  6455                           ; BSR set to: 0
  6456                           ;buttons.c: 31:                     PrintIdle();
  6457  00209E  EC7E  F01B         	call	i2_PrintIdle	;wreg free
  6458  0020A2  EFA1  F010         	goto	i2l928
  6459  0020A6                     i2l5091:
  6460                           
  6461                           ; BSR set to: 0
  6462  0020A6  51AA               	movf	_set_flag& (0+255),w,b
  6463  0020A8  A4D8               	btfss	status,2,c
  6464  0020AA  EF59  F010         	goto	i2u367_41
  6465  0020AE  EF5B  F010         	goto	i2u367_40
  6466  0020B2                     i2u367_41:
  6467  0020B2  EF28  F010         	goto	i2l5067
  6468  0020B6                     i2u367_40:
  6469  0020B6                     
  6470                           ; BSR set to: 0
  6471                           ;buttons.c: 35:                 Task_Init();
  6472  0020B6  EC46  F00C         	call	_Task_Init	;wreg free
  6473  0020BA                     
  6474                           ;buttons.c: 36:                 idle_flag = 0;
  6475  0020BA  0E00               	movlw	0
  6476  0020BC  6E5E               	movwf	_idle_flag^0,c
  6477  0020BE  EFA1  F010         	goto	i2l928
  6478  0020C2                     i2l5097:
  6479                           
  6480                           ; BSR set to: 0
  6481  0020C2  505E               	movf	_idle_flag^0,w,c
  6482  0020C4  A4D8               	btfss	status,2,c
  6483  0020C6  EF67  F010         	goto	i2u368_41
  6484  0020CA  EF69  F010         	goto	i2u368_40
  6485  0020CE                     i2u368_41:
  6486  0020CE  EFA1  F010         	goto	i2l928
  6487  0020D2                     i2u368_40:
  6488  0020D2                     
  6489                           ; BSR set to: 0
  6490                           ;buttons.c: 40:             if(demo_flag == 0) {
  6491  0020D2  51A6               	movf	_demo_flag& (0+255),w,b
  6492  0020D4  A4D8               	btfss	status,2,c
  6493  0020D6  EF6F  F010         	goto	i2u369_41
  6494  0020DA  EF71  F010         	goto	i2u369_40
  6495  0020DE                     i2u369_41:
  6496  0020DE  EF84  F010         	goto	i2l5107
  6497  0020E2                     i2u369_40:
  6498  0020E2                     
  6499                           ; BSR set to: 0
  6500                           ;buttons.c: 41:                 demoTemp = 0;
  6501  0020E2  0E00               	movlw	0
  6502  0020E4  6F9D               	movwf	(_demoTemp+1)& (0+255),b
  6503  0020E6  0E00               	movlw	0
  6504  0020E8  6F9C               	movwf	_demoTemp& (0+255),b
  6505                           
  6506                           ;buttons.c: 42:                 demoHumid = 0;
  6507  0020EA  0E00               	movlw	0
  6508  0020EC  6F9B               	movwf	(_demoHumid+1)& (0+255),b
  6509  0020EE  0E00               	movlw	0
  6510  0020F0  6F9A               	movwf	_demoHumid& (0+255),b
  6511  0020F2                     
  6512                           ; BSR set to: 0
  6513                           ;buttons.c: 43:                 TMR_StopTimer(0);
  6514  0020F2  0E00               	movlw	0
  6515  0020F4  6E02               	movwf	(TMR_StopTimer@timer_name+1)^0,c
  6516  0020F6  0E00               	movlw	0
  6517  0020F8  6E01               	movwf	TMR_StopTimer@timer_name^0,c
  6518  0020FA  ECA7  F01A         	call	_TMR_StopTimer	;wreg free
  6519  0020FE                     
  6520                           ;buttons.c: 44:                 demo_flag = 1;
  6521  0020FE  0E01               	movlw	1
  6522  002100  0100               	movlb	0	; () banked
  6523  002102  6FA6               	movwf	_demo_flag& (0+255),b
  6524                           
  6525                           ;buttons.c: 45:             }
  6526  002104  EFA1  F010         	goto	i2l928
  6527  002108                     i2l5107:
  6528                           
  6529                           ; BSR set to: 0
  6530  002108  05A6               	decf	_demo_flag& (0+255),w,b
  6531  00210A  A4D8               	btfss	status,2,c
  6532  00210C  EF8A  F010         	goto	i2u370_41
  6533  002110  EF8C  F010         	goto	i2u370_40
  6534  002114                     i2u370_41:
  6535  002114  EFA1  F010         	goto	i2l928
  6536  002118                     i2u370_40:
  6537  002118                     
  6538                           ; BSR set to: 0
  6539                           ;buttons.c: 47:                 TMR_StartTimer(0);
  6540  002118  0E00               	movlw	0
  6541  00211A  6E02               	movwf	(i2TMR_StartTimer@timer_name+1)^0,c
  6542  00211C  0E00               	movlw	0
  6543  00211E  6E01               	movwf	i2TMR_StartTimer@timer_name^0,c
  6544  002120  EC88  F01A         	call	i2_TMR_StartTimer	;wreg free
  6545  002124                     
  6546                           ;buttons.c: 48:                 demo_flag = 0;
  6547  002124  0E00               	movlw	0
  6548  002126  0100               	movlb	0	; () banked
  6549  002128  6FA6               	movwf	_demo_flag& (0+255),b
  6550  00212A  EFA1  F010         	goto	i2l928
  6551  00212E                     i2l924:
  6552  00212E  AA80               	btfss	128,5,c	;volatile
  6553  002130  EF9C  F010         	goto	i2u371_41
  6554  002134  EF9E  F010         	goto	i2u371_40
  6555  002138                     i2u371_41:
  6556  002138  EFA1  F010         	goto	i2l928
  6557  00213C                     i2u371_40:
  6558  00213C  0E00               	movlw	0
  6559  00213E  0100               	movlb	0	; () banked
  6560  002140  6FB0               	movwf	_isPress_1& (0+255),b
  6561  002142                     i2l928:
  6562  002142  0012               	return		;funcret
  6563  002144                     __end_of_readButtonRA5:
  6564                           	opt callstack 0
  6565                           
  6566 ;; *************** function i2_PrintIdle *****************
  6567 ;; Defined at:
  6568 ;;		line 190 in file "LCD.c"
  6569 ;; Parameters:    Size  Location     Type
  6570 ;;		None
  6571 ;; Auto vars:     Size  Location     Type
  6572 ;;		None
  6573 ;; Return value:  Size  Location     Type
  6574 ;;                  1    wreg      void 
  6575 ;; Registers used:
  6576 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6577 ;; Tracked objects:
  6578 ;;		On entry : 0/0
  6579 ;;		On exit  : 0/0
  6580 ;;		Unchanged: 0/0
  6581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6586 ;;Total ram usage:        0 bytes
  6587 ;; Hardware stack levels used:    1
  6588 ;; Hardware stack levels required when called:    4
  6589 ;; This function calls:
  6590 ;;		i2_LCDPutInst
  6591 ;;		i2_LCDPutStr
  6592 ;; This function is called by:
  6593 ;;		_readButtonRA5
  6594 ;; This function uses a non-reentrant model
  6595 ;;
  6596                           
  6597                           	psect	text49
  6598  0036FC                     __ptext49:
  6599                           	opt callstack 0
  6600  0036FC                     i2_PrintIdle:
  6601                           	opt callstack 17
  6602  0036FC                     
  6603                           ;LCD.c: 191:     LCDPutInst(0x80);
  6604  0036FC  0E80               	movlw	128
  6605  0036FE  ECCB  F018         	call	i2_LCDPutInst
  6606  003702                     
  6607                           ;LCD.c: 192:     LCDPutStr("   IDLE STATE   ");
  6608  003702  0E47               	movlw	low STR_1
  6609  003704  6E08               	movwf	i2LCDPutStr@ptr^0,c
  6610  003706  0E10               	movlw	high STR_1
  6611  003708  6E09               	movwf	(i2LCDPutStr@ptr+1)^0,c
  6612  00370A  EC69  F01A         	call	i2_LCDPutStr	;wreg free
  6613  00370E                     
  6614                           ;LCD.c: 193:     LCDPutInst(0xC0);
  6615  00370E  0EC0               	movlw	192
  6616  003710  ECCB  F018         	call	i2_LCDPutInst
  6617                           
  6618                           ;LCD.c: 194:     LCDPutStr("                ");
  6619  003714  0E14               	movlw	low STR_2
  6620  003716  6E08               	movwf	i2LCDPutStr@ptr^0,c
  6621  003718  0E10               	movlw	high STR_2
  6622  00371A  6E09               	movwf	(i2LCDPutStr@ptr+1)^0,c
  6623  00371C  EC69  F01A         	call	i2_LCDPutStr	;wreg free
  6624  003720  0012               	return		;funcret
  6625  003722                     __end_ofi2_PrintIdle:
  6626                           	opt callstack 0
  6627                           
  6628 ;; *************** function i2_LCDPutStr *****************
  6629 ;; Defined at:
  6630 ;;		line 159 in file "LCD.c"
  6631 ;; Parameters:    Size  Location     Type
  6632 ;;  ptr             2    7[COMRAM] PTR const unsigned char 
  6633 ;;		 -> STR_9(19), STR_8(3), STR_7(3), STR_6(14), 
  6634 ;;		 -> STR_5(17), STR_4(12), STR_3(17), STR_2(17), 
  6635 ;;		 -> STR_1(17), 
  6636 ;; Auto vars:     Size  Location     Type
  6637 ;;		None
  6638 ;; Return value:  Size  Location     Type
  6639 ;;                  1    wreg      void 
  6640 ;; Registers used:
  6641 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6647 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6650 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6651 ;;Total ram usage:        2 bytes
  6652 ;; Hardware stack levels used:    1
  6653 ;; Hardware stack levels required when called:    3
  6654 ;; This function calls:
  6655 ;;		i2_LCDPutChar
  6656 ;; This function is called by:
  6657 ;;		_PrintSetUp
  6658 ;;		_readButtonRA5
  6659 ;;		i2_PrintIdle
  6660 ;; This function uses a non-reentrant model
  6661 ;;
  6662                           
  6663                           	psect	text50
  6664  0034D2                     __ptext50:
  6665                           	opt callstack 0
  6666  0034D2                     i2_LCDPutStr:
  6667                           	opt callstack 17
  6668  0034D2                     
  6669                           ;LCD.c: 159: void LCDPutStr (const char *ptr);LCD.c: 160: {;LCD.c: 161:     while(*ptr) 
      +                          LCDPutChar(*(ptr++));
  6670  0034D2  EF77  F01A         	goto	i2l3647
  6671  0034D6                     i2l3643:
  6672  0034D6  C008  FFF6         	movff	i2LCDPutStr@ptr,tblptrl
  6673  0034DA  C009  FFF7         	movff	i2LCDPutStr@ptr+1,tblptrh
  6674  0034DE                     	if	0	;tblptru may be non-zero
  6675  0034DE                     	endif
  6676  0034DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6677  0034DE  0E00               	movlw	low (__mediumconst shr (0+16))
  6678  0034E0  6EF8               	movwf	tblptru,c
  6679  0034E2                     	endif
  6680  0034E2  0008               	tblrd		*
  6681  0034E4  50F5               	movf	tablat,w,c
  6682  0034E6  EC98  F018         	call	i2_LCDPutChar
  6683  0034EA  4A08               	infsnz	i2LCDPutStr@ptr^0,f,c
  6684  0034EC  2A09               	incf	(i2LCDPutStr@ptr+1)^0,f,c
  6685  0034EE                     i2l3647:
  6686  0034EE  C008  FFF6         	movff	i2LCDPutStr@ptr,tblptrl
  6687  0034F2  C009  FFF7         	movff	i2LCDPutStr@ptr+1,tblptrh
  6688  0034F6                     	if	0	;tblptru may be non-zero
  6689  0034F6                     	endif
  6690  0034F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6691  0034F6  0E00               	movlw	low (__mediumconst shr (0+16))
  6692  0034F8  6EF8               	movwf	tblptru,c
  6693  0034FA                     	endif
  6694  0034FA  0008               	tblrd		*
  6695  0034FC  50F5               	movf	tablat,w,c
  6696  0034FE  0900               	iorlw	0
  6697  003500  A4D8               	btfss	status,2,c
  6698  003502  EF85  F01A         	goto	i2u193_41
  6699  003506  EF87  F01A         	goto	i2u193_40
  6700  00350A                     i2u193_41:
  6701  00350A  EF6B  F01A         	goto	i2l3643
  6702  00350E                     i2u193_40:
  6703  00350E  0012               	return		;funcret
  6704  003510                     __end_ofi2_LCDPutStr:
  6705                           	opt callstack 0
  6706                           
  6707 ;; *************** function _Task_Init *****************
  6708 ;; Defined at:
  6709 ;;		line 7 in file "system.c"
  6710 ;; Parameters:    Size  Location     Type
  6711 ;;		None
  6712 ;; Auto vars:     Size  Location     Type
  6713 ;;  task_6          2    0        int 
  6714 ;;  task_4          2    0        int 
  6715 ;;  task_3          2    0        int 
  6716 ;;  task_2          2    0        int 
  6717 ;;  task_1          2    0        int 
  6718 ;; Return value:  Size  Location     Type
  6719 ;;                  1    wreg      void 
  6720 ;; Registers used:
  6721 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6722 ;; Tracked objects:
  6723 ;;		On entry : 0/0
  6724 ;;		On exit  : 0/0
  6725 ;;		Unchanged: 0/0
  6726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6728 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6730 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6731 ;;Total ram usage:       26 bytes
  6732 ;; Hardware stack levels used:    1
  6733 ;; Hardware stack levels required when called:    3
  6734 ;; This function calls:
  6735 ;;		_register_timer
  6736 ;;		i2_TMR_StartTimer
  6737 ;;		i2___wmul
  6738 ;; This function is called by:
  6739 ;;		_readButtonRA5
  6740 ;; This function uses a non-reentrant model
  6741 ;;
  6742                           
  6743                           	psect	text51
  6744  00188C                     __ptext51:
  6745                           	opt callstack 0
  6746  00188C                     _Task_Init:
  6747                           	opt callstack 18
  6748  00188C                     
  6749                           ;system.c: 8:     int task_1 = register_timer(0, Time * 200, Heater_On);
  6750  00188C  C0DF  F001         	movff	_Time,i2___wmul@multiplier
  6751  001890  C0E0  F002         	movff	_Time+1,i2___wmul@multiplier+1
  6752  001894  0E00               	movlw	0
  6753  001896  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6754  001898  0EC8               	movlw	200
  6755  00189A  6E03               	movwf	i2___wmul@multiplicand^0,c
  6756  00189C  EC91  F01B         	call	i2___wmul	;wreg free
  6757  0018A0  C001  F0C4         	movff	?i2___wmul,_Task_Init$2650
  6758  0018A4  C002  F0C5         	movff	?i2___wmul+1,_Task_Init$2650+1
  6759  0018A8  0100               	movlb	0	; () banked
  6760  0018AA  0E00               	movlw	0
  6761  0018AC  BFC5               	btfsc	(_Task_Init$2650+1)& (0+255),7,b
  6762  0018AE  0EFF               	movlw	-1
  6763  0018B0  6FC6               	movwf	(_Task_Init$2650+2)& (0+255),b
  6764  0018B2  6FC7               	movwf	(_Task_Init$2650+3)& (0+255),b
  6765  0018B4  6FC8               	movwf	(_Task_Init$2650+4)& (0+255),b
  6766  0018B6  6FC9               	movwf	(_Task_Init$2650+5)& (0+255),b
  6767  0018B8  6FCA               	movwf	(_Task_Init$2650+6)& (0+255),b
  6768  0018BA  6FCB               	movwf	(_Task_Init$2650+7)& (0+255),b
  6769  0018BC                     
  6770                           ; BSR set to: 0
  6771  0018BC  0E00               	movlw	0
  6772  0018BE  6E32               	movwf	register_timer@delay^0,c
  6773  0018C0  0E00               	movlw	0
  6774  0018C2  6E33               	movwf	(register_timer@delay+1)^0,c
  6775  0018C4  0E00               	movlw	0
  6776  0018C6  6E34               	movwf	(register_timer@delay+2)^0,c
  6777  0018C8  0E00               	movlw	0
  6778  0018CA  6E35               	movwf	(register_timer@delay+3)^0,c
  6779  0018CC  0E00               	movlw	0
  6780  0018CE  6E36               	movwf	(register_timer@delay+4)^0,c
  6781  0018D0  0E00               	movlw	0
  6782  0018D2  6E37               	movwf	(register_timer@delay+5)^0,c
  6783  0018D4  0E00               	movlw	0
  6784  0018D6  6E38               	movwf	(register_timer@delay+6)^0,c
  6785  0018D8  0E00               	movlw	0
  6786  0018DA  6E39               	movwf	(register_timer@delay+7)^0,c
  6787  0018DC  C0C4  F03A         	movff	_Task_Init$2650,register_timer@period
  6788  0018E0  C0C5  F03B         	movff	_Task_Init$2650+1,register_timer@period+1
  6789  0018E4  C0C6  F03C         	movff	_Task_Init$2650+2,register_timer@period+2
  6790  0018E8  C0C7  F03D         	movff	_Task_Init$2650+3,register_timer@period+3
  6791  0018EC  C0C8  F03E         	movff	_Task_Init$2650+4,register_timer@period+4
  6792  0018F0  C0C9  F03F         	movff	_Task_Init$2650+5,register_timer@period+5
  6793  0018F4  C0CA  F040         	movff	_Task_Init$2650+6,register_timer@period+6
  6794  0018F8  C0CB  F041         	movff	_Task_Init$2650+7,register_timer@period+7
  6795  0018FC  0E4E               	movlw	low _Heater_On
  6796  0018FE  6E42               	movwf	register_timer@data^0,c
  6797  001900  0E38               	movlw	high _Heater_On
  6798  001902  6E43               	movwf	(register_timer@data+1)^0,c
  6799  001904  0E00               	movlw	low (_Heater_On shr (0+16))
  6800  001906  6E44               	movwf	(register_timer@data+2)^0,c
  6801  001908  ECB7  F016         	call	_register_timer	;wreg free
  6802  00190C                     
  6803                           ;system.c: 9:     int task_2 = register_timer(Time * 100, Time * 200, Pump_On);
  6804  00190C  C0DF  F001         	movff	_Time,i2___wmul@multiplier
  6805  001910  C0E0  F002         	movff	_Time+1,i2___wmul@multiplier+1
  6806  001914  0E00               	movlw	0
  6807  001916  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6808  001918  0E64               	movlw	100
  6809  00191A  6E03               	movwf	i2___wmul@multiplicand^0,c
  6810  00191C  EC91  F01B         	call	i2___wmul	;wreg free
  6811  001920  C001  F0C4         	movff	?i2___wmul,_Task_Init$2650
  6812  001924  C002  F0C5         	movff	?i2___wmul+1,_Task_Init$2650+1
  6813  001928  0100               	movlb	0	; () banked
  6814  00192A  0E00               	movlw	0
  6815  00192C  BFC5               	btfsc	(_Task_Init$2650+1)& (0+255),7,b
  6816  00192E  0EFF               	movlw	-1
  6817  001930  6FC6               	movwf	(_Task_Init$2650+2)& (0+255),b
  6818  001932  6FC7               	movwf	(_Task_Init$2650+3)& (0+255),b
  6819  001934  6FC8               	movwf	(_Task_Init$2650+4)& (0+255),b
  6820  001936  6FC9               	movwf	(_Task_Init$2650+5)& (0+255),b
  6821  001938  6FCA               	movwf	(_Task_Init$2650+6)& (0+255),b
  6822  00193A  6FCB               	movwf	(_Task_Init$2650+7)& (0+255),b
  6823  00193C                     
  6824                           ; BSR set to: 0
  6825                           ;system.c: 9:     int task_2 = register_timer(Time * 100, Time * 200, Pump_On);
  6826  00193C  C0DF  F001         	movff	_Time,i2___wmul@multiplier
  6827  001940  C0E0  F002         	movff	_Time+1,i2___wmul@multiplier+1
  6828  001944  0E00               	movlw	0
  6829  001946  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6830  001948  0EC8               	movlw	200
  6831  00194A  6E03               	movwf	i2___wmul@multiplicand^0,c
  6832  00194C  EC91  F01B         	call	i2___wmul	;wreg free
  6833  001950  C001  F0BC         	movff	?i2___wmul,_Task_Init$2651
  6834  001954  C002  F0BD         	movff	?i2___wmul+1,_Task_Init$2651+1
  6835  001958  0100               	movlb	0	; () banked
  6836  00195A  0E00               	movlw	0
  6837  00195C  BFBD               	btfsc	(_Task_Init$2651+1)& (0+255),7,b
  6838  00195E  0EFF               	movlw	-1
  6839  001960  6FBE               	movwf	(_Task_Init$2651+2)& (0+255),b
  6840  001962  6FBF               	movwf	(_Task_Init$2651+3)& (0+255),b
  6841  001964  6FC0               	movwf	(_Task_Init$2651+4)& (0+255),b
  6842  001966  6FC1               	movwf	(_Task_Init$2651+5)& (0+255),b
  6843  001968  6FC2               	movwf	(_Task_Init$2651+6)& (0+255),b
  6844  00196A  6FC3               	movwf	(_Task_Init$2651+7)& (0+255),b
  6845  00196C                     
  6846                           ; BSR set to: 0
  6847  00196C  C0C4  F032         	movff	_Task_Init$2650,register_timer@delay
  6848  001970  C0C5  F033         	movff	_Task_Init$2650+1,register_timer@delay+1
  6849  001974  C0C6  F034         	movff	_Task_Init$2650+2,register_timer@delay+2
  6850  001978  C0C7  F035         	movff	_Task_Init$2650+3,register_timer@delay+3
  6851  00197C  C0C8  F036         	movff	_Task_Init$2650+4,register_timer@delay+4
  6852  001980  C0C9  F037         	movff	_Task_Init$2650+5,register_timer@delay+5
  6853  001984  C0CA  F038         	movff	_Task_Init$2650+6,register_timer@delay+6
  6854  001988  C0CB  F039         	movff	_Task_Init$2650+7,register_timer@delay+7
  6855  00198C  C0BC  F03A         	movff	_Task_Init$2651,register_timer@period
  6856  001990  C0BD  F03B         	movff	_Task_Init$2651+1,register_timer@period+1
  6857  001994  C0BE  F03C         	movff	_Task_Init$2651+2,register_timer@period+2
  6858  001998  C0BF  F03D         	movff	_Task_Init$2651+3,register_timer@period+3
  6859  00199C  C0C0  F03E         	movff	_Task_Init$2651+4,register_timer@period+4
  6860  0019A0  C0C1  F03F         	movff	_Task_Init$2651+5,register_timer@period+5
  6861  0019A4  C0C2  F040         	movff	_Task_Init$2651+6,register_timer@period+6
  6862  0019A8  C0C3  F041         	movff	_Task_Init$2651+7,register_timer@period+7
  6863  0019AC  0E56               	movlw	low i2_Pump_On
  6864  0019AE  6E42               	movwf	register_timer@data^0,c
  6865  0019B0  0E38               	movlw	high i2_Pump_On
  6866  0019B2  6E43               	movwf	(register_timer@data+1)^0,c
  6867  0019B4  0E00               	movlw	low (i2_Pump_On shr (0+16))
  6868  0019B6  6E44               	movwf	(register_timer@data+2)^0,c
  6869  0019B8  ECB7  F016         	call	_register_timer	;wreg free
  6870  0019BC  0E00               	movlw	0
  6871  0019BE  6E32               	movwf	register_timer@delay^0,c
  6872  0019C0  0E00               	movlw	0
  6873  0019C2  6E33               	movwf	(register_timer@delay+1)^0,c
  6874  0019C4  0E00               	movlw	0
  6875  0019C6  6E34               	movwf	(register_timer@delay+2)^0,c
  6876  0019C8  0E00               	movlw	0
  6877  0019CA  6E35               	movwf	(register_timer@delay+3)^0,c
  6878  0019CC  0E00               	movlw	0
  6879  0019CE  6E36               	movwf	(register_timer@delay+4)^0,c
  6880  0019D0  0E00               	movlw	0
  6881  0019D2  6E37               	movwf	(register_timer@delay+5)^0,c
  6882  0019D4  0E00               	movlw	0
  6883  0019D6  6E38               	movwf	(register_timer@delay+6)^0,c
  6884  0019D8  0E00               	movlw	0
  6885  0019DA  6E39               	movwf	(register_timer@delay+7)^0,c
  6886  0019DC  0E64               	movlw	100
  6887  0019DE  6E3A               	movwf	register_timer@period^0,c
  6888  0019E0  0E00               	movlw	0
  6889  0019E2  6E3B               	movwf	(register_timer@period+1)^0,c
  6890  0019E4  0E00               	movlw	0
  6891  0019E6  6E3C               	movwf	(register_timer@period+2)^0,c
  6892  0019E8  0E00               	movlw	0
  6893  0019EA  6E3D               	movwf	(register_timer@period+3)^0,c
  6894  0019EC  0E00               	movlw	0
  6895  0019EE  6E3E               	movwf	(register_timer@period+4)^0,c
  6896  0019F0  0E00               	movlw	0
  6897  0019F2  6E3F               	movwf	(register_timer@period+5)^0,c
  6898  0019F4  0E00               	movlw	0
  6899  0019F6  6E40               	movwf	(register_timer@period+6)^0,c
  6900  0019F8  0E00               	movlw	0
  6901  0019FA  6E41               	movwf	(register_timer@period+7)^0,c
  6902  0019FC  0E22               	movlw	low i2_CheckTemp
  6903  0019FE  6E42               	movwf	register_timer@data^0,c
  6904  001A00  0E2A               	movlw	high i2_CheckTemp
  6905  001A02  6E43               	movwf	(register_timer@data+1)^0,c
  6906  001A04  0E00               	movlw	low (i2_CheckTemp shr (0+16))
  6907  001A06  6E44               	movwf	(register_timer@data+2)^0,c
  6908  001A08  ECB7  F016         	call	_register_timer	;wreg free
  6909  001A0C  0E00               	movlw	0
  6910  001A0E  6E32               	movwf	register_timer@delay^0,c
  6911  001A10  0E00               	movlw	0
  6912  001A12  6E33               	movwf	(register_timer@delay+1)^0,c
  6913  001A14  0E00               	movlw	0
  6914  001A16  6E34               	movwf	(register_timer@delay+2)^0,c
  6915  001A18  0E00               	movlw	0
  6916  001A1A  6E35               	movwf	(register_timer@delay+3)^0,c
  6917  001A1C  0E00               	movlw	0
  6918  001A1E  6E36               	movwf	(register_timer@delay+4)^0,c
  6919  001A20  0E00               	movlw	0
  6920  001A22  6E37               	movwf	(register_timer@delay+5)^0,c
  6921  001A24  0E00               	movlw	0
  6922  001A26  6E38               	movwf	(register_timer@delay+6)^0,c
  6923  001A28  0E00               	movlw	0
  6924  001A2A  6E39               	movwf	(register_timer@delay+7)^0,c
  6925  001A2C  0E64               	movlw	100
  6926  001A2E  6E3A               	movwf	register_timer@period^0,c
  6927  001A30  0E00               	movlw	0
  6928  001A32  6E3B               	movwf	(register_timer@period+1)^0,c
  6929  001A34  0E00               	movlw	0
  6930  001A36  6E3C               	movwf	(register_timer@period+2)^0,c
  6931  001A38  0E00               	movlw	0
  6932  001A3A  6E3D               	movwf	(register_timer@period+3)^0,c
  6933  001A3C  0E00               	movlw	0
  6934  001A3E  6E3E               	movwf	(register_timer@period+4)^0,c
  6935  001A40  0E00               	movlw	0
  6936  001A42  6E3F               	movwf	(register_timer@period+5)^0,c
  6937  001A44  0E00               	movlw	0
  6938  001A46  6E40               	movwf	(register_timer@period+6)^0,c
  6939  001A48  0E00               	movlw	0
  6940  001A4A  6E41               	movwf	(register_timer@period+7)^0,c
  6941  001A4C  0E5E               	movlw	low i2_CheckHumid
  6942  001A4E  6E42               	movwf	register_timer@data^0,c
  6943  001A50  0E30               	movlw	high i2_CheckHumid
  6944  001A52  6E43               	movwf	(register_timer@data+1)^0,c
  6945  001A54  0E00               	movlw	low (i2_CheckHumid shr (0+16))
  6946  001A56  6E44               	movwf	(register_timer@data+2)^0,c
  6947  001A58  ECB7  F016         	call	_register_timer	;wreg free
  6948  001A5C  0E00               	movlw	0
  6949  001A5E  6E32               	movwf	register_timer@delay^0,c
  6950  001A60  0E00               	movlw	0
  6951  001A62  6E33               	movwf	(register_timer@delay+1)^0,c
  6952  001A64  0E00               	movlw	0
  6953  001A66  6E34               	movwf	(register_timer@delay+2)^0,c
  6954  001A68  0E00               	movlw	0
  6955  001A6A  6E35               	movwf	(register_timer@delay+3)^0,c
  6956  001A6C  0E00               	movlw	0
  6957  001A6E  6E36               	movwf	(register_timer@delay+4)^0,c
  6958  001A70  0E00               	movlw	0
  6959  001A72  6E37               	movwf	(register_timer@delay+5)^0,c
  6960  001A74  0E00               	movlw	0
  6961  001A76  6E38               	movwf	(register_timer@delay+6)^0,c
  6962  001A78  0E00               	movlw	0
  6963  001A7A  6E39               	movwf	(register_timer@delay+7)^0,c
  6964  001A7C  0E64               	movlw	100
  6965  001A7E  6E3A               	movwf	register_timer@period^0,c
  6966  001A80  0E00               	movlw	0
  6967  001A82  6E3B               	movwf	(register_timer@period+1)^0,c
  6968  001A84  0E00               	movlw	0
  6969  001A86  6E3C               	movwf	(register_timer@period+2)^0,c
  6970  001A88  0E00               	movlw	0
  6971  001A8A  6E3D               	movwf	(register_timer@period+3)^0,c
  6972  001A8C  0E00               	movlw	0
  6973  001A8E  6E3E               	movwf	(register_timer@period+4)^0,c
  6974  001A90  0E00               	movlw	0
  6975  001A92  6E3F               	movwf	(register_timer@period+5)^0,c
  6976  001A94  0E00               	movlw	0
  6977  001A96  6E40               	movwf	(register_timer@period+6)^0,c
  6978  001A98  0E00               	movlw	0
  6979  001A9A  6E41               	movwf	(register_timer@period+7)^0,c
  6980  001A9C  0EB0               	movlw	low _test
  6981  001A9E  6E42               	movwf	register_timer@data^0,c
  6982  001AA0  0E36               	movlw	high _test
  6983  001AA2  6E43               	movwf	(register_timer@data+1)^0,c
  6984  001AA4  0E00               	movlw	low (_test shr (0+16))
  6985  001AA6  6E44               	movwf	(register_timer@data+2)^0,c
  6986  001AA8  ECB7  F016         	call	_register_timer	;wreg free
  6987  001AAC                     
  6988                           ;system.c: 14:     TMR_StartTimer(0);
  6989  001AAC  0E00               	movlw	0
  6990  001AAE  6E02               	movwf	(i2TMR_StartTimer@timer_name+1)^0,c
  6991  001AB0  0E00               	movlw	0
  6992  001AB2  6E01               	movwf	i2TMR_StartTimer@timer_name^0,c
  6993  001AB4  EC88  F01A         	call	i2_TMR_StartTimer	;wreg free
  6994  001AB8  0012               	return		;funcret
  6995  001ABA                     __end_of_Task_Init:
  6996                           	opt callstack 0
  6997                           
  6998 ;; *************** function i2_TMR_StartTimer *****************
  6999 ;; Defined at:
  7000 ;;		line 42 in file "OSCL_TMR_Set_Up.c"
  7001 ;; Parameters:    Size  Location     Type
  7002 ;;  timer_name      2    0[COMRAM] int 
  7003 ;; Auto vars:     Size  Location     Type
  7004 ;;		None
  7005 ;; Return value:  Size  Location     Type
  7006 ;;                  1    wreg      void 
  7007 ;; Registers used:
  7008 ;;		wreg, status,2, status,0
  7009 ;; Tracked objects:
  7010 ;;		On entry : 0/0
  7011 ;;		On exit  : 0/0
  7012 ;;		Unchanged: 0/0
  7013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7014 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7016 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7017 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7018 ;;Total ram usage:        4 bytes
  7019 ;; Hardware stack levels used:    1
  7020 ;; This function calls:
  7021 ;;		Nothing
  7022 ;; This function is called by:
  7023 ;;		_readButtonRA5
  7024 ;;		_Task_Init
  7025 ;; This function uses a non-reentrant model
  7026 ;;
  7027                           
  7028                           	psect	text52
  7029  003510                     __ptext52:
  7030                           	opt callstack 0
  7031  003510                     i2_TMR_StartTimer:
  7032                           	opt callstack 21
  7033  003510                     
  7034                           ;OSCL_TMR_Set_Up.c: 43:     switch(timer_name) {
  7035  003510  EF90  F01A         	goto	i2l3663
  7036  003514                     i2l283:
  7037                           
  7038                           ;OSCL_TMR_Set_Up.c: 45:             T0CONbits.TMR0ON = 1;
  7039  003514  8ED5               	bsf	213,7,c	;volatile
  7040                           
  7041                           ;OSCL_TMR_Set_Up.c: 46:         break;
  7042  003516  EFA6  F01A         	goto	i2l286
  7043  00351A                     i2l285:
  7044                           
  7045                           ;OSCL_TMR_Set_Up.c: 49:             T1CONbits.TMR1ON = 1;
  7046  00351A  80CD               	bsf	205,0,c	;volatile
  7047                           
  7048                           ;OSCL_TMR_Set_Up.c: 50:         break;
  7049  00351C  EFA6  F01A         	goto	i2l286
  7050  003520                     i2l3663:
  7051  003520  C001  F003         	movff	i2TMR_StartTimer@timer_name,??i2_TMR_StartTimer
  7052  003524  C002  F004         	movff	i2TMR_StartTimer@timer_name+1,??i2_TMR_StartTimer+1
  7053                           
  7054                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7055                           ; Switch size 1, requested type "simple"
  7056                           ; Number of cases is 1, Range of values is 0 to 0
  7057                           ; switch strategies available:
  7058                           ; Name         Instructions Cycles
  7059                           ; simple_byte            4     3 (average)
  7060                           ;	Chosen strategy is simple_byte
  7061  003528  5004               	movf	(??i2_TMR_StartTimer+1)^0,w,c
  7062  00352A  0A00               	xorlw	0	; case 0
  7063  00352C  B4D8               	btfsc	status,2,c
  7064  00352E  EF9B  F01A         	goto	i2l5489
  7065  003532  EFA6  F01A         	goto	i2l286
  7066  003536                     i2l5489:
  7067                           
  7068                           ; Switch size 1, requested type "simple"
  7069                           ; Number of cases is 2, Range of values is 0 to 1
  7070                           ; switch strategies available:
  7071                           ; Name         Instructions Cycles
  7072                           ; simple_byte            7     4 (average)
  7073                           ;	Chosen strategy is simple_byte
  7074  003536  5003               	movf	??i2_TMR_StartTimer^0,w,c
  7075  003538  0A00               	xorlw	0	; case 0
  7076  00353A  B4D8               	btfsc	status,2,c
  7077  00353C  EF8A  F01A         	goto	i2l283
  7078  003540  0A01               	xorlw	1	; case 1
  7079  003542  B4D8               	btfsc	status,2,c
  7080  003544  EF8D  F01A         	goto	i2l285
  7081  003548  EFA6  F01A         	goto	i2l286
  7082  00354C                     i2l286:
  7083  00354C  0012               	return		;funcret
  7084  00354E                     __end_ofi2_TMR_StartTimer:
  7085                           	opt callstack 0
  7086                           
  7087 ;; *************** function _register_timer *****************
  7088 ;; Defined at:
  7089 ;;		line 4 in file "clock.c"
  7090 ;; Parameters:    Size  Location     Type
  7091 ;;  delay           8   49[COMRAM] unsigned long long 
  7092 ;;  period          8   57[COMRAM] unsigned long long 
  7093 ;;  data            3   65[COMRAM] PTR FTN()void 
  7094 ;;		 -> i2_Pump_On(1), i2_CheckHumid(1), i2_CheckTemp(1), Pump_On(1), 
  7095 ;;		 -> Heater_On(1), test(1), CheckHumid(1), CheckTemp(1), 
  7096 ;; Auto vars:     Size  Location     Type
  7097 ;;  res             2   69[COMRAM] int 
  7098 ;; Return value:  Size  Location     Type
  7099 ;;                  2   49[COMRAM] int 
  7100 ;; Registers used:
  7101 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7102 ;; Tracked objects:
  7103 ;;		On entry : 0/0
  7104 ;;		On exit  : 0/0
  7105 ;;		Unchanged: 0/0
  7106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7107 ;;      Params:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7108 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7109 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7110 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7111 ;;Total ram usage:       22 bytes
  7112 ;; Hardware stack levels used:    1
  7113 ;; Hardware stack levels required when called:    2
  7114 ;; This function calls:
  7115 ;;		_AddElement
  7116 ;; This function is called by:
  7117 ;;		_Task_Init
  7118 ;; This function uses a non-reentrant model
  7119 ;;
  7120                           
  7121                           	psect	text53
  7122  002D6E                     __ptext53:
  7123                           	opt callstack 0
  7124  002D6E                     _register_timer:
  7125                           	opt callstack 18
  7126  002D6E                     
  7127                           ;clock.c: 5:     int res = AddElement(delay, period, data, task);
  7128  002D6E  C032  F007         	movff	register_timer@delay,AddElement@delay
  7129  002D72  C033  F008         	movff	register_timer@delay+1,AddElement@delay+1
  7130  002D76  C034  F009         	movff	register_timer@delay+2,AddElement@delay+2
  7131  002D7A  C035  F00A         	movff	register_timer@delay+3,AddElement@delay+3
  7132  002D7E  C036  F00B         	movff	register_timer@delay+4,AddElement@delay+4
  7133  002D82  C037  F00C         	movff	register_timer@delay+5,AddElement@delay+5
  7134  002D86  C038  F00D         	movff	register_timer@delay+6,AddElement@delay+6
  7135  002D8A  C039  F00E         	movff	register_timer@delay+7,AddElement@delay+7
  7136  002D8E  C03A  F00F         	movff	register_timer@period,AddElement@period
  7137  002D92  C03B  F010         	movff	register_timer@period+1,AddElement@period+1
  7138  002D96  C03C  F011         	movff	register_timer@period+2,AddElement@period+2
  7139  002D9A  C03D  F012         	movff	register_timer@period+3,AddElement@period+3
  7140  002D9E  C03E  F013         	movff	register_timer@period+4,AddElement@period+4
  7141  002DA2  C03F  F014         	movff	register_timer@period+5,AddElement@period+5
  7142  002DA6  C040  F015         	movff	register_timer@period+6,AddElement@period+6
  7143  002DAA  C041  F016         	movff	register_timer@period+7,AddElement@period+7
  7144  002DAE  C042  F017         	movff	register_timer@data,AddElement@data
  7145  002DB2  C043  F018         	movff	register_timer@data+1,AddElement@data+1
  7146  002DB6  C044  F019         	movff	register_timer@data+2,AddElement@data+2
  7147  002DBA  C0E5  F01A         	movff	_task,AddElement@task_id
  7148  002DBE  6A1B               	clrf	(AddElement@task_id+1)^0,c
  7149  002DC0  EC3B  F008         	call	_AddElement	;wreg free
  7150  002DC4  6E45               	movwf	??_register_timer^0,c
  7151  002DC6  5045               	movf	??_register_timer^0,w,c
  7152  002DC8  6E46               	movwf	register_timer@res^0,c
  7153  002DCA  6A47               	clrf	(register_timer@res+1)^0,c
  7154  002DCC                     
  7155                           ;clock.c: 6:     if(res == 0) {
  7156  002DCC  5046               	movf	register_timer@res^0,w,c
  7157  002DCE  1047               	iorwf	(register_timer@res+1)^0,w,c
  7158  002DD0  A4D8               	btfss	status,2,c
  7159  002DD2  EFED  F016         	goto	i2u182_41
  7160  002DD6  EFEF  F016         	goto	i2u182_40
  7161  002DDA                     i2u182_41:
  7162  002DDA  EFF9  F016         	goto	i2l364
  7163  002DDE                     i2u182_40:
  7164  002DDE                     
  7165                           ;clock.c: 7:         task++;
  7166  002DDE  0100               	movlb	0	; () banked
  7167  002DE0  2BE5               	incf	_task& (0+255),f,b
  7168  002DE2                     
  7169                           ; BSR set to: 0
  7170                           ;clock.c: 8:         return task - 1;
  7171  002DE2  0EFF               	movlw	255
  7172  002DE4  25E5               	addwf	_task& (0+255),w,b
  7173  002DE6  6E32               	movwf	?_register_timer^0,c
  7174  002DE8  6A33               	clrf	(?_register_timer+1)^0,c
  7175  002DEA  0EFF               	movlw	255
  7176  002DEC  2233               	addwfc	(?_register_timer+1)^0,f,c
  7177  002DEE  EFFB  F016         	goto	i2l365
  7178  002DF2                     i2l364:
  7179  002DF2  6832               	setf	?_register_timer^0,c
  7180  002DF4  6833               	setf	(?_register_timer+1)^0,c
  7181  002DF6                     i2l365:
  7182  002DF6  0012               	return		;funcret
  7183  002DF8                     __end_of_register_timer:
  7184                           	opt callstack 0
  7185                           
  7186 ;; *************** function _TMR_StopTimer *****************
  7187 ;; Defined at:
  7188 ;;		line 54 in file "OSCL_TMR_Set_Up.c"
  7189 ;; Parameters:    Size  Location     Type
  7190 ;;  timer_name      2    0[COMRAM] int 
  7191 ;; Auto vars:     Size  Location     Type
  7192 ;;		None
  7193 ;; Return value:  Size  Location     Type
  7194 ;;                  1    wreg      void 
  7195 ;; Registers used:
  7196 ;;		wreg, status,2, status,0
  7197 ;; Tracked objects:
  7198 ;;		On entry : 0/0
  7199 ;;		On exit  : 0/0
  7200 ;;		Unchanged: 0/0
  7201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7202 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7204 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7205 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7206 ;;Total ram usage:        4 bytes
  7207 ;; Hardware stack levels used:    1
  7208 ;; This function calls:
  7209 ;;		Nothing
  7210 ;; This function is called by:
  7211 ;;		_readButtonRA5
  7212 ;; This function uses a non-reentrant model
  7213 ;;
  7214                           
  7215                           	psect	text54
  7216  00354E                     __ptext54:
  7217                           	opt callstack 0
  7218  00354E                     _TMR_StopTimer:
  7219                           	opt callstack 21
  7220  00354E                     
  7221                           ;OSCL_TMR_Set_Up.c: 55:     switch(timer_name) {
  7222  00354E  EFAF  F01A         	goto	i2l3841
  7223  003552                     i2l290:
  7224                           
  7225                           ;OSCL_TMR_Set_Up.c: 57:             T0CONbits.TMR0ON = 0;
  7226  003552  9ED5               	bcf	213,7,c	;volatile
  7227                           
  7228                           ;OSCL_TMR_Set_Up.c: 58:         break;
  7229  003554  EFC5  F01A         	goto	i2l293
  7230  003558                     i2l292:
  7231                           
  7232                           ;OSCL_TMR_Set_Up.c: 61:             T1CONbits.TMR1ON = 0;
  7233  003558  90CD               	bcf	205,0,c	;volatile
  7234                           
  7235                           ;OSCL_TMR_Set_Up.c: 62:         break;
  7236  00355A  EFC5  F01A         	goto	i2l293
  7237  00355E                     i2l3841:
  7238  00355E  C001  F003         	movff	TMR_StopTimer@timer_name,??_TMR_StopTimer
  7239  003562  C002  F004         	movff	TMR_StopTimer@timer_name+1,??_TMR_StopTimer+1
  7240                           
  7241                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7242                           ; Switch size 1, requested type "simple"
  7243                           ; Number of cases is 1, Range of values is 0 to 0
  7244                           ; switch strategies available:
  7245                           ; Name         Instructions Cycles
  7246                           ; simple_byte            4     3 (average)
  7247                           ;	Chosen strategy is simple_byte
  7248  003566  5004               	movf	(??_TMR_StopTimer+1)^0,w,c
  7249  003568  0A00               	xorlw	0	; case 0
  7250  00356A  B4D8               	btfsc	status,2,c
  7251  00356C  EFBA  F01A         	goto	i2l5491
  7252  003570  EFC5  F01A         	goto	i2l293
  7253  003574                     i2l5491:
  7254                           
  7255                           ; Switch size 1, requested type "simple"
  7256                           ; Number of cases is 2, Range of values is 0 to 1
  7257                           ; switch strategies available:
  7258                           ; Name         Instructions Cycles
  7259                           ; simple_byte            7     4 (average)
  7260                           ;	Chosen strategy is simple_byte
  7261  003574  5003               	movf	??_TMR_StopTimer^0,w,c
  7262  003576  0A00               	xorlw	0	; case 0
  7263  003578  B4D8               	btfsc	status,2,c
  7264  00357A  EFA9  F01A         	goto	i2l290
  7265  00357E  0A01               	xorlw	1	; case 1
  7266  003580  B4D8               	btfsc	status,2,c
  7267  003582  EFAC  F01A         	goto	i2l292
  7268  003586  EFC5  F01A         	goto	i2l293
  7269  00358A                     i2l293:
  7270  00358A  0012               	return		;funcret
  7271  00358C                     __end_of_TMR_StopTimer:
  7272                           	opt callstack 0
  7273                           
  7274 ;; *************** function _PrintSetTime *****************
  7275 ;; Defined at:
  7276 ;;		line 222 in file "LCD.c"
  7277 ;; Parameters:    Size  Location     Type
  7278 ;;		None
  7279 ;; Auto vars:     Size  Location     Type
  7280 ;;		None
  7281 ;; Return value:  Size  Location     Type
  7282 ;;                  1    wreg      void 
  7283 ;; Registers used:
  7284 ;;		wreg, status,2, status,0, cstack
  7285 ;; Tracked objects:
  7286 ;;		On entry : 0/0
  7287 ;;		On exit  : 0/0
  7288 ;;		Unchanged: 0/0
  7289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7294 ;;Total ram usage:        0 bytes
  7295 ;; Hardware stack levels used:    1
  7296 ;; Hardware stack levels required when called:    4
  7297 ;; This function calls:
  7298 ;;		i2_LCDMoveCursor
  7299 ;;		i2_LCDPutChar
  7300 ;;		i2___awdiv
  7301 ;;		i2___awmod
  7302 ;; This function is called by:
  7303 ;;		_readButtonRA5
  7304 ;;		_readButtonRB0
  7305 ;; This function uses a non-reentrant model
  7306 ;;
  7307                           
  7308                           	psect	text55
  7309  003310                     __ptext55:
  7310                           	opt callstack 0
  7311  003310                     _PrintSetTime:
  7312                           	opt callstack 17
  7313  003310                     
  7314                           ;LCD.c: 223:     LCDMoveCursor(1, 0xA);
  7315  003310  0E0A               	movlw	10
  7316  003312  6E08               	movwf	i2LCDMoveCursor@pos^0,c
  7317  003314  0E01               	movlw	1
  7318  003316  ECE4  F01A         	call	i2_LCDMoveCursor
  7319                           
  7320                           ;LCD.c: 224:     LCDPutChar(Time/10 + '0');
  7321  00331A  C0DF  F001         	movff	_Time,i2___awdiv@dividend
  7322  00331E  C0E0  F002         	movff	_Time+1,i2___awdiv@dividend+1
  7323  003322  0E00               	movlw	0
  7324  003324  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  7325  003326  0E0A               	movlw	10
  7326  003328  6E03               	movwf	i2___awdiv@divisor^0,c
  7327  00332A  ECAF  F014         	call	i2___awdiv	;wreg free
  7328  00332E  5001               	movf	?i2___awdiv^0,w,c
  7329  003330  0F30               	addlw	48
  7330  003332  EC98  F018         	call	i2_LCDPutChar
  7331                           
  7332                           ;LCD.c: 225:     LCDPutChar(Time%10 + '0');
  7333  003336  C0DF  F001         	movff	_Time,i2___awmod@dividend
  7334  00333A  C0E0  F002         	movff	_Time+1,i2___awmod@dividend+1
  7335  00333E  0E00               	movlw	0
  7336  003340  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  7337  003342  0E0A               	movlw	10
  7338  003344  6E03               	movwf	i2___awmod@divisor^0,c
  7339  003346  ECCB  F015         	call	i2___awmod	;wreg free
  7340  00334A  5001               	movf	?i2___awmod^0,w,c
  7341  00334C  0F30               	addlw	48
  7342  00334E  EC98  F018         	call	i2_LCDPutChar
  7343  003352  0012               	return		;funcret
  7344  003354                     __end_of_PrintSetTime:
  7345                           	opt callstack 0
  7346                           
  7347 ;; *************** function i2___awmod *****************
  7348 ;; Defined at:
  7349 ;;		line 7 in file "D:\Programs\MPLABX\pic\sources\c99\common\awmod.c"
  7350 ;; Parameters:    Size  Location     Type
  7351 ;;  dividend        2    0[COMRAM] int 
  7352 ;;  divisor         2    2[COMRAM] int 
  7353 ;; Auto vars:     Size  Location     Type
  7354 ;;  __awmod         1    5[COMRAM] unsigned char 
  7355 ;;  __awmod         1    4[COMRAM] unsigned char 
  7356 ;; Return value:  Size  Location     Type
  7357 ;;                  2    0[COMRAM] int 
  7358 ;; Registers used:
  7359 ;;		wreg, status,2, status,0
  7360 ;; Tracked objects:
  7361 ;;		On entry : 0/0
  7362 ;;		On exit  : 0/0
  7363 ;;		Unchanged: 0/0
  7364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7365 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7366 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7368 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7369 ;;Total ram usage:        6 bytes
  7370 ;; Hardware stack levels used:    1
  7371 ;; This function calls:
  7372 ;;		Nothing
  7373 ;; This function is called by:
  7374 ;;		_SetUp_Temp
  7375 ;;		_SetUp_Humid
  7376 ;;		_PrintSetTime
  7377 ;;		_readButtonRB0
  7378 ;; This function uses a non-reentrant model
  7379 ;;
  7380                           
  7381                           	psect	text56
  7382  002B96                     __ptext56:
  7383                           	opt callstack 0
  7384  002B96                     i2___awmod:
  7385                           	opt callstack 21
  7386  002B96  0E00               	movlw	0
  7387  002B98  6E06               	movwf	i2___awmod@sign^0,c
  7388  002B9A  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
  7389  002B9C  EFD4  F015         	goto	i2u201_40
  7390  002BA0  EFD2  F015         	goto	i2u201_41
  7391  002BA4                     i2u201_41:
  7392  002BA4  EFDA  F015         	goto	i2l3727
  7393  002BA8                     i2u201_40:
  7394  002BA8  6C01               	negf	i2___awmod@dividend^0,c
  7395  002BAA  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  7396  002BAC  B0D8               	btfsc	status,0,c
  7397  002BAE  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  7398  002BB0  0E01               	movlw	1
  7399  002BB2  6E06               	movwf	i2___awmod@sign^0,c
  7400  002BB4                     i2l3727:
  7401  002BB4  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
  7402  002BB6  EFE1  F015         	goto	i2u202_40
  7403  002BBA  EFDF  F015         	goto	i2u202_41
  7404  002BBE                     i2u202_41:
  7405  002BBE  EFE5  F015         	goto	i2l3731
  7406  002BC2                     i2u202_40:
  7407  002BC2  6C03               	negf	i2___awmod@divisor^0,c
  7408  002BC4  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  7409  002BC6  B0D8               	btfsc	status,0,c
  7410  002BC8  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  7411  002BCA                     i2l3731:
  7412  002BCA  5003               	movf	i2___awmod@divisor^0,w,c
  7413  002BCC  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  7414  002BCE  B4D8               	btfsc	status,2,c
  7415  002BD0  EFEC  F015         	goto	i2u203_41
  7416  002BD4  EFEE  F015         	goto	i2u203_40
  7417  002BD8                     i2u203_41:
  7418  002BD8  EF12  F016         	goto	i2l3747
  7419  002BDC                     i2u203_40:
  7420  002BDC  0E01               	movlw	1
  7421  002BDE  6E05               	movwf	i2___awmod@counter^0,c
  7422  002BE0  EFF6  F015         	goto	i2l3737
  7423  002BE4                     i2l3735:
  7424  002BE4  90D8               	bcf	status,0,c
  7425  002BE6  3603               	rlcf	i2___awmod@divisor^0,f,c
  7426  002BE8  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  7427  002BEA  2A05               	incf	i2___awmod@counter^0,f,c
  7428  002BEC                     i2l3737:
  7429  002BEC  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  7430  002BEE  EFFB  F015         	goto	i2u204_41
  7431  002BF2  EFFD  F015         	goto	i2u204_40
  7432  002BF6                     i2u204_41:
  7433  002BF6  EFF2  F015         	goto	i2l3735
  7434  002BFA                     i2u204_40:
  7435  002BFA                     i2l3739:
  7436  002BFA  5003               	movf	i2___awmod@divisor^0,w,c
  7437  002BFC  5C01               	subwf	i2___awmod@dividend^0,w,c
  7438  002BFE  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  7439  002C00  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  7440  002C02  A0D8               	btfss	status,0,c
  7441  002C04  EF06  F016         	goto	i2u205_41
  7442  002C08  EF08  F016         	goto	i2u205_40
  7443  002C0C                     i2u205_41:
  7444  002C0C  EF0C  F016         	goto	i2l3743
  7445  002C10                     i2u205_40:
  7446  002C10  5003               	movf	i2___awmod@divisor^0,w,c
  7447  002C12  5E01               	subwf	i2___awmod@dividend^0,f,c
  7448  002C14  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  7449  002C16  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  7450  002C18                     i2l3743:
  7451  002C18  90D8               	bcf	status,0,c
  7452  002C1A  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  7453  002C1C  3203               	rrcf	i2___awmod@divisor^0,f,c
  7454  002C1E  2E05               	decfsz	i2___awmod@counter^0,f,c
  7455  002C20  EFFD  F015         	goto	i2l3739
  7456  002C24                     i2l3747:
  7457  002C24  5006               	movf	i2___awmod@sign^0,w,c
  7458  002C26  B4D8               	btfsc	status,2,c
  7459  002C28  EF18  F016         	goto	i2u206_41
  7460  002C2C  EF1A  F016         	goto	i2u206_40
  7461  002C30                     i2u206_41:
  7462  002C30  EF1E  F016         	goto	i2l3751
  7463  002C34                     i2u206_40:
  7464  002C34  6C01               	negf	i2___awmod@dividend^0,c
  7465  002C36  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  7466  002C38  B0D8               	btfsc	status,0,c
  7467  002C3A  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  7468  002C3C                     i2l3751:
  7469  002C3C  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  7470  002C40  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  7471  002C44  0012               	return		;funcret
  7472  002C46                     __end_ofi2___awmod:
  7473                           	opt callstack 0
  7474                           
  7475 ;; *************** function i2___awdiv *****************
  7476 ;; Defined at:
  7477 ;;		line 7 in file "D:\Programs\MPLABX\pic\sources\c99\common\awdiv.c"
  7478 ;; Parameters:    Size  Location     Type
  7479 ;;  dividend        2    0[COMRAM] int 
  7480 ;;  divisor         2    2[COMRAM] int 
  7481 ;; Auto vars:     Size  Location     Type
  7482 ;;  __awdiv         2    6[COMRAM] int 
  7483 ;;  __awdiv         1    5[COMRAM] unsigned char 
  7484 ;;  __awdiv         1    4[COMRAM] unsigned char 
  7485 ;; Return value:  Size  Location     Type
  7486 ;;                  2    0[COMRAM] int 
  7487 ;; Registers used:
  7488 ;;		wreg, status,2, status,0
  7489 ;; Tracked objects:
  7490 ;;		On entry : 0/0
  7491 ;;		On exit  : 0/0
  7492 ;;		Unchanged: 0/0
  7493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7494 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7495 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7497 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7498 ;;Total ram usage:        8 bytes
  7499 ;; Hardware stack levels used:    1
  7500 ;; This function calls:
  7501 ;;		Nothing
  7502 ;; This function is called by:
  7503 ;;		_SetUp_Temp
  7504 ;;		_SetUp_Humid
  7505 ;;		_PrintSetTime
  7506 ;; This function uses a non-reentrant model
  7507 ;;
  7508                           
  7509                           	psect	text57
  7510  00295E                     __ptext57:
  7511                           	opt callstack 0
  7512  00295E                     i2___awdiv:
  7513                           	opt callstack 20
  7514  00295E  0E00               	movlw	0
  7515  002960  6E06               	movwf	i2___awdiv@sign^0,c
  7516  002962  BE04               	btfsc	(i2___awdiv@divisor+1)^0,7,c
  7517  002964  EFB8  F014         	goto	i2u195_40
  7518  002968  EFB6  F014         	goto	i2u195_41
  7519  00296C                     i2u195_41:
  7520  00296C  EFBE  F014         	goto	i2l3683
  7521  002970                     i2u195_40:
  7522  002970  6C03               	negf	i2___awdiv@divisor^0,c
  7523  002972  1E04               	comf	(i2___awdiv@divisor+1)^0,f,c
  7524  002974  B0D8               	btfsc	status,0,c
  7525  002976  2A04               	incf	(i2___awdiv@divisor+1)^0,f,c
  7526  002978  0E01               	movlw	1
  7527  00297A  6E06               	movwf	i2___awdiv@sign^0,c
  7528  00297C                     i2l3683:
  7529  00297C  BE02               	btfsc	(i2___awdiv@dividend+1)^0,7,c
  7530  00297E  EFC5  F014         	goto	i2u196_40
  7531  002982  EFC3  F014         	goto	i2u196_41
  7532  002986                     i2u196_41:
  7533  002986  EFCB  F014         	goto	i2l3689
  7534  00298A                     i2u196_40:
  7535  00298A  6C01               	negf	i2___awdiv@dividend^0,c
  7536  00298C  1E02               	comf	(i2___awdiv@dividend+1)^0,f,c
  7537  00298E  B0D8               	btfsc	status,0,c
  7538  002990  2A02               	incf	(i2___awdiv@dividend+1)^0,f,c
  7539  002992  0E01               	movlw	1
  7540  002994  1A06               	xorwf	i2___awdiv@sign^0,f,c
  7541  002996                     i2l3689:
  7542  002996  0E00               	movlw	0
  7543  002998  6E08               	movwf	(i2___awdiv@quotient+1)^0,c
  7544  00299A  0E00               	movlw	0
  7545  00299C  6E07               	movwf	i2___awdiv@quotient^0,c
  7546  00299E  5003               	movf	i2___awdiv@divisor^0,w,c
  7547  0029A0  1004               	iorwf	(i2___awdiv@divisor+1)^0,w,c
  7548  0029A2  B4D8               	btfsc	status,2,c
  7549  0029A4  EFD6  F014         	goto	i2u197_41
  7550  0029A8  EFD8  F014         	goto	i2u197_40
  7551  0029AC                     i2u197_41:
  7552  0029AC  EF00  F015         	goto	i2l3711
  7553  0029B0                     i2u197_40:
  7554  0029B0  0E01               	movlw	1
  7555  0029B2  6E05               	movwf	i2___awdiv@counter^0,c
  7556  0029B4  EFE0  F014         	goto	i2l3697
  7557  0029B8                     i2l3695:
  7558  0029B8  90D8               	bcf	status,0,c
  7559  0029BA  3603               	rlcf	i2___awdiv@divisor^0,f,c
  7560  0029BC  3604               	rlcf	(i2___awdiv@divisor+1)^0,f,c
  7561  0029BE  2A05               	incf	i2___awdiv@counter^0,f,c
  7562  0029C0                     i2l3697:
  7563  0029C0  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
  7564  0029C2  EFE5  F014         	goto	i2u198_41
  7565  0029C6  EFE7  F014         	goto	i2u198_40
  7566  0029CA                     i2u198_41:
  7567  0029CA  EFDC  F014         	goto	i2l3695
  7568  0029CE                     i2u198_40:
  7569  0029CE                     i2l3699:
  7570  0029CE  90D8               	bcf	status,0,c
  7571  0029D0  3607               	rlcf	i2___awdiv@quotient^0,f,c
  7572  0029D2  3608               	rlcf	(i2___awdiv@quotient+1)^0,f,c
  7573  0029D4  5003               	movf	i2___awdiv@divisor^0,w,c
  7574  0029D6  5C01               	subwf	i2___awdiv@dividend^0,w,c
  7575  0029D8  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  7576  0029DA  5802               	subwfb	(i2___awdiv@dividend+1)^0,w,c
  7577  0029DC  A0D8               	btfss	status,0,c
  7578  0029DE  EFF3  F014         	goto	i2u199_41
  7579  0029E2  EFF5  F014         	goto	i2u199_40
  7580  0029E6                     i2u199_41:
  7581  0029E6  EFFA  F014         	goto	i2l3707
  7582  0029EA                     i2u199_40:
  7583  0029EA  5003               	movf	i2___awdiv@divisor^0,w,c
  7584  0029EC  5E01               	subwf	i2___awdiv@dividend^0,f,c
  7585  0029EE  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  7586  0029F0  5A02               	subwfb	(i2___awdiv@dividend+1)^0,f,c
  7587  0029F2  8007               	bsf	i2___awdiv@quotient^0,0,c
  7588  0029F4                     i2l3707:
  7589  0029F4  90D8               	bcf	status,0,c
  7590  0029F6  3204               	rrcf	(i2___awdiv@divisor+1)^0,f,c
  7591  0029F8  3203               	rrcf	i2___awdiv@divisor^0,f,c
  7592  0029FA  2E05               	decfsz	i2___awdiv@counter^0,f,c
  7593  0029FC  EFE7  F014         	goto	i2l3699
  7594  002A00                     i2l3711:
  7595  002A00  5006               	movf	i2___awdiv@sign^0,w,c
  7596  002A02  B4D8               	btfsc	status,2,c
  7597  002A04  EF06  F015         	goto	i2u200_41
  7598  002A08  EF08  F015         	goto	i2u200_40
  7599  002A0C                     i2u200_41:
  7600  002A0C  EF0C  F015         	goto	i2l3715
  7601  002A10                     i2u200_40:
  7602  002A10  6C07               	negf	i2___awdiv@quotient^0,c
  7603  002A12  1E08               	comf	(i2___awdiv@quotient+1)^0,f,c
  7604  002A14  B0D8               	btfsc	status,0,c
  7605  002A16  2A08               	incf	(i2___awdiv@quotient+1)^0,f,c
  7606  002A18                     i2l3715:
  7607  002A18  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
  7608  002A1C  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  7609  002A20  0012               	return		;funcret
  7610  002A22                     __end_ofi2___awdiv:
  7611                           	opt callstack 0
  7612                           
  7613 ;; *************** function i2_LCDPutChar *****************
  7614 ;; Defined at:
  7615 ;;		line 121 in file "LCD.c"
  7616 ;; Parameters:    Size  Location     Type
  7617 ;;  ch              1    wreg     unsigned char 
  7618 ;; Auto vars:     Size  Location     Type
  7619 ;;  ch              1    6[COMRAM] unsigned char 
  7620 ;; Return value:  Size  Location     Type
  7621 ;;                  1    wreg      void 
  7622 ;; Registers used:
  7623 ;;		wreg, status,2, status,0, cstack
  7624 ;; Tracked objects:
  7625 ;;		On entry : 0/0
  7626 ;;		On exit  : 0/0
  7627 ;;		Unchanged: 0/0
  7628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7630 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7631 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7632 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7633 ;;Total ram usage:        2 bytes
  7634 ;; Hardware stack levels used:    1
  7635 ;; Hardware stack levels required when called:    2
  7636 ;; This function calls:
  7637 ;;		i2_WritePort_BBSPI
  7638 ;; This function is called by:
  7639 ;;		_SetUp_Temp
  7640 ;;		_SetUp_Humid
  7641 ;;		_PrintSetTime
  7642 ;;		i2_LCDPutStr
  7643 ;; This function uses a non-reentrant model
  7644 ;;
  7645                           
  7646                           	psect	text58
  7647  003130                     __ptext58:
  7648                           	opt callstack 0
  7649  003130                     i2_LCDPutChar:
  7650                           	opt callstack 18
  7651                           
  7652                           ;incstack = 0
  7653                           ;i2LCDPutChar@ch stored from wreg
  7654  003130  6E07               	movwf	i2LCDPutChar@ch^0,c
  7655  003132                     
  7656                           ;LCD.c: 121: void LCDPutChar (unsigned char ch);LCD.c: 122: {;LCD.c: 123:     _delay((un
      +                          signed long)((5)*(10000000/4000.0)));
  7657  003132  0E11               	movlw	17
  7658  003134  6E06               	movwf	??i2_LCDPutChar^0,c
  7659  003136  0E3A               	movlw	58
  7660  003138                     i2u418_47:
  7661  003138  2EE8               	decfsz	wreg,f,c
  7662  00313A  D7FE               	bra	i2u418_47
  7663  00313C  2E06               	decfsz	??i2_LCDPutChar^0,f,c
  7664  00313E  D7FC               	bra	i2u418_47
  7665  003140  D000               	nop2	
  7666  003142                     
  7667                           ;LCD.c: 124:     WritePort_BBSPI (0x12, 0x80);
  7668  003142  0E80               	movlw	128
  7669  003144  6E04               	movwf	i2WritePort_BBSPI@a^0,c
  7670  003146  0E12               	movlw	18
  7671  003148  ECD4  F01B         	call	i2_WritePort_BBSPI
  7672  00314C                     
  7673                           ;LCD.c: 125:     _delay((unsigned long)((1)*(10000000/4000.0)));
  7674  00314C  0E04               	movlw	4
  7675  00314E  6E06               	movwf	??i2_LCDPutChar^0,c
  7676  003150  0E3E               	movlw	62
  7677  003152                     i2u419_47:
  7678  003152  2EE8               	decfsz	wreg,f,c
  7679  003154  D7FE               	bra	i2u419_47
  7680  003156  2E06               	decfsz	??i2_LCDPutChar^0,f,c
  7681  003158  D7FC               	bra	i2u419_47
  7682  00315A                     
  7683                           ;LCD.c: 126:     WritePort_BBSPI (0x13, ch);
  7684  00315A  C007  F004         	movff	i2LCDPutChar@ch,i2WritePort_BBSPI@a
  7685  00315E  0E13               	movlw	19
  7686  003160  ECD4  F01B         	call	i2_WritePort_BBSPI
  7687  003164                     
  7688                           ;LCD.c: 127:     _delay((unsigned long)((1)*(10000000/4000.0)));
  7689  003164  0E04               	movlw	4
  7690  003166  6E06               	movwf	??i2_LCDPutChar^0,c
  7691  003168  0E3E               	movlw	62
  7692  00316A                     i2u420_47:
  7693  00316A  2EE8               	decfsz	wreg,f,c
  7694  00316C  D7FE               	bra	i2u420_47
  7695  00316E  2E06               	decfsz	??i2_LCDPutChar^0,f,c
  7696  003170  D7FC               	bra	i2u420_47
  7697  003172                     
  7698                           ;LCD.c: 128:     WritePort_BBSPI (0x12, 0xC0);
  7699  003172  0EC0               	movlw	192
  7700  003174  6E04               	movwf	i2WritePort_BBSPI@a^0,c
  7701  003176  0E12               	movlw	18
  7702  003178  ECD4  F01B         	call	i2_WritePort_BBSPI
  7703  00317C                     
  7704                           ;LCD.c: 129:     _delay((unsigned long)((1)*(10000000/4000.0)));
  7705  00317C  0E04               	movlw	4
  7706  00317E  6E06               	movwf	??i2_LCDPutChar^0,c
  7707  003180  0E3E               	movlw	62
  7708  003182                     i2u421_47:
  7709  003182  2EE8               	decfsz	wreg,f,c
  7710  003184  D7FE               	bra	i2u421_47
  7711  003186  2E06               	decfsz	??i2_LCDPutChar^0,f,c
  7712  003188  D7FC               	bra	i2u421_47
  7713  00318A                     
  7714                           ;LCD.c: 130:     WritePort_BBSPI (0x12, 0x00);
  7715  00318A  0E00               	movlw	0
  7716  00318C  6E04               	movwf	i2WritePort_BBSPI@a^0,c
  7717  00318E  0E12               	movlw	18
  7718  003190  ECD4  F01B         	call	i2_WritePort_BBSPI
  7719  003194  0012               	return		;funcret
  7720  003196                     __end_ofi2_LCDPutChar:
  7721                           	opt callstack 0
  7722                           
  7723 ;; *************** function i2_LCDMoveCursor *****************
  7724 ;; Defined at:
  7725 ;;		line 164 in file "LCD.c"
  7726 ;; Parameters:    Size  Location     Type
  7727 ;;  line            1    wreg     unsigned char 
  7728 ;;  pos             1    7[COMRAM] unsigned char 
  7729 ;; Auto vars:     Size  Location     Type
  7730 ;;  line            1    8[COMRAM] unsigned char 
  7731 ;;  LCDMoveCurso    1   11[COMRAM] unsigned char 
  7732 ;; Return value:  Size  Location     Type
  7733 ;;                  1    wreg      void 
  7734 ;; Registers used:
  7735 ;;		wreg, status,2, status,0, cstack
  7736 ;; Tracked objects:
  7737 ;;		On entry : 0/0
  7738 ;;		On exit  : 0/0
  7739 ;;		Unchanged: 0/0
  7740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7741 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7742 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7744 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7745 ;;Total ram usage:        5 bytes
  7746 ;; Hardware stack levels used:    1
  7747 ;; Hardware stack levels required when called:    3
  7748 ;; This function calls:
  7749 ;;		i2_LCDPutInst
  7750 ;; This function is called by:
  7751 ;;		_SetUp_Temp
  7752 ;;		_SetUp_Humid
  7753 ;;		_PrintSetTime
  7754 ;; This function uses a non-reentrant model
  7755 ;;
  7756                           
  7757                           	psect	text59
  7758  0035C8                     __ptext59:
  7759                           	opt callstack 0
  7760  0035C8                     i2_LCDMoveCursor:
  7761                           	opt callstack 17
  7762                           
  7763                           ;incstack = 0
  7764                           ;i2LCDMoveCursor@line stored from wreg
  7765  0035C8  6E09               	movwf	i2LCDMoveCursor@line^0,c
  7766  0035CA                     
  7767                           ;LCD.c: 165:     unsigned char position = (line == 0) ? (128 + pos) : (192 + pos);
  7768  0035CA  5009               	movf	i2LCDMoveCursor@line^0,w,c
  7769  0035CC  B4D8               	btfsc	status,2,c
  7770  0035CE  EFEB  F01A         	goto	i2u194_41
  7771  0035D2  EFED  F01A         	goto	i2u194_40
  7772  0035D6                     i2u194_41:
  7773  0035D6  EFF5  F01A         	goto	i2l3653
  7774  0035DA                     i2u194_40:
  7775  0035DA  0EC0               	movlw	192
  7776  0035DC  2408               	addwf	i2LCDMoveCursor@pos^0,w,c
  7777  0035DE  6E0A               	movwf	i2_LCDMoveCursor$413^0,c
  7778  0035E0  6A0B               	clrf	(i2_LCDMoveCursor$413+1)^0,c
  7779  0035E2  0E00               	movlw	0
  7780  0035E4  220B               	addwfc	(i2_LCDMoveCursor$413+1)^0,f,c
  7781  0035E6  EFFB  F01A         	goto	i2l3655
  7782  0035EA                     i2l3653:
  7783  0035EA  0E80               	movlw	128
  7784  0035EC  2408               	addwf	i2LCDMoveCursor@pos^0,w,c
  7785  0035EE  6E0A               	movwf	i2_LCDMoveCursor$413^0,c
  7786  0035F0  6A0B               	clrf	(i2_LCDMoveCursor$413+1)^0,c
  7787  0035F2  0E00               	movlw	0
  7788  0035F4  220B               	addwfc	(i2_LCDMoveCursor$413+1)^0,f,c
  7789  0035F6                     i2l3655:
  7790  0035F6  C00A  F00C         	movff	i2_LCDMoveCursor$413,i2LCDMoveCursor@position
  7791  0035FA                     
  7792                           ;LCD.c: 166:     LCDPutInst(position);
  7793  0035FA  500C               	movf	i2LCDMoveCursor@position^0,w,c
  7794  0035FC  ECCB  F018         	call	i2_LCDPutInst
  7795  003600  0012               	return		;funcret
  7796  003602                     __end_ofi2_LCDMoveCursor:
  7797                           	opt callstack 0
  7798                           
  7799 ;; *************** function i2_LCDPutInst *****************
  7800 ;; Defined at:
  7801 ;;		line 140 in file "LCD.c"
  7802 ;; Parameters:    Size  Location     Type
  7803 ;;  ch              1    wreg     unsigned char 
  7804 ;; Auto vars:     Size  Location     Type
  7805 ;;  ch              1    6[COMRAM] unsigned char 
  7806 ;; Return value:  Size  Location     Type
  7807 ;;                  1    wreg      void 
  7808 ;; Registers used:
  7809 ;;		wreg, status,2, status,0, cstack
  7810 ;; Tracked objects:
  7811 ;;		On entry : 0/0
  7812 ;;		On exit  : 0/0
  7813 ;;		Unchanged: 0/0
  7814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7816 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7817 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7818 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7819 ;;Total ram usage:        2 bytes
  7820 ;; Hardware stack levels used:    1
  7821 ;; Hardware stack levels required when called:    2
  7822 ;; This function calls:
  7823 ;;		i2_WritePort_BBSPI
  7824 ;; This function is called by:
  7825 ;;		_PrintSetUp
  7826 ;;		_readButtonRA5
  7827 ;;		i2_LCDMoveCursor
  7828 ;;		i2_PrintIdle
  7829 ;; This function uses a non-reentrant model
  7830 ;;
  7831                           
  7832                           	psect	text60
  7833  003196                     __ptext60:
  7834                           	opt callstack 0
  7835  003196                     i2_LCDPutInst:
  7836                           	opt callstack 17
  7837                           
  7838                           ;incstack = 0
  7839                           ;i2LCDPutInst@ch stored from wreg
  7840  003196  6E07               	movwf	i2LCDPutInst@ch^0,c
  7841  003198                     
  7842                           ;LCD.c: 140: void LCDPutInst (unsigned char ch);LCD.c: 141: {;LCD.c: 142:     _delay((un
      +                          signed long)((5)*(10000000/4000.0)));
  7843  003198  0E11               	movlw	17
  7844  00319A  6E06               	movwf	??i2_LCDPutInst^0,c
  7845  00319C  0E3A               	movlw	58
  7846  00319E                     i2u422_47:
  7847  00319E  2EE8               	decfsz	wreg,f,c
  7848  0031A0  D7FE               	bra	i2u422_47
  7849  0031A2  2E06               	decfsz	??i2_LCDPutInst^0,f,c
  7850  0031A4  D7FC               	bra	i2u422_47
  7851  0031A6  D000               	nop2	
  7852  0031A8                     
  7853                           ;LCD.c: 143:     WritePort_BBSPI (0x12, 0x00);
  7854  0031A8  0E00               	movlw	0
  7855  0031AA  6E04               	movwf	i2WritePort_BBSPI@a^0,c
  7856  0031AC  0E12               	movlw	18
  7857  0031AE  ECD4  F01B         	call	i2_WritePort_BBSPI
  7858  0031B2                     
  7859                           ;LCD.c: 144:     _delay((unsigned long)((1)*(10000000/4000.0)));
  7860  0031B2  0E04               	movlw	4
  7861  0031B4  6E06               	movwf	??i2_LCDPutInst^0,c
  7862  0031B6  0E3E               	movlw	62
  7863  0031B8                     i2u423_47:
  7864  0031B8  2EE8               	decfsz	wreg,f,c
  7865  0031BA  D7FE               	bra	i2u423_47
  7866  0031BC  2E06               	decfsz	??i2_LCDPutInst^0,f,c
  7867  0031BE  D7FC               	bra	i2u423_47
  7868  0031C0                     
  7869                           ;LCD.c: 145:     WritePort_BBSPI (0x13, ch);
  7870  0031C0  C007  F004         	movff	i2LCDPutInst@ch,i2WritePort_BBSPI@a
  7871  0031C4  0E13               	movlw	19
  7872  0031C6  ECD4  F01B         	call	i2_WritePort_BBSPI
  7873  0031CA                     
  7874                           ;LCD.c: 146:     _delay((unsigned long)((1)*(10000000/4000.0)));
  7875  0031CA  0E04               	movlw	4
  7876  0031CC  6E06               	movwf	??i2_LCDPutInst^0,c
  7877  0031CE  0E3E               	movlw	62
  7878  0031D0                     i2u424_47:
  7879  0031D0  2EE8               	decfsz	wreg,f,c
  7880  0031D2  D7FE               	bra	i2u424_47
  7881  0031D4  2E06               	decfsz	??i2_LCDPutInst^0,f,c
  7882  0031D6  D7FC               	bra	i2u424_47
  7883  0031D8                     
  7884                           ;LCD.c: 147:     WritePort_BBSPI (0x12,0x40);
  7885  0031D8  0E40               	movlw	64
  7886  0031DA  6E04               	movwf	i2WritePort_BBSPI@a^0,c
  7887  0031DC  0E12               	movlw	18
  7888  0031DE  ECD4  F01B         	call	i2_WritePort_BBSPI
  7889  0031E2                     
  7890                           ;LCD.c: 148:     _delay((unsigned long)((1)*(10000000/4000.0)));
  7891  0031E2  0E04               	movlw	4
  7892  0031E4  6E06               	movwf	??i2_LCDPutInst^0,c
  7893  0031E6  0E3E               	movlw	62
  7894  0031E8                     i2u425_47:
  7895  0031E8  2EE8               	decfsz	wreg,f,c
  7896  0031EA  D7FE               	bra	i2u425_47
  7897  0031EC  2E06               	decfsz	??i2_LCDPutInst^0,f,c
  7898  0031EE  D7FC               	bra	i2u425_47
  7899  0031F0                     
  7900                           ;LCD.c: 149:     WritePort_BBSPI (0x12, 0x00);
  7901  0031F0  0E00               	movlw	0
  7902  0031F2  6E04               	movwf	i2WritePort_BBSPI@a^0,c
  7903  0031F4  0E12               	movlw	18
  7904  0031F6  ECD4  F01B         	call	i2_WritePort_BBSPI
  7905  0031FA  0012               	return		;funcret
  7906  0031FC                     __end_ofi2_LCDPutInst:
  7907                           	opt callstack 0
  7908                           
  7909 ;; *************** function i2_WritePort_BBSPI *****************
  7910 ;; Defined at:
  7911 ;;		line 105 in file "LCD.c"
  7912 ;; Parameters:    Size  Location     Type
  7913 ;;  port_add        1    wreg     unsigned char 
  7914 ;;  a               1    3[COMRAM] unsigned char 
  7915 ;; Auto vars:     Size  Location     Type
  7916 ;;  port_add        1    4[COMRAM] unsigned char 
  7917 ;; Return value:  Size  Location     Type
  7918 ;;                  1    wreg      void 
  7919 ;; Registers used:
  7920 ;;		wreg, status,2, status,0, cstack
  7921 ;; Tracked objects:
  7922 ;;		On entry : 0/0
  7923 ;;		On exit  : 0/0
  7924 ;;		Unchanged: 0/0
  7925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7926 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7927 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7929 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7930 ;;Total ram usage:        2 bytes
  7931 ;; Hardware stack levels used:    1
  7932 ;; Hardware stack levels required when called:    1
  7933 ;; This function calls:
  7934 ;;		i2_SendByteBBSPI
  7935 ;; This function is called by:
  7936 ;;		i2_LCDPutChar
  7937 ;;		i2_LCDPutInst
  7938 ;; This function uses a non-reentrant model
  7939 ;;
  7940                           
  7941                           	psect	text61
  7942  0037A8                     __ptext61:
  7943                           	opt callstack 0
  7944  0037A8                     i2_WritePort_BBSPI:
  7945                           	opt callstack 18
  7946                           
  7947                           ;incstack = 0
  7948                           ;i2WritePort_BBSPI@port_add stored from wreg
  7949  0037A8  6E05               	movwf	i2WritePort_BBSPI@port_add^0,c
  7950  0037AA                     
  7951                           ;LCD.c: 105: void WritePort_BBSPI (unsigned char port_add, unsigned char a);LCD.c: 106: 
      +                          {;LCD.c: 107:     LATAbits.LATA2 = 0;
  7952  0037AA  9489               	bcf	137,2,c	;volatile
  7953  0037AC                     
  7954                           ;LCD.c: 108:     SendByteBBSPI(0x40);
  7955  0037AC  0E40               	movlw	64
  7956  0037AE  ECF7  F017         	call	i2_SendByteBBSPI
  7957                           
  7958                           ;LCD.c: 109:     SendByteBBSPI(port_add);
  7959  0037B2  5005               	movf	i2WritePort_BBSPI@port_add^0,w,c
  7960  0037B4  ECF7  F017         	call	i2_SendByteBBSPI
  7961                           
  7962                           ;LCD.c: 110:     SendByteBBSPI(a);
  7963  0037B8  5004               	movf	i2WritePort_BBSPI@a^0,w,c
  7964  0037BA  ECF7  F017         	call	i2_SendByteBBSPI
  7965  0037BE                     
  7966                           ;LCD.c: 111:     LATAbits.LATA2 = 1;
  7967  0037BE  8489               	bsf	137,2,c	;volatile
  7968  0037C0  0012               	return		;funcret
  7969  0037C2                     __end_ofi2_WritePort_BBSPI:
  7970                           	opt callstack 0
  7971                           
  7972 ;; *************** function i2_SendByteBBSPI *****************
  7973 ;; Defined at:
  7974 ;;		line 52 in file "LCD.c"
  7975 ;; Parameters:    Size  Location     Type
  7976 ;;  output          1    wreg     unsigned char 
  7977 ;; Auto vars:     Size  Location     Type
  7978 ;;  output          1    0[COMRAM] unsigned char 
  7979 ;;  SendByteBBSP    1    2[COMRAM] unsigned char 
  7980 ;;  SendByteBBSP    1    1[COMRAM] unsigned char 
  7981 ;; Return value:  Size  Location     Type
  7982 ;;                  1    wreg      void 
  7983 ;; Registers used:
  7984 ;;		wreg, status,2, status,0
  7985 ;; Tracked objects:
  7986 ;;		On entry : 0/0
  7987 ;;		On exit  : 0/0
  7988 ;;		Unchanged: 0/0
  7989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7991 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7993 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7994 ;;Total ram usage:        3 bytes
  7995 ;; Hardware stack levels used:    1
  7996 ;; This function calls:
  7997 ;;		Nothing
  7998 ;; This function is called by:
  7999 ;;		i2_WritePort_BBSPI
  8000 ;; This function uses a non-reentrant model
  8001 ;;
  8002                           
  8003                           	psect	text62
  8004  002FEE                     __ptext62:
  8005                           	opt callstack 0
  8006  002FEE                     i2_SendByteBBSPI:
  8007                           	opt callstack 18
  8008                           
  8009                           ;incstack = 0
  8010                           ;i2SendByteBBSPI@output stored from wreg
  8011  002FEE  6E01               	movwf	i2SendByteBBSPI@output^0,c
  8012  002FF0                     
  8013                           ;LCD.c: 52: void SendByteBBSPI (unsigned char output);LCD.c: 53: {;LCD.c: 54:     unsign
      +                          ed char bitcount;;LCD.c: 55:     unsigned char input = output;
  8014  002FF0  C001  F003         	movff	i2SendByteBBSPI@output,i2SendByteBBSPI@input
  8015  002FF4                     
  8016                           ;LCD.c: 57:     for(bitcount=0;bitcount<8;bitcount++)
  8017  002FF4  0E00               	movlw	0
  8018  002FF6  6E02               	movwf	i2SendByteBBSPI@bitcount^0,c
  8019  002FF8                     i2l119:
  8020                           
  8021                           ;LCD.c: 58:     {;LCD.c: 60:         if(output & 0x80)
  8022  002FF8  AE01               	btfss	i2SendByteBBSPI@output^0,7,c
  8023  002FFA  EF01  F018         	goto	i2u158_41
  8024  002FFE  EF03  F018         	goto	i2u158_40
  8025  003002                     i2u158_41:
  8026  003002  EF06  F018         	goto	i2l121
  8027  003006                     i2u158_40:
  8028  003006                     
  8029                           ;LCD.c: 61:             LATCbits.LATC5 = 1;
  8030  003006  8A8B               	bsf	139,5,c	;volatile
  8031  003008  EF07  F018         	goto	i2l122
  8032  00300C                     i2l121:
  8033                           
  8034                           ;LCD.c: 63:             LATCbits.LATC5 = 0;
  8035  00300C  9A8B               	bcf	139,5,c	;volatile
  8036  00300E                     i2l122:
  8037                           
  8038                           ;LCD.c: 65:         if (LATCbits.LATC4)
  8039  00300E  A88B               	btfss	139,4,c	;volatile
  8040  003010  EF0C  F018         	goto	i2u159_41
  8041  003014  EF0E  F018         	goto	i2u159_40
  8042  003018                     i2u159_41:
  8043  003018  EF12  F018         	goto	i2l3261
  8044  00301C                     i2u159_40:
  8045  00301C                     
  8046                           ;LCD.c: 66:             input = (input << 1) | 0x1;
  8047  00301C  80D8               	bsf	status,0,c
  8048  00301E  3603               	rlcf	i2SendByteBBSPI@input^0,f,c
  8049  003020  EF15  F018         	goto	i2l3263
  8050  003024                     i2l3261:
  8051                           
  8052                           ;LCD.c: 68:             input = input << 1;
  8053  003024  5003               	movf	i2SendByteBBSPI@input^0,w,c
  8054  003026  2403               	addwf	i2SendByteBBSPI@input^0,w,c
  8055  003028  6E03               	movwf	i2SendByteBBSPI@input^0,c
  8056  00302A                     i2l3263:
  8057                           
  8058                           ;LCD.c: 69:         LATCbits.LATC3 = 1;
  8059  00302A  868B               	bsf	139,3,c	;volatile
  8060  00302C                     
  8061                           ;LCD.c: 70:         __nop();__nop();__nop();__nop();__nop();__nop();
  8062  00302C  F000               	nop	
  8063  00302E  F000               	nop	
  8064  003030  F000               	nop	
  8065  003032  F000               	nop	
  8066  003034  F000               	nop	
  8067  003036  F000               	nop	
  8068  003038                     
  8069                           ;LCD.c: 71:         __nop();__nop();__nop();__nop();__nop();__nop();
  8070  003038  F000               	nop	
  8071  00303A  F000               	nop	
  8072  00303C  F000               	nop	
  8073  00303E  F000               	nop	
  8074  003040  F000               	nop	
  8075  003042  F000               	nop	
  8076  003044                     
  8077                           ;LCD.c: 72:         LATCbits.LATC3 = 0;
  8078  003044  968B               	bcf	139,3,c	;volatile
  8079                           
  8080                           ;LCD.c: 73:         output <<= 1;
  8081  003046  90D8               	bcf	status,0,c
  8082  003048  3601               	rlcf	i2SendByteBBSPI@output^0,f,c
  8083  00304A                     
  8084                           ;LCD.c: 74:     }
  8085  00304A  2A02               	incf	i2SendByteBBSPI@bitcount^0,f,c
  8086  00304C  0E07               	movlw	7
  8087  00304E  6402               	cpfsgt	i2SendByteBBSPI@bitcount^0,c
  8088  003050  EF2C  F018         	goto	i2u160_41
  8089  003054  EF2E  F018         	goto	i2u160_40
  8090  003058                     i2u160_41:
  8091  003058  EFFC  F017         	goto	i2l119
  8092  00305C                     i2u160_40:
  8093  00305C  0012               	return		;funcret
  8094  00305E                     __end_ofi2_SendByteBBSPI:
  8095                           	opt callstack 0
  8096                           
  8097 ;; *************** function _UpdateTimeOut *****************
  8098 ;; Defined at:
  8099 ;;		line 77 in file "struct.c"
  8100 ;; Parameters:    Size  Location     Type
  8101 ;;		None
  8102 ;; Auto vars:     Size  Location     Type
  8103 ;;		None
  8104 ;; Return value:  Size  Location     Type
  8105 ;;                  1    wreg      void 
  8106 ;; Registers used:
  8107 ;;		wreg, status,2, status,0
  8108 ;; Tracked objects:
  8109 ;;		On entry : 0/0
  8110 ;;		On exit  : 0/0
  8111 ;;		Unchanged: 0/0
  8112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8117 ;;Total ram usage:        0 bytes
  8118 ;; Hardware stack levels used:    1
  8119 ;; This function calls:
  8120 ;;		Nothing
  8121 ;; This function is called by:
  8122 ;;		_global_timer
  8123 ;; This function uses a non-reentrant model
  8124 ;;
  8125                           
  8126                           	psect	text63
  8127  003454                     __ptext63:
  8128                           	opt callstack 0
  8129  003454                     _UpdateTimeOut:
  8130                           	opt callstack 22
  8131  003454                     
  8132                           ;struct.c: 79:     if(idle_flag == 0 && error_flag == 0) {
  8133  003454  505E               	movf	_idle_flag^0,w,c
  8134  003456  A4D8               	btfss	status,2,c
  8135  003458  EF30  F01A         	goto	i2u247_41
  8136  00345C  EF32  F01A         	goto	i2u247_40
  8137  003460                     i2u247_41:
  8138  003460  EF49  F01A         	goto	i2l634
  8139  003464                     i2u247_40:
  8140  003464  0100               	movlb	0	; () banked
  8141  003466  51A2               	movf	_error_flag& (0+255),w,b
  8142  003468  A4D8               	btfss	status,2,c
  8143  00346A  EF39  F01A         	goto	i2u248_41
  8144  00346E  EF3B  F01A         	goto	i2u248_40
  8145  003472                     i2u248_41:
  8146  003472  EF49  F01A         	goto	i2l634
  8147  003476                     i2u248_40:
  8148  003476                     
  8149                           ; BSR set to: 0
  8150                           ;struct.c: 80:         TimeOut -= 1;
  8151  003476  07DD               	decf	_TimeOut& (0+255),f,b
  8152  003478  A0D8               	btfss	status,0,c
  8153  00347A  07DE               	decf	(_TimeOut+1)& (0+255),f,b
  8154  00347C                     
  8155                           ; BSR set to: 0
  8156                           ;struct.c: 81:         if(TimeOut == 0) {
  8157  00347C  51DD               	movf	_TimeOut& (0+255),w,b
  8158  00347E  11DE               	iorwf	(_TimeOut+1)& (0+255),w,b
  8159  003480  A4D8               	btfss	status,2,c
  8160  003482  EF45  F01A         	goto	i2u249_41
  8161  003486  EF47  F01A         	goto	i2u249_40
  8162  00348A                     i2u249_41:
  8163  00348A  EF49  F01A         	goto	i2l634
  8164  00348E                     i2u249_40:
  8165  00348E                     
  8166                           ; BSR set to: 0
  8167                           ;struct.c: 82:             error_flag = 1;
  8168  00348E  0E01               	movlw	1
  8169  003490  6FA2               	movwf	_error_flag& (0+255),b
  8170  003492                     i2l634:
  8171  003492  0012               	return		;funcret
  8172  003494                     __end_of_UpdateTimeOut:
  8173                           	opt callstack 0
  8174                           
  8175 ;; *************** function _UpdateElements *****************
  8176 ;; Defined at:
  8177 ;;		line 63 in file "struct.c"
  8178 ;; Parameters:    Size  Location     Type
  8179 ;;		None
  8180 ;; Auto vars:     Size  Location     Type
  8181 ;;  pos             2   91[COMRAM] int 
  8182 ;; Return value:  Size  Location     Type
  8183 ;;                  1    wreg      void 
  8184 ;; Registers used:
  8185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8186 ;; Tracked objects:
  8187 ;;		On entry : 0/0
  8188 ;;		On exit  : 0/0
  8189 ;;		Unchanged: 0/0
  8190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8192 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8193 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8194 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8195 ;;Total ram usage:       13 bytes
  8196 ;; Hardware stack levels used:    1
  8197 ;; Hardware stack levels required when called:    3
  8198 ;; This function calls:
  8199 ;;		_AddExecutedTask
  8200 ;;		_deQueue
  8201 ;;		i2___wmul
  8202 ;; This function is called by:
  8203 ;;		_global_timer
  8204 ;; This function uses a non-reentrant model
  8205 ;;
  8206                           
  8207                           	psect	text64
  8208  002280                     __ptext64:
  8209                           	opt callstack 0
  8210  002280                     _UpdateElements:
  8211                           	opt callstack 19
  8212  002280                     
  8213                           ;struct.c: 64:     int pos = head;
  8214  002280  C08A  F05C         	movff	_head,UpdateElements@pos
  8215  002284  C08B  F05D         	movff	_head+1,UpdateElements@pos+1
  8216  002288                     
  8217                           ;struct.c: 66:     if(elementList[pos].Delay > 0) {
  8218  002288  C05C  F001         	movff	UpdateElements@pos,i2___wmul@multiplier
  8219  00228C  C05D  F002         	movff	UpdateElements@pos+1,i2___wmul@multiplier+1
  8220  002290  0E00               	movlw	0
  8221  002292  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8222  002294  0E18               	movlw	24
  8223  002296  6E03               	movwf	i2___wmul@multiplicand^0,c
  8224  002298  EC91  F01B         	call	i2___wmul	;wreg free
  8225  00229C  0E03               	movlw	low (_elementList+3)
  8226  00229E  2401               	addwf	?i2___wmul^0,w,c
  8227  0022A0  6ED9               	movwf	fsr2l,c
  8228  0022A2  0E01               	movlw	high (_elementList+3)
  8229  0022A4  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8230  0022A6  6EDA               	movwf	fsr2h,c
  8231  0022A8  50DE               	movf	postinc2,w,c
  8232  0022AA  10DE               	iorwf	postinc2,w,c
  8233  0022AC  10DE               	iorwf	postinc2,w,c
  8234  0022AE  10DE               	iorwf	postinc2,w,c
  8235  0022B0  10DE               	iorwf	postinc2,w,c
  8236  0022B2  10DE               	iorwf	postinc2,w,c
  8237  0022B4  10DE               	iorwf	postinc2,w,c
  8238  0022B6  10DE               	iorwf	postinc2,w,c
  8239  0022B8  B4D8               	btfsc	status,2,c
  8240  0022BA  EF61  F011         	goto	i2u244_41
  8241  0022BE  EF63  F011         	goto	i2u244_40
  8242  0022C2                     i2u244_41:
  8243  0022C2  EFB2  F011         	goto	i2l4061
  8244  0022C6                     i2u244_40:
  8245  0022C6                     
  8246                           ;struct.c: 67:         elementList[pos].Delay -= 1;
  8247  0022C6  C05C  F001         	movff	UpdateElements@pos,i2___wmul@multiplier
  8248  0022CA  C05D  F002         	movff	UpdateElements@pos+1,i2___wmul@multiplier+1
  8249  0022CE  0E00               	movlw	0
  8250  0022D0  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8251  0022D2  0E18               	movlw	24
  8252  0022D4  6E03               	movwf	i2___wmul@multiplicand^0,c
  8253  0022D6  EC91  F01B         	call	i2___wmul	;wreg free
  8254  0022DA  0E03               	movlw	low (_elementList+3)
  8255  0022DC  2401               	addwf	?i2___wmul^0,w,c
  8256  0022DE  6ED9               	movwf	fsr2l,c
  8257  0022E0  0E01               	movlw	high (_elementList+3)
  8258  0022E2  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8259  0022E4  6EDA               	movwf	fsr2h,c
  8260  0022E6  06DE               	decf	postinc2,f,c
  8261  0022E8  0E00               	movlw	0
  8262  0022EA  5ADE               	subwfb	postinc2,f,c
  8263  0022EC  5ADE               	subwfb	postinc2,f,c
  8264  0022EE  5ADE               	subwfb	postinc2,f,c
  8265  0022F0  5ADE               	subwfb	postinc2,f,c
  8266  0022F2  5ADE               	subwfb	postinc2,f,c
  8267  0022F4  5ADE               	subwfb	postinc2,f,c
  8268  0022F6  5ADE               	subwfb	postinc2,f,c
  8269  0022F8  EFB2  F011         	goto	i2l4061
  8270  0022FC                     i2l4055:
  8271                           
  8272                           ;struct.c: 70:         AddExecutedTask(elementList[pos].pTask);
  8273  0022FC  C05C  F001         	movff	UpdateElements@pos,i2___wmul@multiplier
  8274  002300  C05D  F002         	movff	UpdateElements@pos+1,i2___wmul@multiplier+1
  8275  002304  0E00               	movlw	0
  8276  002306  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8277  002308  0E18               	movlw	24
  8278  00230A  6E03               	movwf	i2___wmul@multiplicand^0,c
  8279  00230C  EC91  F01B         	call	i2___wmul	;wreg free
  8280  002310  0E00               	movlw	low _elementList
  8281  002312  2401               	addwf	?i2___wmul^0,w,c
  8282  002314  6ED9               	movwf	fsr2l,c
  8283  002316  0E01               	movlw	high _elementList
  8284  002318  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8285  00231A  6EDA               	movwf	fsr2h,c
  8286  00231C  CFDE F059          	movff	postinc2,_UpdateElements$2645
  8287  002320  CFDE F05A          	movff	postinc2,_UpdateElements$2645+1
  8288  002324  CFDD F05B          	movff	postdec2,_UpdateElements$2645+2
  8289                           
  8290                           ;struct.c: 70:         AddExecutedTask(elementList[pos].pTask);
  8291  002328  C059  F007         	movff	_UpdateElements$2645,AddExecutedTask@data
  8292  00232C  C05A  F008         	movff	_UpdateElements$2645+1,AddExecutedTask@data+1
  8293  002330  C05B  F009         	movff	_UpdateElements$2645+2,AddExecutedTask@data+2
  8294  002334  EC70  F016         	call	_AddExecutedTask	;wreg free
  8295  002338                     
  8296                           ;struct.c: 71:         deQueue();
  8297  002338  EC22  F00B         	call	_deQueue	;wreg free
  8298  00233C                     
  8299                           ;struct.c: 72:         pos = elementList[pos].next;
  8300  00233C  C05C  F001         	movff	UpdateElements@pos,i2___wmul@multiplier
  8301  002340  C05D  F002         	movff	UpdateElements@pos+1,i2___wmul@multiplier+1
  8302  002344  0E00               	movlw	0
  8303  002346  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8304  002348  0E18               	movlw	24
  8305  00234A  6E03               	movwf	i2___wmul@multiplicand^0,c
  8306  00234C  EC91  F01B         	call	i2___wmul	;wreg free
  8307  002350  0E16               	movlw	low (_elementList+22)
  8308  002352  2401               	addwf	?i2___wmul^0,w,c
  8309  002354  6ED9               	movwf	fsr2l,c
  8310  002356  0E01               	movlw	high (_elementList+22)
  8311  002358  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8312  00235A  6EDA               	movwf	fsr2h,c
  8313  00235C  CFDE F05C          	movff	postinc2,UpdateElements@pos
  8314  002360  CFDD F05D          	movff	postdec2,UpdateElements@pos+1
  8315  002364                     i2l4061:
  8316                           
  8317                           ;struct.c: 69:     while(elementList[pos].Delay == 0 && pos != -1) {
  8318  002364  C05C  F001         	movff	UpdateElements@pos,i2___wmul@multiplier
  8319  002368  C05D  F002         	movff	UpdateElements@pos+1,i2___wmul@multiplier+1
  8320  00236C  0E00               	movlw	0
  8321  00236E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8322  002370  0E18               	movlw	24
  8323  002372  6E03               	movwf	i2___wmul@multiplicand^0,c
  8324  002374  EC91  F01B         	call	i2___wmul	;wreg free
  8325  002378  0E03               	movlw	low (_elementList+3)
  8326  00237A  2401               	addwf	?i2___wmul^0,w,c
  8327  00237C  6ED9               	movwf	fsr2l,c
  8328  00237E  0E01               	movlw	high (_elementList+3)
  8329  002380  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8330  002382  6EDA               	movwf	fsr2h,c
  8331  002384  50DE               	movf	postinc2,w,c
  8332  002386  10DE               	iorwf	postinc2,w,c
  8333  002388  10DE               	iorwf	postinc2,w,c
  8334  00238A  10DE               	iorwf	postinc2,w,c
  8335  00238C  10DE               	iorwf	postinc2,w,c
  8336  00238E  10DE               	iorwf	postinc2,w,c
  8337  002390  10DE               	iorwf	postinc2,w,c
  8338  002392  10DE               	iorwf	postinc2,w,c
  8339  002394  A4D8               	btfss	status,2,c
  8340  002396  EFCF  F011         	goto	i2u245_41
  8341  00239A  EFD1  F011         	goto	i2u245_40
  8342  00239E                     i2u245_41:
  8343  00239E  EFDB  F011         	goto	i2l629
  8344  0023A2                     i2u245_40:
  8345  0023A2  285C               	incf	UpdateElements@pos^0,w,c
  8346  0023A4  E106               	bnz	i2u246_41
  8347  0023A6  285D               	incf	(UpdateElements@pos+1)^0,w,c
  8348  0023A8  A4D8               	btfss	status,2,c
  8349  0023AA  EFD9  F011         	goto	i2u246_41
  8350  0023AE  EFDB  F011         	goto	i2u246_40
  8351  0023B2                     i2u246_41:
  8352  0023B2  EF7E  F011         	goto	i2l4055
  8353  0023B6                     i2u246_40:
  8354  0023B6                     i2l629:
  8355  0023B6  0012               	return		;funcret
  8356  0023B8                     __end_of_UpdateElements:
  8357                           	opt callstack 0
  8358                           
  8359 ;; *************** function _deQueue *****************
  8360 ;; Defined at:
  8361 ;;		line 88 in file "struct.c"
  8362 ;; Parameters:    Size  Location     Type
  8363 ;;		None
  8364 ;; Auto vars:     Size  Location     Type
  8365 ;;  pos             2   78[COMRAM] int 
  8366 ;; Return value:  Size  Location     Type
  8367 ;;                  2  515[None  ] int 
  8368 ;; Registers used:
  8369 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8370 ;; Tracked objects:
  8371 ;;		On entry : 0/0
  8372 ;;		On exit  : 0/0
  8373 ;;		Unchanged: 0/0
  8374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8376 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8377 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8378 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8379 ;;Total ram usage:       31 bytes
  8380 ;; Hardware stack levels used:    1
  8381 ;; Hardware stack levels required when called:    2
  8382 ;; This function calls:
  8383 ;;		_AddElement
  8384 ;;		i2___wmul
  8385 ;; This function is called by:
  8386 ;;		_UpdateElements
  8387 ;; This function uses a non-reentrant model
  8388 ;;
  8389                           
  8390                           	psect	text65
  8391  001644                     __ptext65:
  8392                           	opt callstack 0
  8393  001644                     _deQueue:
  8394                           	opt callstack 19
  8395  001644                     
  8396                           ;struct.c: 89:     if(size == 0) return -1;
  8397  001644  0100               	movlb	0	; () banked
  8398  001646  518C               	movf	_size& (0+255),w,b
  8399  001648  118D               	iorwf	(_size+1)& (0+255),w,b
  8400  00164A  A4D8               	btfss	status,2,c
  8401  00164C  EF2A  F00B         	goto	i2u210_41
  8402  001650  EF2C  F00B         	goto	i2u210_40
  8403  001654                     i2u210_41:
  8404  001654  EF2E  F00B         	goto	i2l637
  8405  001658                     i2u210_40:
  8406  001658  EF45  F00C         	goto	i2l638
  8407  00165C                     i2l637:
  8408                           
  8409                           ; BSR set to: 0
  8410                           ;struct.c: 91:         int pos = head;
  8411  00165C  C08A  F04F         	movff	_head,deQueue@pos
  8412  001660  C08B  F050         	movff	_head+1,deQueue@pos+1
  8413  001664                     
  8414                           ; BSR set to: 0
  8415                           ;struct.c: 92:         head = elementList[pos].next;
  8416  001664  C04F  F001         	movff	deQueue@pos,i2___wmul@multiplier
  8417  001668  C050  F002         	movff	deQueue@pos+1,i2___wmul@multiplier+1
  8418  00166C  0E00               	movlw	0
  8419  00166E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8420  001670  0E18               	movlw	24
  8421  001672  6E03               	movwf	i2___wmul@multiplicand^0,c
  8422  001674  EC91  F01B         	call	i2___wmul	;wreg free
  8423  001678  0E16               	movlw	low (_elementList+22)
  8424  00167A  2401               	addwf	?i2___wmul^0,w,c
  8425  00167C  6ED9               	movwf	fsr2l,c
  8426  00167E  0E01               	movlw	high (_elementList+22)
  8427  001680  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8428  001682  6EDA               	movwf	fsr2h,c
  8429  001684  CFDE F08A          	movff	postinc2,_head
  8430  001688  CFDD F08B          	movff	postdec2,_head+1
  8431                           
  8432                           ;struct.c: 93:         elementList[pos].next = -1;
  8433  00168C  C04F  F001         	movff	deQueue@pos,i2___wmul@multiplier
  8434  001690  C050  F002         	movff	deQueue@pos+1,i2___wmul@multiplier+1
  8435  001694  0E00               	movlw	0
  8436  001696  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8437  001698  0E18               	movlw	24
  8438  00169A  6E03               	movwf	i2___wmul@multiplicand^0,c
  8439  00169C  EC91  F01B         	call	i2___wmul	;wreg free
  8440  0016A0  0E16               	movlw	low (_elementList+22)
  8441  0016A2  2401               	addwf	?i2___wmul^0,w,c
  8442  0016A4  6ED9               	movwf	fsr2l,c
  8443  0016A6  0E01               	movlw	high (_elementList+22)
  8444  0016A8  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8445  0016AA  6EDA               	movwf	fsr2h,c
  8446  0016AC  0EFF               	movlw	255
  8447  0016AE  6EDE               	movwf	postinc2,c
  8448  0016B0  0EFF               	movlw	255
  8449  0016B2  6EDD               	movwf	postdec2,c
  8450  0016B4                     
  8451                           ;struct.c: 94:         size--;
  8452  0016B4  0100               	movlb	0	; () banked
  8453  0016B6  078C               	decf	_size& (0+255),f,b
  8454  0016B8  A0D8               	btfss	status,0,c
  8455  0016BA  078D               	decf	(_size+1)& (0+255),f,b
  8456  0016BC                     
  8457                           ; BSR set to: 0
  8458                           ;struct.c: 95:         elementList[pos].isMark = -1;
  8459  0016BC  C04F  F001         	movff	deQueue@pos,i2___wmul@multiplier
  8460  0016C0  C050  F002         	movff	deQueue@pos+1,i2___wmul@multiplier+1
  8461  0016C4  0E00               	movlw	0
  8462  0016C6  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8463  0016C8  0E18               	movlw	24
  8464  0016CA  6E03               	movwf	i2___wmul@multiplicand^0,c
  8465  0016CC  EC91  F01B         	call	i2___wmul	;wreg free
  8466  0016D0  0E15               	movlw	low (_elementList+21)
  8467  0016D2  2401               	addwf	?i2___wmul^0,w,c
  8468  0016D4  6ED9               	movwf	fsr2l,c
  8469  0016D6  0E01               	movlw	high (_elementList+21)
  8470  0016D8  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8471  0016DA  6EDA               	movwf	fsr2h,c
  8472  0016DC  0EFF               	movlw	255
  8473  0016DE  6EDF               	movwf	indf2,c
  8474  0016E0                     
  8475                           ;struct.c: 96:         if(elementList[pos].Period != 0) AddElement(elementList[pos].Peri
      +                          od, elementList[pos].Period, elementList[pos].pTask, elementList[pos].task_identifier);
  8476  0016E0  C04F  F001         	movff	deQueue@pos,i2___wmul@multiplier
  8477  0016E4  C050  F002         	movff	deQueue@pos+1,i2___wmul@multiplier+1
  8478  0016E8  0E00               	movlw	0
  8479  0016EA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8480  0016EC  0E18               	movlw	24
  8481  0016EE  6E03               	movwf	i2___wmul@multiplicand^0,c
  8482  0016F0  EC91  F01B         	call	i2___wmul	;wreg free
  8483  0016F4  0E0B               	movlw	low (_elementList+11)
  8484  0016F6  2401               	addwf	?i2___wmul^0,w,c
  8485  0016F8  6ED9               	movwf	fsr2l,c
  8486  0016FA  0E01               	movlw	high (_elementList+11)
  8487  0016FC  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8488  0016FE  6EDA               	movwf	fsr2h,c
  8489  001700  50DE               	movf	postinc2,w,c
  8490  001702  10DE               	iorwf	postinc2,w,c
  8491  001704  10DE               	iorwf	postinc2,w,c
  8492  001706  10DE               	iorwf	postinc2,w,c
  8493  001708  10DE               	iorwf	postinc2,w,c
  8494  00170A  10DE               	iorwf	postinc2,w,c
  8495  00170C  10DE               	iorwf	postinc2,w,c
  8496  00170E  10DE               	iorwf	postinc2,w,c
  8497  001710  B4D8               	btfsc	status,2,c
  8498  001712  EF8D  F00B         	goto	i2u211_41
  8499  001716  EF8F  F00B         	goto	i2u211_40
  8500  00171A                     i2u211_41:
  8501  00171A  EF45  F00C         	goto	i2l638
  8502  00171E                     i2u211_40:
  8503  00171E  C04F  F001         	movff	deQueue@pos,i2___wmul@multiplier
  8504  001722  C050  F002         	movff	deQueue@pos+1,i2___wmul@multiplier+1
  8505  001726  0E00               	movlw	0
  8506  001728  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8507  00172A  0E18               	movlw	24
  8508  00172C  6E03               	movwf	i2___wmul@multiplicand^0,c
  8509  00172E  EC91  F01B         	call	i2___wmul	;wreg free
  8510  001732  0E0B               	movlw	low (_elementList+11)
  8511  001734  2401               	addwf	?i2___wmul^0,w,c
  8512  001736  6ED9               	movwf	fsr2l,c
  8513  001738  0E01               	movlw	high (_elementList+11)
  8514  00173A  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8515  00173C  6EDA               	movwf	fsr2h,c
  8516  00173E  CFDE F032          	movff	postinc2,??_deQueue
  8517  001742  CFDE F033          	movff	postinc2,??_deQueue+1
  8518  001746  CFDE F034          	movff	postinc2,??_deQueue+2
  8519  00174A  CFDE F035          	movff	postinc2,??_deQueue+3
  8520  00174E  CFDE F036          	movff	postinc2,??_deQueue+4
  8521  001752  CFDE F037          	movff	postinc2,??_deQueue+5
  8522  001756  CFDE F038          	movff	postinc2,??_deQueue+6
  8523  00175A  CFDE F039          	movff	postinc2,??_deQueue+7
  8524  00175E  C032  F03A         	movff	??_deQueue,_deQueue$2646
  8525  001762  C033  F03B         	movff	??_deQueue+1,_deQueue$2646+1
  8526  001766  C034  F03C         	movff	??_deQueue+2,_deQueue$2646+2
  8527  00176A  C035  F03D         	movff	??_deQueue+3,_deQueue$2646+3
  8528  00176E  C036  F03E         	movff	??_deQueue+4,_deQueue$2646+4
  8529  001772  C037  F03F         	movff	??_deQueue+5,_deQueue$2646+5
  8530  001776  C038  F040         	movff	??_deQueue+6,_deQueue$2646+6
  8531  00177A  C039  F041         	movff	??_deQueue+7,_deQueue$2646+7
  8532  00177E  C04F  F001         	movff	deQueue@pos,i2___wmul@multiplier
  8533  001782  C050  F002         	movff	deQueue@pos+1,i2___wmul@multiplier+1
  8534  001786  0E00               	movlw	0
  8535  001788  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8536  00178A  0E18               	movlw	24
  8537  00178C  6E03               	movwf	i2___wmul@multiplicand^0,c
  8538  00178E  EC91  F01B         	call	i2___wmul	;wreg free
  8539  001792  0E0B               	movlw	low (_elementList+11)
  8540  001794  2401               	addwf	?i2___wmul^0,w,c
  8541  001796  6ED9               	movwf	fsr2l,c
  8542  001798  0E01               	movlw	high (_elementList+11)
  8543  00179A  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8544  00179C  6EDA               	movwf	fsr2h,c
  8545  00179E  CFDE F032          	movff	postinc2,??_deQueue
  8546  0017A2  CFDE F033          	movff	postinc2,??_deQueue+1
  8547  0017A6  CFDE F034          	movff	postinc2,??_deQueue+2
  8548  0017AA  CFDE F035          	movff	postinc2,??_deQueue+3
  8549  0017AE  CFDE F036          	movff	postinc2,??_deQueue+4
  8550  0017B2  CFDE F037          	movff	postinc2,??_deQueue+5
  8551  0017B6  CFDE F038          	movff	postinc2,??_deQueue+6
  8552  0017BA  CFDE F039          	movff	postinc2,??_deQueue+7
  8553  0017BE  C032  F042         	movff	??_deQueue,_deQueue$2647
  8554  0017C2  C033  F043         	movff	??_deQueue+1,_deQueue$2647+1
  8555  0017C6  C034  F044         	movff	??_deQueue+2,_deQueue$2647+2
  8556  0017CA  C035  F045         	movff	??_deQueue+3,_deQueue$2647+3
  8557  0017CE  C036  F046         	movff	??_deQueue+4,_deQueue$2647+4
  8558  0017D2  C037  F047         	movff	??_deQueue+5,_deQueue$2647+5
  8559  0017D6  C038  F048         	movff	??_deQueue+6,_deQueue$2647+6
  8560  0017DA  C039  F049         	movff	??_deQueue+7,_deQueue$2647+7
  8561  0017DE  C04F  F001         	movff	deQueue@pos,i2___wmul@multiplier
  8562  0017E2  C050  F002         	movff	deQueue@pos+1,i2___wmul@multiplier+1
  8563  0017E6  0E00               	movlw	0
  8564  0017E8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8565  0017EA  0E18               	movlw	24
  8566  0017EC  6E03               	movwf	i2___wmul@multiplicand^0,c
  8567  0017EE  EC91  F01B         	call	i2___wmul	;wreg free
  8568  0017F2  0E00               	movlw	low _elementList
  8569  0017F4  2401               	addwf	?i2___wmul^0,w,c
  8570  0017F6  6ED9               	movwf	fsr2l,c
  8571  0017F8  0E01               	movlw	high _elementList
  8572  0017FA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8573  0017FC  6EDA               	movwf	fsr2h,c
  8574  0017FE  CFDE F04A          	movff	postinc2,_deQueue$2648
  8575  001802  CFDE F04B          	movff	postinc2,_deQueue$2648+1
  8576  001806  CFDD F04C          	movff	postdec2,_deQueue$2648+2
  8577  00180A  C04F  F001         	movff	deQueue@pos,i2___wmul@multiplier
  8578  00180E  C050  F002         	movff	deQueue@pos+1,i2___wmul@multiplier+1
  8579  001812  0E00               	movlw	0
  8580  001814  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8581  001816  0E18               	movlw	24
  8582  001818  6E03               	movwf	i2___wmul@multiplicand^0,c
  8583  00181A  EC91  F01B         	call	i2___wmul	;wreg free
  8584  00181E  0E13               	movlw	low (_elementList+19)
  8585  001820  2401               	addwf	?i2___wmul^0,w,c
  8586  001822  6ED9               	movwf	fsr2l,c
  8587  001824  0E01               	movlw	high (_elementList+19)
  8588  001826  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8589  001828  6EDA               	movwf	fsr2h,c
  8590  00182A  CFDE F04D          	movff	postinc2,_deQueue$2649
  8591  00182E  CFDD F04E          	movff	postdec2,_deQueue$2649+1
  8592  001832  C03A  F007         	movff	_deQueue$2646,AddElement@delay
  8593  001836  C03B  F008         	movff	_deQueue$2646+1,AddElement@delay+1
  8594  00183A  C03C  F009         	movff	_deQueue$2646+2,AddElement@delay+2
  8595  00183E  C03D  F00A         	movff	_deQueue$2646+3,AddElement@delay+3
  8596  001842  C03E  F00B         	movff	_deQueue$2646+4,AddElement@delay+4
  8597  001846  C03F  F00C         	movff	_deQueue$2646+5,AddElement@delay+5
  8598  00184A  C040  F00D         	movff	_deQueue$2646+6,AddElement@delay+6
  8599  00184E  C041  F00E         	movff	_deQueue$2646+7,AddElement@delay+7
  8600  001852  C042  F00F         	movff	_deQueue$2647,AddElement@period
  8601  001856  C043  F010         	movff	_deQueue$2647+1,AddElement@period+1
  8602  00185A  C044  F011         	movff	_deQueue$2647+2,AddElement@period+2
  8603  00185E  C045  F012         	movff	_deQueue$2647+3,AddElement@period+3
  8604  001862  C046  F013         	movff	_deQueue$2647+4,AddElement@period+4
  8605  001866  C047  F014         	movff	_deQueue$2647+5,AddElement@period+5
  8606  00186A  C048  F015         	movff	_deQueue$2647+6,AddElement@period+6
  8607  00186E  C049  F016         	movff	_deQueue$2647+7,AddElement@period+7
  8608  001872  C04A  F017         	movff	_deQueue$2648,AddElement@data
  8609  001876  C04B  F018         	movff	_deQueue$2648+1,AddElement@data+1
  8610  00187A  C04C  F019         	movff	_deQueue$2648+2,AddElement@data+2
  8611  00187E  C04D  F01A         	movff	_deQueue$2649,AddElement@task_id
  8612  001882  C04E  F01B         	movff	_deQueue$2649+1,AddElement@task_id+1
  8613  001886  EC3B  F008         	call	_AddElement	;wreg free
  8614  00188A                     i2l638:
  8615  00188A  0012               	return		;funcret
  8616  00188C                     __end_of_deQueue:
  8617                           	opt callstack 0
  8618                           
  8619 ;; *************** function _AddElement *****************
  8620 ;; Defined at:
  8621 ;;		line 14 in file "struct.c"
  8622 ;; Parameters:    Size  Location     Type
  8623 ;;  delay           8    6[COMRAM] unsigned long long 
  8624 ;;  period          8   14[COMRAM] unsigned long long 
  8625 ;;  data            3   22[COMRAM] PTR FTN()void 
  8626 ;;		 -> i2_Pump_On(1), i2_CheckHumid(1), i2_CheckTemp(1), Pump_On(1), 
  8627 ;;		 -> Heater_On(1), test(1), CheckHumid(1), CheckTemp(1), 
  8628 ;;		 -> NULL(0), 
  8629 ;;  task_id         2   25[COMRAM] int 
  8630 ;; Auto vars:     Size  Location     Type
  8631 ;;  pos             2   45[COMRAM] int 
  8632 ;;  next_index      2   43[COMRAM] int 
  8633 ;;  index           2   47[COMRAM] int 
  8634 ;; Return value:  Size  Location     Type
  8635 ;;                  1    wreg      unsigned char 
  8636 ;; Registers used:
  8637 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8638 ;; Tracked objects:
  8639 ;;		On entry : 0/0
  8640 ;;		On exit  : 0/0
  8641 ;;		Unchanged: 0/0
  8642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8643 ;;      Params:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8644 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8645 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8646 ;;      Totals:        43       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8647 ;;Total ram usage:       43 bytes
  8648 ;; Hardware stack levels used:    1
  8649 ;; Hardware stack levels required when called:    1
  8650 ;; This function calls:
  8651 ;;		i2___wmul
  8652 ;; This function is called by:
  8653 ;;		_register_timer
  8654 ;;		_deQueue
  8655 ;; This function uses a non-reentrant model
  8656 ;;
  8657                           
  8658                           	psect	text66
  8659  001076                     __ptext66:
  8660                           	opt callstack 0
  8661  001076                     _AddElement:
  8662                           	opt callstack 18
  8663  001076                     
  8664                           ;struct.c: 15:     if(size == capacity) return -1;
  8665  001076  0100               	movlb	0	; () banked
  8666  001078  51DB               	movf	_capacity& (0+255),w,b
  8667  00107A  198C               	xorwf	_size& (0+255),w,b
  8668  00107C  E107               	bnz	i2u163_41
  8669  00107E  51DC               	movf	(_capacity+1)& (0+255),w,b
  8670  001080  198D               	xorwf	(_size+1)& (0+255),w,b
  8671  001082  A4D8               	btfss	status,2,c
  8672  001084  EF46  F008         	goto	i2u163_41
  8673  001088  EF48  F008         	goto	i2u163_40
  8674  00108C                     i2u163_41:
  8675  00108C  EF4B  F008         	goto	i2l3371
  8676  001090                     i2u163_40:
  8677  001090                     
  8678                           ; BSR set to: 0
  8679  001090  0EFF               	movlw	255
  8680  001092  EF21  F00B         	goto	i2l610
  8681  001096                     i2l3371:
  8682                           
  8683                           ; BSR set to: 0
  8684                           ;struct.c: 16:     int index = 0;
  8685  001096  0E00               	movlw	0
  8686  001098  6E31               	movwf	(AddElement@index+1)^0,c
  8687  00109A  0E00               	movlw	0
  8688  00109C  6E30               	movwf	AddElement@index^0,c
  8689                           
  8690                           ;struct.c: 17:     while(elementList[index].isMark == 1) {
  8691  00109E  EF57  F008         	goto	i2l3375
  8692  0010A2                     i2l3373:
  8693                           
  8694                           ;struct.c: 18:         index = index + 1;
  8695  0010A2  0E01               	movlw	1
  8696  0010A4  2430               	addwf	AddElement@index^0,w,c
  8697  0010A6  6E30               	movwf	AddElement@index^0,c
  8698  0010A8  0E00               	movlw	0
  8699  0010AA  2031               	addwfc	(AddElement@index+1)^0,w,c
  8700  0010AC  6E31               	movwf	(AddElement@index+1)^0,c
  8701  0010AE                     i2l3375:
  8702                           
  8703                           ;struct.c: 17:     while(elementList[index].isMark == 1) {
  8704  0010AE  C030  F001         	movff	AddElement@index,i2___wmul@multiplier
  8705  0010B2  C031  F002         	movff	AddElement@index+1,i2___wmul@multiplier+1
  8706  0010B6  0E00               	movlw	0
  8707  0010B8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8708  0010BA  0E18               	movlw	24
  8709  0010BC  6E03               	movwf	i2___wmul@multiplicand^0,c
  8710  0010BE  EC91  F01B         	call	i2___wmul	;wreg free
  8711  0010C2  0E15               	movlw	low (_elementList+21)
  8712  0010C4  2401               	addwf	?i2___wmul^0,w,c
  8713  0010C6  6ED9               	movwf	fsr2l,c
  8714  0010C8  0E01               	movlw	high (_elementList+21)
  8715  0010CA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8716  0010CC  6EDA               	movwf	fsr2h,c
  8717  0010CE  04DE               	decf	postinc2,w,c
  8718  0010D0  B4D8               	btfsc	status,2,c
  8719  0010D2  EF6D  F008         	goto	i2u164_41
  8720  0010D6  EF6F  F008         	goto	i2u164_40
  8721  0010DA                     i2u164_41:
  8722  0010DA  EF51  F008         	goto	i2l3373
  8723  0010DE                     i2u164_40:
  8724  0010DE                     
  8725                           ;struct.c: 20:     elementList[index].isMark = 1;
  8726  0010DE  C030  F001         	movff	AddElement@index,i2___wmul@multiplier
  8727  0010E2  C031  F002         	movff	AddElement@index+1,i2___wmul@multiplier+1
  8728  0010E6  0E00               	movlw	0
  8729  0010E8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8730  0010EA  0E18               	movlw	24
  8731  0010EC  6E03               	movwf	i2___wmul@multiplicand^0,c
  8732  0010EE  EC91  F01B         	call	i2___wmul	;wreg free
  8733  0010F2  0E15               	movlw	low (_elementList+21)
  8734  0010F4  2401               	addwf	?i2___wmul^0,w,c
  8735  0010F6  6ED9               	movwf	fsr2l,c
  8736  0010F8  0E01               	movlw	high (_elementList+21)
  8737  0010FA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8738  0010FC  6EDA               	movwf	fsr2h,c
  8739  0010FE  0E01               	movlw	1
  8740  001100  6EDF               	movwf	indf2,c
  8741                           
  8742                           ;struct.c: 21:     elementList[index].Delay = delay;
  8743  001102  C030  F001         	movff	AddElement@index,i2___wmul@multiplier
  8744  001106  C031  F002         	movff	AddElement@index+1,i2___wmul@multiplier+1
  8745  00110A  0E00               	movlw	0
  8746  00110C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8747  00110E  0E18               	movlw	24
  8748  001110  6E03               	movwf	i2___wmul@multiplicand^0,c
  8749  001112  EC91  F01B         	call	i2___wmul	;wreg free
  8750  001116  0E03               	movlw	low (_elementList+3)
  8751  001118  2401               	addwf	?i2___wmul^0,w,c
  8752  00111A  6ED9               	movwf	fsr2l,c
  8753  00111C  0E01               	movlw	high (_elementList+3)
  8754  00111E  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8755  001120  6EDA               	movwf	fsr2h,c
  8756  001122  C007  FFDE         	movff	AddElement@delay,postinc2
  8757  001126  C008  FFDE         	movff	AddElement@delay+1,postinc2
  8758  00112A  C009  FFDE         	movff	AddElement@delay+2,postinc2
  8759  00112E  C00A  FFDE         	movff	AddElement@delay+3,postinc2
  8760  001132  C00B  FFDE         	movff	AddElement@delay+4,postinc2
  8761  001136  C00C  FFDE         	movff	AddElement@delay+5,postinc2
  8762  00113A  C00D  FFDE         	movff	AddElement@delay+6,postinc2
  8763  00113E  C00E  FFDE         	movff	AddElement@delay+7,postinc2
  8764                           
  8765                           ;struct.c: 22:     elementList[index].Period = period;
  8766  001142  C030  F001         	movff	AddElement@index,i2___wmul@multiplier
  8767  001146  C031  F002         	movff	AddElement@index+1,i2___wmul@multiplier+1
  8768  00114A  0E00               	movlw	0
  8769  00114C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8770  00114E  0E18               	movlw	24
  8771  001150  6E03               	movwf	i2___wmul@multiplicand^0,c
  8772  001152  EC91  F01B         	call	i2___wmul	;wreg free
  8773  001156  0E0B               	movlw	low (_elementList+11)
  8774  001158  2401               	addwf	?i2___wmul^0,w,c
  8775  00115A  6ED9               	movwf	fsr2l,c
  8776  00115C  0E01               	movlw	high (_elementList+11)
  8777  00115E  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8778  001160  6EDA               	movwf	fsr2h,c
  8779  001162  C00F  FFDE         	movff	AddElement@period,postinc2
  8780  001166  C010  FFDE         	movff	AddElement@period+1,postinc2
  8781  00116A  C011  FFDE         	movff	AddElement@period+2,postinc2
  8782  00116E  C012  FFDE         	movff	AddElement@period+3,postinc2
  8783  001172  C013  FFDE         	movff	AddElement@period+4,postinc2
  8784  001176  C014  FFDE         	movff	AddElement@period+5,postinc2
  8785  00117A  C015  FFDE         	movff	AddElement@period+6,postinc2
  8786  00117E  C016  FFDE         	movff	AddElement@period+7,postinc2
  8787                           
  8788                           ;struct.c: 23:     elementList[index].next = -1;
  8789  001182  C030  F001         	movff	AddElement@index,i2___wmul@multiplier
  8790  001186  C031  F002         	movff	AddElement@index+1,i2___wmul@multiplier+1
  8791  00118A  0E00               	movlw	0
  8792  00118C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8793  00118E  0E18               	movlw	24
  8794  001190  6E03               	movwf	i2___wmul@multiplicand^0,c
  8795  001192  EC91  F01B         	call	i2___wmul	;wreg free
  8796  001196  0E16               	movlw	low (_elementList+22)
  8797  001198  2401               	addwf	?i2___wmul^0,w,c
  8798  00119A  6ED9               	movwf	fsr2l,c
  8799  00119C  0E01               	movlw	high (_elementList+22)
  8800  00119E  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8801  0011A0  6EDA               	movwf	fsr2h,c
  8802  0011A2  0EFF               	movlw	255
  8803  0011A4  6EDE               	movwf	postinc2,c
  8804  0011A6  0EFF               	movlw	255
  8805  0011A8  6EDD               	movwf	postdec2,c
  8806                           
  8807                           ;struct.c: 24:     elementList[index].task_identifier = task_id;
  8808  0011AA  C030  F001         	movff	AddElement@index,i2___wmul@multiplier
  8809  0011AE  C031  F002         	movff	AddElement@index+1,i2___wmul@multiplier+1
  8810  0011B2  0E00               	movlw	0
  8811  0011B4  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8812  0011B6  0E18               	movlw	24
  8813  0011B8  6E03               	movwf	i2___wmul@multiplicand^0,c
  8814  0011BA  EC91  F01B         	call	i2___wmul	;wreg free
  8815  0011BE  0E13               	movlw	low (_elementList+19)
  8816  0011C0  2401               	addwf	?i2___wmul^0,w,c
  8817  0011C2  6ED9               	movwf	fsr2l,c
  8818  0011C4  0E01               	movlw	high (_elementList+19)
  8819  0011C6  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8820  0011C8  6EDA               	movwf	fsr2h,c
  8821  0011CA  C01A  FFDE         	movff	AddElement@task_id,postinc2
  8822  0011CE  C01B  FFDD         	movff	AddElement@task_id+1,postdec2
  8823                           
  8824                           ;struct.c: 25:     elementList[index].pTask = data;
  8825  0011D2  C030  F001         	movff	AddElement@index,i2___wmul@multiplier
  8826  0011D6  C031  F002         	movff	AddElement@index+1,i2___wmul@multiplier+1
  8827  0011DA  0E00               	movlw	0
  8828  0011DC  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8829  0011DE  0E18               	movlw	24
  8830  0011E0  6E03               	movwf	i2___wmul@multiplicand^0,c
  8831  0011E2  EC91  F01B         	call	i2___wmul	;wreg free
  8832  0011E6  0E00               	movlw	low _elementList
  8833  0011E8  2401               	addwf	?i2___wmul^0,w,c
  8834  0011EA  6ED9               	movwf	fsr2l,c
  8835  0011EC  0E01               	movlw	high _elementList
  8836  0011EE  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8837  0011F0  6EDA               	movwf	fsr2h,c
  8838  0011F2  C017  FFDE         	movff	AddElement@data,postinc2
  8839  0011F6  C018  FFDE         	movff	AddElement@data+1,postinc2
  8840  0011FA  C019  FFDE         	movff	AddElement@data+2,postinc2
  8841  0011FE                     
  8842                           ;struct.c: 26:     if(size == 0) {
  8843  0011FE  0100               	movlb	0	; () banked
  8844  001200  518C               	movf	_size& (0+255),w,b
  8845  001202  118D               	iorwf	(_size+1)& (0+255),w,b
  8846  001204  A4D8               	btfss	status,2,c
  8847  001206  EF07  F009         	goto	i2u165_41
  8848  00120A  EF09  F009         	goto	i2u165_40
  8849  00120E                     i2u165_41:
  8850  00120E  EF13  F009         	goto	i2l614
  8851  001212                     i2u165_40:
  8852  001212                     
  8853                           ; BSR set to: 0
  8854                           ;struct.c: 28:         head = index;
  8855  001212  C030  F08A         	movff	AddElement@index,_head
  8856  001216  C031  F08B         	movff	AddElement@index+1,_head+1
  8857  00121A                     i2l3383:
  8858                           
  8859                           ;struct.c: 29:         size++;
  8860  00121A  0100               	movlb	0	; () banked
  8861  00121C  4B8C               	infsnz	_size& (0+255),f,b
  8862  00121E  2B8D               	incf	(_size+1)& (0+255),f,b
  8863  001220                     
  8864                           ; BSR set to: 0
  8865                           ;struct.c: 30:         return 0;
  8866  001220  0E00               	movlw	0
  8867  001222  EF21  F00B         	goto	i2l610
  8868  001226                     i2l614:
  8869                           
  8870                           ; BSR set to: 0
  8871                           ;struct.c: 33:         int pos = head;
  8872  001226  C08A  F02E         	movff	_head,AddElement@pos
  8873  00122A  C08B  F02F         	movff	_head+1,AddElement@pos+1
  8874  00122E                     
  8875                           ; BSR set to: 0
  8876                           ;struct.c: 34:         if(elementList[index].Delay < elementList[pos].Delay) {
  8877  00122E  C02E  F001         	movff	AddElement@pos,i2___wmul@multiplier
  8878  001232  C02F  F002         	movff	AddElement@pos+1,i2___wmul@multiplier+1
  8879  001236  0E00               	movlw	0
  8880  001238  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8881  00123A  0E18               	movlw	24
  8882  00123C  6E03               	movwf	i2___wmul@multiplicand^0,c
  8883  00123E  EC91  F01B         	call	i2___wmul	;wreg free
  8884  001242  0E03               	movlw	low (_elementList+3)
  8885  001244  2401               	addwf	?i2___wmul^0,w,c
  8886  001246  6ED9               	movwf	fsr2l,c
  8887  001248  0E01               	movlw	high (_elementList+3)
  8888  00124A  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8889  00124C  6EDA               	movwf	fsr2h,c
  8890  00124E  C030  F001         	movff	AddElement@index,i2___wmul@multiplier
  8891  001252  C031  F002         	movff	AddElement@index+1,i2___wmul@multiplier+1
  8892  001256  0E00               	movlw	0
  8893  001258  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8894  00125A  0E18               	movlw	24
  8895  00125C  6E03               	movwf	i2___wmul@multiplicand^0,c
  8896  00125E  EC91  F01B         	call	i2___wmul	;wreg free
  8897  001262  0E03               	movlw	low (_elementList+3)
  8898  001264  2401               	addwf	?i2___wmul^0,w,c
  8899  001266  6EE1               	movwf	fsr1l,c
  8900  001268  0E01               	movlw	high (_elementList+3)
  8901  00126A  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8902  00126C  6EE2               	movwf	fsr1h,c
  8903  00126E  50DE               	movf	postinc2,w,c
  8904  001270  5CE6               	subwf	postinc1,w,c
  8905  001272  50DE               	movf	postinc2,w,c
  8906  001274  58E6               	subwfb	postinc1,w,c
  8907  001276  50DE               	movf	postinc2,w,c
  8908  001278  58E6               	subwfb	postinc1,w,c
  8909  00127A  50DE               	movf	postinc2,w,c
  8910  00127C  58E6               	subwfb	postinc1,w,c
  8911  00127E  50DE               	movf	postinc2,w,c
  8912  001280  58E6               	subwfb	postinc1,w,c
  8913  001282  50DE               	movf	postinc2,w,c
  8914  001284  58E6               	subwfb	postinc1,w,c
  8915  001286  50DE               	movf	postinc2,w,c
  8916  001288  58E6               	subwfb	postinc1,w,c
  8917  00128A  50DE               	movf	postinc2,w,c
  8918  00128C  58E6               	subwfb	postinc1,w,c
  8919  00128E  B0D8               	btfsc	status,0,c
  8920  001290  EF4C  F009         	goto	i2u166_41
  8921  001294  EF4E  F009         	goto	i2u166_40
  8922  001298                     i2u166_41:
  8923  001298  EFB1  F00A         	goto	i2l617
  8924  00129C                     i2u166_40:
  8925  00129C                     
  8926                           ;struct.c: 35:             elementList[index].next = head;
  8927  00129C  C030  F001         	movff	AddElement@index,i2___wmul@multiplier
  8928  0012A0  C031  F002         	movff	AddElement@index+1,i2___wmul@multiplier+1
  8929  0012A4  0E00               	movlw	0
  8930  0012A6  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8931  0012A8  0E18               	movlw	24
  8932  0012AA  6E03               	movwf	i2___wmul@multiplicand^0,c
  8933  0012AC  EC91  F01B         	call	i2___wmul	;wreg free
  8934  0012B0  0E16               	movlw	low (_elementList+22)
  8935  0012B2  2401               	addwf	?i2___wmul^0,w,c
  8936  0012B4  6ED9               	movwf	fsr2l,c
  8937  0012B6  0E01               	movlw	high (_elementList+22)
  8938  0012B8  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8939  0012BA  6EDA               	movwf	fsr2h,c
  8940  0012BC  C08A  FFDE         	movff	_head,postinc2
  8941  0012C0  C08B  FFDD         	movff	_head+1,postdec2
  8942  0012C4                     
  8943                           ;struct.c: 36:             head = index;
  8944  0012C4  C030  F08A         	movff	AddElement@index,_head
  8945  0012C8  C031  F08B         	movff	AddElement@index+1,_head+1
  8946                           
  8947                           ;struct.c: 37:             elementList[pos].Delay -= elementList[index].Delay;
  8948  0012CC  C030  F001         	movff	AddElement@index,i2___wmul@multiplier
  8949  0012D0  C031  F002         	movff	AddElement@index+1,i2___wmul@multiplier+1
  8950  0012D4  0E00               	movlw	0
  8951  0012D6  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8952  0012D8  0E18               	movlw	24
  8953  0012DA  6E03               	movwf	i2___wmul@multiplicand^0,c
  8954  0012DC  EC91  F01B         	call	i2___wmul	;wreg free
  8955  0012E0  0E03               	movlw	low (_elementList+3)
  8956  0012E2  2401               	addwf	?i2___wmul^0,w,c
  8957  0012E4  6ED9               	movwf	fsr2l,c
  8958  0012E6  0E01               	movlw	high (_elementList+3)
  8959  0012E8  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8960  0012EA  6EDA               	movwf	fsr2h,c
  8961  0012EC  CFDE F01C          	movff	postinc2,??_AddElement
  8962  0012F0  CFDE F01D          	movff	postinc2,??_AddElement+1
  8963  0012F4  CFDE F01E          	movff	postinc2,??_AddElement+2
  8964  0012F8  CFDE F01F          	movff	postinc2,??_AddElement+3
  8965  0012FC  CFDE F020          	movff	postinc2,??_AddElement+4
  8966  001300  CFDE F021          	movff	postinc2,??_AddElement+5
  8967  001304  CFDE F022          	movff	postinc2,??_AddElement+6
  8968  001308  CFDE F023          	movff	postinc2,??_AddElement+7
  8969  00130C  C02E  F001         	movff	AddElement@pos,i2___wmul@multiplier
  8970  001310  C02F  F002         	movff	AddElement@pos+1,i2___wmul@multiplier+1
  8971  001314  0E00               	movlw	0
  8972  001316  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8973  001318  0E18               	movlw	24
  8974  00131A  6E03               	movwf	i2___wmul@multiplicand^0,c
  8975  00131C  EC91  F01B         	call	i2___wmul	;wreg free
  8976  001320  0E03               	movlw	low (_elementList+3)
  8977  001322  2401               	addwf	?i2___wmul^0,w,c
  8978  001324  6ED9               	movwf	fsr2l,c
  8979  001326  0E01               	movlw	high (_elementList+3)
  8980  001328  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8981  00132A  6EDA               	movwf	fsr2h,c
  8982  00132C  501C               	movf	??_AddElement^0,w,c
  8983  00132E  5EDE               	subwf	postinc2,f,c
  8984  001330  501D               	movf	(??_AddElement+1)^0,w,c
  8985  001332  5ADE               	subwfb	postinc2,f,c
  8986  001334  501E               	movf	(??_AddElement+2)^0,w,c
  8987  001336  5ADE               	subwfb	postinc2,f,c
  8988  001338  501F               	movf	(??_AddElement+3)^0,w,c
  8989  00133A  5ADE               	subwfb	postinc2,f,c
  8990  00133C  5020               	movf	(??_AddElement+4)^0,w,c
  8991  00133E  5ADE               	subwfb	postinc2,f,c
  8992  001340  5021               	movf	(??_AddElement+5)^0,w,c
  8993  001342  5ADE               	subwfb	postinc2,f,c
  8994  001344  5022               	movf	(??_AddElement+6)^0,w,c
  8995  001346  5ADE               	subwfb	postinc2,f,c
  8996  001348  5023               	movf	(??_AddElement+7)^0,w,c
  8997  00134A  5ADE               	subwfb	postinc2,f,c
  8998  00134C  EF0D  F009         	goto	i2l3383
  8999  001350                     i2l3403:
  9000                           
  9001                           ;struct.c: 44:             elementList[index].Delay -= elementList[pos].Delay;
  9002  001350  C02E  F001         	movff	AddElement@pos,i2___wmul@multiplier
  9003  001354  C02F  F002         	movff	AddElement@pos+1,i2___wmul@multiplier+1
  9004  001358  0E00               	movlw	0
  9005  00135A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9006  00135C  0E18               	movlw	24
  9007  00135E  6E03               	movwf	i2___wmul@multiplicand^0,c
  9008  001360  EC91  F01B         	call	i2___wmul	;wreg free
  9009  001364  0E03               	movlw	low (_elementList+3)
  9010  001366  2401               	addwf	?i2___wmul^0,w,c
  9011  001368  6ED9               	movwf	fsr2l,c
  9012  00136A  0E01               	movlw	high (_elementList+3)
  9013  00136C  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9014  00136E  6EDA               	movwf	fsr2h,c
  9015  001370  CFDE F01C          	movff	postinc2,??_AddElement
  9016  001374  CFDE F01D          	movff	postinc2,??_AddElement+1
  9017  001378  CFDE F01E          	movff	postinc2,??_AddElement+2
  9018  00137C  CFDE F01F          	movff	postinc2,??_AddElement+3
  9019  001380  CFDE F020          	movff	postinc2,??_AddElement+4
  9020  001384  CFDE F021          	movff	postinc2,??_AddElement+5
  9021  001388  CFDE F022          	movff	postinc2,??_AddElement+6
  9022  00138C  CFDE F023          	movff	postinc2,??_AddElement+7
  9023  001390  C030  F001         	movff	AddElement@index,i2___wmul@multiplier
  9024  001394  C031  F002         	movff	AddElement@index+1,i2___wmul@multiplier+1
  9025  001398  0E00               	movlw	0
  9026  00139A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9027  00139C  0E18               	movlw	24
  9028  00139E  6E03               	movwf	i2___wmul@multiplicand^0,c
  9029  0013A0  EC91  F01B         	call	i2___wmul	;wreg free
  9030  0013A4  0E03               	movlw	low (_elementList+3)
  9031  0013A6  2401               	addwf	?i2___wmul^0,w,c
  9032  0013A8  6ED9               	movwf	fsr2l,c
  9033  0013AA  0E01               	movlw	high (_elementList+3)
  9034  0013AC  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9035  0013AE  6EDA               	movwf	fsr2h,c
  9036  0013B0  501C               	movf	??_AddElement^0,w,c
  9037  0013B2  5EDE               	subwf	postinc2,f,c
  9038  0013B4  501D               	movf	(??_AddElement+1)^0,w,c
  9039  0013B6  5ADE               	subwfb	postinc2,f,c
  9040  0013B8  501E               	movf	(??_AddElement+2)^0,w,c
  9041  0013BA  5ADE               	subwfb	postinc2,f,c
  9042  0013BC  501F               	movf	(??_AddElement+3)^0,w,c
  9043  0013BE  5ADE               	subwfb	postinc2,f,c
  9044  0013C0  5020               	movf	(??_AddElement+4)^0,w,c
  9045  0013C2  5ADE               	subwfb	postinc2,f,c
  9046  0013C4  5021               	movf	(??_AddElement+5)^0,w,c
  9047  0013C6  5ADE               	subwfb	postinc2,f,c
  9048  0013C8  5022               	movf	(??_AddElement+6)^0,w,c
  9049  0013CA  5ADE               	subwfb	postinc2,f,c
  9050  0013CC  5023               	movf	(??_AddElement+7)^0,w,c
  9051  0013CE  5ADE               	subwfb	postinc2,f,c
  9052                           
  9053                           ;struct.c: 45:             next_index = elementList[pos].next;
  9054  0013D0  C02E  F001         	movff	AddElement@pos,i2___wmul@multiplier
  9055  0013D4  C02F  F002         	movff	AddElement@pos+1,i2___wmul@multiplier+1
  9056  0013D8  0E00               	movlw	0
  9057  0013DA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9058  0013DC  0E18               	movlw	24
  9059  0013DE  6E03               	movwf	i2___wmul@multiplicand^0,c
  9060  0013E0  EC91  F01B         	call	i2___wmul	;wreg free
  9061  0013E4  0E16               	movlw	low (_elementList+22)
  9062  0013E6  2401               	addwf	?i2___wmul^0,w,c
  9063  0013E8  6ED9               	movwf	fsr2l,c
  9064  0013EA  0E01               	movlw	high (_elementList+22)
  9065  0013EC  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9066  0013EE  6EDA               	movwf	fsr2h,c
  9067  0013F0  CFDE F02C          	movff	postinc2,AddElement@next_index
  9068  0013F4  CFDD F02D          	movff	postdec2,AddElement@next_index+1
  9069  0013F8                     
  9070                           ;struct.c: 46:             if(elementList[index].Delay < elementList[next_index].Delay) 
      +                          {
  9071  0013F8  C02C  F001         	movff	AddElement@next_index,i2___wmul@multiplier
  9072  0013FC  C02D  F002         	movff	AddElement@next_index+1,i2___wmul@multiplier+1
  9073  001400  0E00               	movlw	0
  9074  001402  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9075  001404  0E18               	movlw	24
  9076  001406  6E03               	movwf	i2___wmul@multiplicand^0,c
  9077  001408  EC91  F01B         	call	i2___wmul	;wreg free
  9078  00140C  0E03               	movlw	low (_elementList+3)
  9079  00140E  2401               	addwf	?i2___wmul^0,w,c
  9080  001410  6ED9               	movwf	fsr2l,c
  9081  001412  0E01               	movlw	high (_elementList+3)
  9082  001414  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9083  001416  6EDA               	movwf	fsr2h,c
  9084  001418  C030  F001         	movff	AddElement@index,i2___wmul@multiplier
  9085  00141C  C031  F002         	movff	AddElement@index+1,i2___wmul@multiplier+1
  9086  001420  0E00               	movlw	0
  9087  001422  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9088  001424  0E18               	movlw	24
  9089  001426  6E03               	movwf	i2___wmul@multiplicand^0,c
  9090  001428  EC91  F01B         	call	i2___wmul	;wreg free
  9091  00142C  0E03               	movlw	low (_elementList+3)
  9092  00142E  2401               	addwf	?i2___wmul^0,w,c
  9093  001430  6EE1               	movwf	fsr1l,c
  9094  001432  0E01               	movlw	high (_elementList+3)
  9095  001434  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9096  001436  6EE2               	movwf	fsr1h,c
  9097  001438  50DE               	movf	postinc2,w,c
  9098  00143A  5CE6               	subwf	postinc1,w,c
  9099  00143C  50DE               	movf	postinc2,w,c
  9100  00143E  58E6               	subwfb	postinc1,w,c
  9101  001440  50DE               	movf	postinc2,w,c
  9102  001442  58E6               	subwfb	postinc1,w,c
  9103  001444  50DE               	movf	postinc2,w,c
  9104  001446  58E6               	subwfb	postinc1,w,c
  9105  001448  50DE               	movf	postinc2,w,c
  9106  00144A  58E6               	subwfb	postinc1,w,c
  9107  00144C  50DE               	movf	postinc2,w,c
  9108  00144E  58E6               	subwfb	postinc1,w,c
  9109  001450  50DE               	movf	postinc2,w,c
  9110  001452  58E6               	subwfb	postinc1,w,c
  9111  001454  50DE               	movf	postinc2,w,c
  9112  001456  58E6               	subwfb	postinc1,w,c
  9113  001458  B0D8               	btfsc	status,0,c
  9114  00145A  EF31  F00A         	goto	i2u167_41
  9115  00145E  EF33  F00A         	goto	i2u167_40
  9116  001462                     i2u167_41:
  9117  001462  EF9D  F00A         	goto	i2l3415
  9118  001466                     i2u167_40:
  9119  001466                     
  9120                           ;struct.c: 47:                 elementList[index].next = next_index;
  9121  001466  C030  F001         	movff	AddElement@index,i2___wmul@multiplier
  9122  00146A  C031  F002         	movff	AddElement@index+1,i2___wmul@multiplier+1
  9123  00146E  0E00               	movlw	0
  9124  001470  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9125  001472  0E18               	movlw	24
  9126  001474  6E03               	movwf	i2___wmul@multiplicand^0,c
  9127  001476  EC91  F01B         	call	i2___wmul	;wreg free
  9128  00147A  0E16               	movlw	low (_elementList+22)
  9129  00147C  2401               	addwf	?i2___wmul^0,w,c
  9130  00147E  6ED9               	movwf	fsr2l,c
  9131  001480  0E01               	movlw	high (_elementList+22)
  9132  001482  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9133  001484  6EDA               	movwf	fsr2h,c
  9134  001486  C02C  FFDE         	movff	AddElement@next_index,postinc2
  9135  00148A  C02D  FFDD         	movff	AddElement@next_index+1,postdec2
  9136                           
  9137                           ;struct.c: 48:                 elementList[next_index].Delay -= elementList[index].Delay
      +                          ;
  9138  00148E  C030  F001         	movff	AddElement@index,i2___wmul@multiplier
  9139  001492  C031  F002         	movff	AddElement@index+1,i2___wmul@multiplier+1
  9140  001496  0E00               	movlw	0
  9141  001498  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9142  00149A  0E18               	movlw	24
  9143  00149C  6E03               	movwf	i2___wmul@multiplicand^0,c
  9144  00149E  EC91  F01B         	call	i2___wmul	;wreg free
  9145  0014A2  0E03               	movlw	low (_elementList+3)
  9146  0014A4  2401               	addwf	?i2___wmul^0,w,c
  9147  0014A6  6ED9               	movwf	fsr2l,c
  9148  0014A8  0E01               	movlw	high (_elementList+3)
  9149  0014AA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9150  0014AC  6EDA               	movwf	fsr2h,c
  9151  0014AE  CFDE F01C          	movff	postinc2,??_AddElement
  9152  0014B2  CFDE F01D          	movff	postinc2,??_AddElement+1
  9153  0014B6  CFDE F01E          	movff	postinc2,??_AddElement+2
  9154  0014BA  CFDE F01F          	movff	postinc2,??_AddElement+3
  9155  0014BE  CFDE F020          	movff	postinc2,??_AddElement+4
  9156  0014C2  CFDE F021          	movff	postinc2,??_AddElement+5
  9157  0014C6  CFDE F022          	movff	postinc2,??_AddElement+6
  9158  0014CA  CFDE F023          	movff	postinc2,??_AddElement+7
  9159  0014CE  C02C  F001         	movff	AddElement@next_index,i2___wmul@multiplier
  9160  0014D2  C02D  F002         	movff	AddElement@next_index+1,i2___wmul@multiplier+1
  9161  0014D6  0E00               	movlw	0
  9162  0014D8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9163  0014DA  0E18               	movlw	24
  9164  0014DC  6E03               	movwf	i2___wmul@multiplicand^0,c
  9165  0014DE  EC91  F01B         	call	i2___wmul	;wreg free
  9166  0014E2  0E03               	movlw	low (_elementList+3)
  9167  0014E4  2401               	addwf	?i2___wmul^0,w,c
  9168  0014E6  6ED9               	movwf	fsr2l,c
  9169  0014E8  0E01               	movlw	high (_elementList+3)
  9170  0014EA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9171  0014EC  6EDA               	movwf	fsr2h,c
  9172  0014EE  501C               	movf	??_AddElement^0,w,c
  9173  0014F0  5EDE               	subwf	postinc2,f,c
  9174  0014F2  501D               	movf	(??_AddElement+1)^0,w,c
  9175  0014F4  5ADE               	subwfb	postinc2,f,c
  9176  0014F6  501E               	movf	(??_AddElement+2)^0,w,c
  9177  0014F8  5ADE               	subwfb	postinc2,f,c
  9178  0014FA  501F               	movf	(??_AddElement+3)^0,w,c
  9179  0014FC  5ADE               	subwfb	postinc2,f,c
  9180  0014FE  5020               	movf	(??_AddElement+4)^0,w,c
  9181  001500  5ADE               	subwfb	postinc2,f,c
  9182  001502  5021               	movf	(??_AddElement+5)^0,w,c
  9183  001504  5ADE               	subwfb	postinc2,f,c
  9184  001506  5022               	movf	(??_AddElement+6)^0,w,c
  9185  001508  5ADE               	subwfb	postinc2,f,c
  9186  00150A  5023               	movf	(??_AddElement+7)^0,w,c
  9187  00150C  5ADE               	subwfb	postinc2,f,c
  9188                           
  9189                           ;struct.c: 49:                 elementList[pos].next = index;
  9190  00150E  C02E  F001         	movff	AddElement@pos,i2___wmul@multiplier
  9191  001512  C02F  F002         	movff	AddElement@pos+1,i2___wmul@multiplier+1
  9192  001516  0E00               	movlw	0
  9193  001518  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9194  00151A  0E18               	movlw	24
  9195  00151C  6E03               	movwf	i2___wmul@multiplicand^0,c
  9196  00151E  EC91  F01B         	call	i2___wmul	;wreg free
  9197  001522  0E16               	movlw	low (_elementList+22)
  9198  001524  2401               	addwf	?i2___wmul^0,w,c
  9199  001526  6ED9               	movwf	fsr2l,c
  9200  001528  0E01               	movlw	high (_elementList+22)
  9201  00152A  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9202  00152C  6EDA               	movwf	fsr2h,c
  9203  00152E  C030  FFDE         	movff	AddElement@index,postinc2
  9204  001532  C031  FFDD         	movff	AddElement@index+1,postdec2
  9205  001536  EF0D  F009         	goto	i2l3383
  9206  00153A                     i2l3415:
  9207                           
  9208                           ;struct.c: 53:             pos = elementList[pos].next;
  9209  00153A  C02E  F001         	movff	AddElement@pos,i2___wmul@multiplier
  9210  00153E  C02F  F002         	movff	AddElement@pos+1,i2___wmul@multiplier+1
  9211  001542  0E00               	movlw	0
  9212  001544  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9213  001546  0E18               	movlw	24
  9214  001548  6E03               	movwf	i2___wmul@multiplicand^0,c
  9215  00154A  EC91  F01B         	call	i2___wmul	;wreg free
  9216  00154E  0E16               	movlw	low (_elementList+22)
  9217  001550  2401               	addwf	?i2___wmul^0,w,c
  9218  001552  6ED9               	movwf	fsr2l,c
  9219  001554  0E01               	movlw	high (_elementList+22)
  9220  001556  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9221  001558  6EDA               	movwf	fsr2h,c
  9222  00155A  CFDE F02E          	movff	postinc2,AddElement@pos
  9223  00155E  CFDD F02F          	movff	postdec2,AddElement@pos+1
  9224  001562                     i2l617:
  9225                           
  9226                           ;struct.c: 43:         while(elementList[pos].next != -1){
  9227  001562  C02E  F001         	movff	AddElement@pos,i2___wmul@multiplier
  9228  001566  C02F  F002         	movff	AddElement@pos+1,i2___wmul@multiplier+1
  9229  00156A  0E00               	movlw	0
  9230  00156C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9231  00156E  0E18               	movlw	24
  9232  001570  6E03               	movwf	i2___wmul@multiplicand^0,c
  9233  001572  EC91  F01B         	call	i2___wmul	;wreg free
  9234  001576  0E16               	movlw	low (_elementList+22)
  9235  001578  2401               	addwf	?i2___wmul^0,w,c
  9236  00157A  6ED9               	movwf	fsr2l,c
  9237  00157C  0E01               	movlw	high (_elementList+22)
  9238  00157E  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9239  001580  6EDA               	movwf	fsr2h,c
  9240  001582  28DE               	incf	postinc2,w,c
  9241  001584  E106               	bnz	i2u168_41
  9242  001586  28DE               	incf	postinc2,w,c
  9243  001588  A4D8               	btfss	status,2,c
  9244  00158A  EFC9  F00A         	goto	i2u168_41
  9245  00158E  EFCB  F00A         	goto	i2u168_40
  9246  001592                     i2u168_41:
  9247  001592  EFA8  F009         	goto	i2l3403
  9248  001596                     i2u168_40:
  9249  001596                     
  9250                           ;struct.c: 56:         elementList[index].Delay -= elementList[pos].Delay;
  9251  001596  C02E  F001         	movff	AddElement@pos,i2___wmul@multiplier
  9252  00159A  C02F  F002         	movff	AddElement@pos+1,i2___wmul@multiplier+1
  9253  00159E  0E00               	movlw	0
  9254  0015A0  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9255  0015A2  0E18               	movlw	24
  9256  0015A4  6E03               	movwf	i2___wmul@multiplicand^0,c
  9257  0015A6  EC91  F01B         	call	i2___wmul	;wreg free
  9258  0015AA  0E03               	movlw	low (_elementList+3)
  9259  0015AC  2401               	addwf	?i2___wmul^0,w,c
  9260  0015AE  6ED9               	movwf	fsr2l,c
  9261  0015B0  0E01               	movlw	high (_elementList+3)
  9262  0015B2  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9263  0015B4  6EDA               	movwf	fsr2h,c
  9264  0015B6  CFDE F01C          	movff	postinc2,??_AddElement
  9265  0015BA  CFDE F01D          	movff	postinc2,??_AddElement+1
  9266  0015BE  CFDE F01E          	movff	postinc2,??_AddElement+2
  9267  0015C2  CFDE F01F          	movff	postinc2,??_AddElement+3
  9268  0015C6  CFDE F020          	movff	postinc2,??_AddElement+4
  9269  0015CA  CFDE F021          	movff	postinc2,??_AddElement+5
  9270  0015CE  CFDE F022          	movff	postinc2,??_AddElement+6
  9271  0015D2  CFDE F023          	movff	postinc2,??_AddElement+7
  9272  0015D6  C030  F001         	movff	AddElement@index,i2___wmul@multiplier
  9273  0015DA  C031  F002         	movff	AddElement@index+1,i2___wmul@multiplier+1
  9274  0015DE  0E00               	movlw	0
  9275  0015E0  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9276  0015E2  0E18               	movlw	24
  9277  0015E4  6E03               	movwf	i2___wmul@multiplicand^0,c
  9278  0015E6  EC91  F01B         	call	i2___wmul	;wreg free
  9279  0015EA  0E03               	movlw	low (_elementList+3)
  9280  0015EC  2401               	addwf	?i2___wmul^0,w,c
  9281  0015EE  6ED9               	movwf	fsr2l,c
  9282  0015F0  0E01               	movlw	high (_elementList+3)
  9283  0015F2  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9284  0015F4  6EDA               	movwf	fsr2h,c
  9285  0015F6  501C               	movf	??_AddElement^0,w,c
  9286  0015F8  5EDE               	subwf	postinc2,f,c
  9287  0015FA  501D               	movf	(??_AddElement+1)^0,w,c
  9288  0015FC  5ADE               	subwfb	postinc2,f,c
  9289  0015FE  501E               	movf	(??_AddElement+2)^0,w,c
  9290  001600  5ADE               	subwfb	postinc2,f,c
  9291  001602  501F               	movf	(??_AddElement+3)^0,w,c
  9292  001604  5ADE               	subwfb	postinc2,f,c
  9293  001606  5020               	movf	(??_AddElement+4)^0,w,c
  9294  001608  5ADE               	subwfb	postinc2,f,c
  9295  00160A  5021               	movf	(??_AddElement+5)^0,w,c
  9296  00160C  5ADE               	subwfb	postinc2,f,c
  9297  00160E  5022               	movf	(??_AddElement+6)^0,w,c
  9298  001610  5ADE               	subwfb	postinc2,f,c
  9299  001612  5023               	movf	(??_AddElement+7)^0,w,c
  9300  001614  5ADE               	subwfb	postinc2,f,c
  9301                           
  9302                           ;struct.c: 57:         elementList[pos].next = index;
  9303  001616  C02E  F001         	movff	AddElement@pos,i2___wmul@multiplier
  9304  00161A  C02F  F002         	movff	AddElement@pos+1,i2___wmul@multiplier+1
  9305  00161E  0E00               	movlw	0
  9306  001620  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9307  001622  0E18               	movlw	24
  9308  001624  6E03               	movwf	i2___wmul@multiplicand^0,c
  9309  001626  EC91  F01B         	call	i2___wmul	;wreg free
  9310  00162A  0E16               	movlw	low (_elementList+22)
  9311  00162C  2401               	addwf	?i2___wmul^0,w,c
  9312  00162E  6ED9               	movwf	fsr2l,c
  9313  001630  0E01               	movlw	high (_elementList+22)
  9314  001632  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9315  001634  6EDA               	movwf	fsr2h,c
  9316  001636  C030  FFDE         	movff	AddElement@index,postinc2
  9317  00163A  C031  FFDD         	movff	AddElement@index+1,postdec2
  9318  00163E  EF0D  F009         	goto	i2l3383
  9319  001642                     i2l610:
  9320                           
  9321                           ; BSR set to: 0
  9322  001642  0012               	return		;funcret
  9323  001644                     __end_of_AddElement:
  9324                           	opt callstack 0
  9325                           
  9326 ;; *************** function _AddExecutedTask *****************
  9327 ;; Defined at:
  9328 ;;		line 128 in file "struct.c"
  9329 ;; Parameters:    Size  Location     Type
  9330 ;;  data            3    6[COMRAM] PTR FTN()void 
  9331 ;;		 -> i2_Pump_On(1), i2_CheckHumid(1), i2_CheckTemp(1), Pump_On(1), 
  9332 ;;		 -> Heater_On(1), test(1), CheckHumid(1), CheckTemp(1), 
  9333 ;;		 -> NULL(0), 
  9334 ;; Auto vars:     Size  Location     Type
  9335 ;;  pos             2   12[COMRAM] int 
  9336 ;; Return value:  Size  Location     Type
  9337 ;;                  1    wreg      void 
  9338 ;; Registers used:
  9339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9340 ;; Tracked objects:
  9341 ;;		On entry : 0/0
  9342 ;;		On exit  : 0/0
  9343 ;;		Unchanged: 0/0
  9344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9345 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9346 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9347 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9348 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9349 ;;Total ram usage:        8 bytes
  9350 ;; Hardware stack levels used:    1
  9351 ;; Hardware stack levels required when called:    1
  9352 ;; This function calls:
  9353 ;;		i2___wmul
  9354 ;; This function is called by:
  9355 ;;		_UpdateElements
  9356 ;; This function uses a non-reentrant model
  9357 ;;
  9358                           
  9359                           	psect	text67
  9360  002CE0                     __ptext67:
  9361                           	opt callstack 0
  9362  002CE0                     _AddExecutedTask:
  9363                           	opt callstack 20
  9364  002CE0                     
  9365                           ;struct.c: 129:     int pos = 0;
  9366  002CE0  0E00               	movlw	0
  9367  002CE2  6E0E               	movwf	(AddExecutedTask@pos+1)^0,c
  9368  002CE4  0E00               	movlw	0
  9369  002CE6  6E0D               	movwf	AddExecutedTask@pos^0,c
  9370                           
  9371                           ;struct.c: 130:     while(executedList[pos] != ((void*)0) && pos <= 10 -1) pos++;
  9372  002CE8  EF78  F016         	goto	i2l3869
  9373  002CEC                     i2l3867:
  9374  002CEC  4A0D               	infsnz	AddExecutedTask@pos^0,f,c
  9375  002CEE  2A0E               	incf	(AddExecutedTask@pos+1)^0,f,c
  9376  002CF0                     i2l3869:
  9377  002CF0  C00D  F001         	movff	AddExecutedTask@pos,i2___wmul@multiplier
  9378  002CF4  C00E  F002         	movff	AddExecutedTask@pos+1,i2___wmul@multiplier+1
  9379  002CF8  0E00               	movlw	0
  9380  002CFA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9381  002CFC  0E03               	movlw	3
  9382  002CFE  6E03               	movwf	i2___wmul@multiplicand^0,c
  9383  002D00  EC91  F01B         	call	i2___wmul	;wreg free
  9384  002D04  0E60               	movlw	low _executedList
  9385  002D06  2401               	addwf	?i2___wmul^0,w,c
  9386  002D08  6ED9               	movwf	fsr2l,c
  9387  002D0A  0E00               	movlw	high _executedList
  9388  002D0C  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9389  002D0E  6EDA               	movwf	fsr2h,c
  9390  002D10  50DE               	movf	postinc2,w,c
  9391  002D12  10DE               	iorwf	postinc2,w,c
  9392  002D14  10DE               	iorwf	postinc2,w,c
  9393  002D16  B4D8               	btfsc	status,2,c
  9394  002D18  EF90  F016         	goto	i2u208_41
  9395  002D1C  EF92  F016         	goto	i2u208_40
  9396  002D20                     i2u208_41:
  9397  002D20  EFA0  F016         	goto	i2l3873
  9398  002D24                     i2u208_40:
  9399  002D24  BE0E               	btfsc	(AddExecutedTask@pos+1)^0,7,c
  9400  002D26  EF9E  F016         	goto	i2u209_41
  9401  002D2A  500E               	movf	(AddExecutedTask@pos+1)^0,w,c
  9402  002D2C  E109               	bnz	i2u209_40
  9403  002D2E  0E0A               	movlw	10
  9404  002D30  5C0D               	subwf	AddExecutedTask@pos^0,w,c
  9405  002D32  A0D8               	btfss	status,0,c
  9406  002D34  EF9E  F016         	goto	i2u209_41
  9407  002D38  EFA0  F016         	goto	i2u209_40
  9408  002D3C                     i2u209_41:
  9409  002D3C  EF76  F016         	goto	i2l3867
  9410  002D40                     i2u209_40:
  9411  002D40                     i2l3873:
  9412                           
  9413                           ;struct.c: 131:     executedList[pos] = data;
  9414  002D40  C00D  F001         	movff	AddExecutedTask@pos,i2___wmul@multiplier
  9415  002D44  C00E  F002         	movff	AddExecutedTask@pos+1,i2___wmul@multiplier+1
  9416  002D48  0E00               	movlw	0
  9417  002D4A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9418  002D4C  0E03               	movlw	3
  9419  002D4E  6E03               	movwf	i2___wmul@multiplicand^0,c
  9420  002D50  EC91  F01B         	call	i2___wmul	;wreg free
  9421  002D54  0E60               	movlw	low _executedList
  9422  002D56  2401               	addwf	?i2___wmul^0,w,c
  9423  002D58  6ED9               	movwf	fsr2l,c
  9424  002D5A  0E00               	movlw	high _executedList
  9425  002D5C  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9426  002D5E  6EDA               	movwf	fsr2h,c
  9427  002D60  C007  FFDE         	movff	AddExecutedTask@data,postinc2
  9428  002D64  C008  FFDE         	movff	AddExecutedTask@data+1,postinc2
  9429  002D68  C009  FFDE         	movff	AddExecutedTask@data+2,postinc2
  9430  002D6C  0012               	return		;funcret
  9431  002D6E                     __end_of_AddExecutedTask:
  9432                           	opt callstack 0
  9433                           
  9434 ;; *************** function i2___wmul *****************
  9435 ;; Defined at:
  9436 ;;		line 15 in file "D:\Programs\MPLABX\pic\sources\c99\common\Umul16.c"
  9437 ;; Parameters:    Size  Location     Type
  9438 ;;  multiplier      2    0[COMRAM] unsigned int 
  9439 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9440 ;; Auto vars:     Size  Location     Type
  9441 ;;  __wmul          2    4[COMRAM] unsigned int 
  9442 ;; Return value:  Size  Location     Type
  9443 ;;                  2    0[COMRAM] unsigned int 
  9444 ;; Registers used:
  9445 ;;		wreg, status,2, status,0, prodl, prodh
  9446 ;; Tracked objects:
  9447 ;;		On entry : 0/0
  9448 ;;		On exit  : 0/0
  9449 ;;		Unchanged: 0/0
  9450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9451 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9452 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9454 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9455 ;;Total ram usage:        6 bytes
  9456 ;; Hardware stack levels used:    1
  9457 ;; This function calls:
  9458 ;;		Nothing
  9459 ;; This function is called by:
  9460 ;;		_AddElement
  9461 ;;		_UpdateElements
  9462 ;;		_deQueue
  9463 ;;		_AddExecutedTask
  9464 ;;		_Task_Init
  9465 ;; This function uses a non-reentrant model
  9466 ;;
  9467                           
  9468                           	psect	text68
  9469  003722                     __ptext68:
  9470                           	opt callstack 0
  9471  003722                     i2___wmul:
  9472                           	opt callstack 20
  9473  003722  5001               	movf	i2___wmul@multiplier^0,w,c
  9474  003724  0203               	mulwf	i2___wmul@multiplicand^0,c
  9475  003726  CFF3 F005          	movff	prodl,i2___wmul@product
  9476  00372A  CFF4 F006          	movff	prodh,i2___wmul@product+1
  9477  00372E  5001               	movf	i2___wmul@multiplier^0,w,c
  9478  003730  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
  9479  003732  50F3               	movf	243,w,c
  9480  003734  2606               	addwf	(i2___wmul@product+1)^0,f,c
  9481  003736  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
  9482  003738  0203               	mulwf	i2___wmul@multiplicand^0,c
  9483  00373A  50F3               	movf	243,w,c
  9484  00373C  2606               	addwf	(i2___wmul@product+1)^0,f,c
  9485  00373E  C005  F001         	movff	i2___wmul@product,?i2___wmul
  9486  003742  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  9487  003746  0012               	return		;funcret
  9488  003748                     __end_ofi2___wmul:
  9489                           	opt callstack 0
  9490                           
  9491                           	psect	text69
  9492  000000                     __ptext69:
  9493                           	opt callstack 0
  9494  000000                     
  9495                           	psect	rparam
  9496  0000                     
  9497                           	psect	temp
  9498  00005F                     btemp:
  9499                           	opt callstack 0
  9500  00005F                     	ds	1
  9501  0000                     int$flags	set	btemp
  9502  0000                     wtemp8	set	btemp+1
  9503  0000                     ttemp5	set	btemp+1
  9504  0000                     ttemp6	set	btemp+4
  9505  0000                     ttemp7	set	btemp+8
  9506                           tosu	equ	0xFFF
  9507                           tosh	equ	0xFFE
  9508                           tosl	equ	0xFFD
  9509                           stkptr	equ	0xFFC
  9510                           pclatu	equ	0xFFB
  9511                           pclath	equ	0xFFA
  9512                           pcl	equ	0xFF9
  9513                           tblptru	equ	0xFF8
  9514                           tblptrh	equ	0xFF7
  9515                           tblptrl	equ	0xFF6
  9516                           tablat	equ	0xFF5
  9517                           prodh	equ	0xFF4
  9518                           prodl	equ	0xFF3
  9519                           indf0	equ	0xFEF
  9520                           postinc0	equ	0xFEE
  9521                           postdec0	equ	0xFED
  9522                           preinc0	equ	0xFEC
  9523                           plusw0	equ	0xFEB
  9524                           fsr0h	equ	0xFEA
  9525                           fsr0l	equ	0xFE9
  9526                           wreg	equ	0xFE8
  9527                           indf1	equ	0xFE7
  9528                           postinc1	equ	0xFE6
  9529                           postdec1	equ	0xFE5
  9530                           preinc1	equ	0xFE4
  9531                           plusw1	equ	0xFE3
  9532                           fsr1h	equ	0xFE2
  9533                           fsr1l	equ	0xFE1
  9534                           bsr	equ	0xFE0
  9535                           indf2	equ	0xFDF
  9536                           postinc2	equ	0xFDE
  9537                           postdec2	equ	0xFDD
  9538                           preinc2	equ	0xFDC
  9539                           plusw2	equ	0xFDB
  9540                           fsr2h	equ	0xFDA
  9541                           fsr2l	equ	0xFD9
  9542                           status	equ	0xFD8


Data Sizes:
    Strings     116
    Constant    0
    Data        19
    BSS         332
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160     36     136
    BANK1           256      6     256
    BANK2           256     10      10
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    deQueue$2648	PTR FTN()void  size(3) Largest target is 1
		 -> i2_Pump_On(), i2_CheckHumid(), i2_CheckTemp(), Pump_On(), 
		 -> Heater_On(), test(), CheckHumid(), CheckTemp(), 
		 -> NULL(NULL[0]), 

    UpdateElements$2645	PTR FTN()void  size(3) Largest target is 1
		 -> i2_Pump_On(), i2_CheckHumid(), i2_CheckTemp(), Pump_On(), 
		 -> Heater_On(), test(), CheckHumid(), CheckTemp(), 
		 -> NULL(NULL[0]), 

    deQueue$2556	PTR FTN()void  size(3) Largest target is 1
		 -> Pump_On(), Heater_On(), test(), CheckHumid(), 
		 -> CheckTemp(), NULL(NULL[0]), 

    UpdateElements$2553	PTR FTN()void  size(3) Largest target is 1
		 -> Pump_On(), Heater_On(), test(), CheckHumid(), 
		 -> CheckTemp(), NULL(NULL[0]), 

    AddExecutedTask@data	PTR FTN()void  size(3) Largest target is 1
		 -> i2_Pump_On(), i2_CheckHumid(), i2_CheckTemp(), Pump_On(), 
		 -> Heater_On(), test(), CheckHumid(), CheckTemp(), 
		 -> NULL(NULL[0]), 

    AddElement@data	PTR FTN()void  size(3) Largest target is 1
		 -> i2_Pump_On(), i2_CheckHumid(), i2_CheckTemp(), Pump_On(), 
		 -> Heater_On(), test(), CheckHumid(), CheckTemp(), 
		 -> NULL(NULL[0]), 

    executedList	PTR FTN()void [10] size(3) Largest target is 1
		 -> i2_Pump_On(), i2_CheckHumid(), i2_CheckTemp(), Pump_On(), 
		 -> Heater_On(), test(), CheckHumid(), CheckTemp(), 
		 -> NULL(NULL[0]), 

    S741Node$pTask	PTR FTN()void  size(3) Largest target is 1
		 -> Pump_On(), Heater_On(), test(), CheckHumid(), 
		 -> CheckTemp(), NULL(NULL[0]), 

    elementList.pTask	PTR FTN()void  size(3) Largest target is 1
		 -> i2_Pump_On(), i2_CheckHumid(), i2_CheckTemp(), Pump_On(), 
		 -> Heater_On(), test(), CheckHumid(), CheckTemp(), 
		 -> NULL(NULL[0]), 

    register_timer@data	PTR FTN()void  size(3) Largest target is 1
		 -> i2_Pump_On(), i2_CheckHumid(), i2_CheckTemp(), Pump_On(), 
		 -> Heater_On(), test(), CheckHumid(), CheckTemp(), 

    LCDPutStr@ptr	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_9(CODE[19]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[14]), 
		 -> STR_5(CODE[17]), STR_4(CODE[12]), STR_3(CODE[17]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _global_timer in COMRAM

    _global_timer->_UpdateElements
    _SetUp_Temp->i2_LCDMoveCursor
    _SetUp_Humid->i2_LCDMoveCursor
    _PrintSetUp->i2_LCDPutStr
    i2_PrintIdle->i2_LCDPutStr
    i2_LCDPutStr->i2_LCDPutChar
    _Task_Init->_register_timer
    _register_timer->_AddElement
    _PrintSetTime->i2_LCDMoveCursor
    i2_LCDPutChar->i2_WritePort_BBSPI
    i2_LCDMoveCursor->i2_LCDPutInst
    i2_LCDPutInst->i2_WritePort_BBSPI
    i2_WritePort_BBSPI->i2_SendByteBBSPI
    _UpdateElements->_deQueue
    _deQueue->_AddElement
    _AddElement->i2___wmul
    _AddExecutedTask->i2___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _global_timer in BANK0

    _readButtonRA5->_Task_Init

Critical Paths under _main in BANK1

    _dispatchISR->___wmul
    _LCD_SetUp->_LCDPutInst
    _LCDInit->_LCDPutInst
    _Port_BBSPIInit->_SendByteBBSPI
    _InitializeElements->___wmul
    _readDHT->_getByte
    _PrintTempHumid->_LCDPutChar
    _PrintTempHumid->___awmod
    _PrintPump->_LCDPutInst
    _PrintIdle->_LCDPutInst
    _PrintHeater->_LCDPutInst
    _LCDPutStr->_LCDPutChar
    _PrintDemo->_LCDPutChar
    _PrintDemo->___awmod
    _LCDPutChar->_WritePort_BBSPI
    _LCDMoveCursor->_LCDPutInst
    _LCDPutInst->_WritePort_BBSPI
    _WritePort_BBSPI->_SendByteBBSPI

Critical Paths under _global_timer in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_FSM
    _System_Initialize->_InitializeElements
    _LCD_SetUp->_LCDInit
    _LCDInit->_LCDPutInst
    _getTempAndHumid->_PrintTempHumid
    _PrintTempHumid->_LCDMoveCursor
    _PrintPump->_LCDPutStr
    _PrintIdle->_LCDPutStr
    _PrintHeater->_LCDPutStr
    _LCDPutStr->_LCDPutChar
    _PrintDemo->_LCDMoveCursor
    _LCDMoveCursor->_LCDPutInst

Critical Paths under _global_timer in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _global_timer in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _global_timer in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _global_timer in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _global_timer in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _global_timer in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _global_timer in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _global_timer in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _global_timer in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _global_timer in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _global_timer in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _global_timer in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _global_timer in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _global_timer in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   51501
                                _FSM
                          _PrintIdle
                  _System_Initialize
                        _dispatchISR
 ---------------------------------------------------------------------------------
 (1) _dispatchISR                                          5     5      0    9522
                                              0 BANK2      5     5      0
                         _CheckHumid *
                          _CheckTemp *
                          _Heater_On *
                            _Pump_On *
                             ___wmul
                               _test *
 ---------------------------------------------------------------------------------
 (2) _test                                                 1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Heater_On                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CheckTemp                                            3     3      0       0
                                              0 BANK1      3     3      0
                         _Heater_Off
                            _Pump_On
 ---------------------------------------------------------------------------------
 (2) _Pump_On                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CheckHumid                                           3     3      0       0
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) _System_Initialize                                    0     0      0   13644
                   _IFreq_Initialize
                 _InitializeElements
                          _LCD_SetUp
                          _PIN_SetUp
                     _TMR_Initialize
                     _TMR_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR_StartTimer                                       4     2      2     231
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (2) _TMR_Initialize                                       4     2      2     211
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (2) _PIN_SetUp                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_SetUp                                            0     0      0    3525
                            _LCDInit
                         _LCDPutInst
 ---------------------------------------------------------------------------------
 (3) _LCDInit                                              1     1      0    2418
                                              1 BANK2      1     1      0
                          _InitBBSPI
                         _LCDPutInst
                     _Port_BBSPIInit
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (4) _Port_BBSPIInit                                       1     1      0     235
                                              3 BANK1      1     1      0
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (4) _InitBBSPI                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitializeElements                                  10    10      0    9677
                                              0 BANK2     10    10      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    9392
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) _IFreq_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FSM                                                  2     2      0   25226
                                              8 BANK2      2     2      0
                         _Heater_Off
                   _Heater_Operation
                          _PrintDemo
                        _PrintHeater
                          _PrintIdle
                          _PrintPump
                           _Pump_Off
                     _Pump_Operation
                    _getTempAndHumid
                            _readDHT
 ---------------------------------------------------------------------------------
 (2) _readDHT                                              5     5      0     374
                                              0 BANK2      5     5      0
                            _getByte
 ---------------------------------------------------------------------------------
 (3) _getByte                                              6     6      0     238
                                              0 BANK1      6     6      0
 ---------------------------------------------------------------------------------
 (2) _getTempAndHumid                                      0     0      0    8824
                     _PrintTempHumid
 ---------------------------------------------------------------------------------
 (3) _PrintTempHumid                                       2     0      2    8824
                                              6 BANK2      2     0      2
                      _LCDMoveCursor
                         _LCDPutChar
                          _LCDPutStr
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _Pump_Operation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Pump_Off                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PrintPump                                            0     0      0    3109
                         _LCDPutInst
                          _LCDPutStr
 ---------------------------------------------------------------------------------
 (1) _PrintIdle                                            0     0      0    3109
                         _LCDPutInst
                          _LCDPutStr
 ---------------------------------------------------------------------------------
 (2) _PrintHeater                                          0     0      0    3109
                         _LCDPutInst
                          _LCDPutStr
 ---------------------------------------------------------------------------------
 (2) _LCDPutStr                                            2     0      2    2002
                                              1 BANK2      2     0      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (2) _PrintDemo                                            0     0      0    6701
                      _LCDMoveCursor
                         _LCDPutChar
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    2033
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1495
                                              0 BANK1      4     0      4
                                              0 BANK2      4     4      0
 ---------------------------------------------------------------------------------
 (3) _LCDPutChar                                           2     2      0    1107
                                              5 BANK1      1     1      0
                                              0 BANK2      1     1      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (4) _LCDMoveCursor                                        5     4      1    2066
                                              1 BANK2      5     4      1
                         _LCDPutInst
 ---------------------------------------------------------------------------------
 (3) _LCDPutInst                                           2     2      0    1107
                                              5 BANK1      1     1      0
                                              0 BANK2      1     1      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (4) _WritePort_BBSPI                                      2     1      1    1076
                                              3 BANK1      2     1      1
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (5) _SendByteBBSPI                                        3     3      0     204
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _Heater_Operation                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Heater_Off                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _global_timer                                        10    10      0   32039
                                             26 BANK0     10    10      0
                     _UpdateElements
                      _UpdateTimeOut
                      _readButtonRA5
                      _readButtonRB0
 ---------------------------------------------------------------------------------
 (9) _readButtonRB0                                        0     0      0    8234
                       _PrintSetTime
                         _PrintSetUp
                        _SetUp_Humid
                         _SetUp_Temp
                       i2_CheckHumid
                        i2_CheckTemp
                          i2___awmod
 ---------------------------------------------------------------------------------
 (10) i2_CheckTemp                                         3     3      0       0
                                              0 COMRAM     3     3      0
                       i2_Heater_Off
                          i2_Pump_On
 ---------------------------------------------------------------------------------
 (11) i2_Pump_On                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (11) i2_Heater_Off                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i2_CheckHumid                                        3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (10) _SetUp_Temp                                          0     0      0    2183
                    i2_LCDMoveCursor
                       i2_LCDPutChar
                          i2___awdiv
                          i2___awmod
 ---------------------------------------------------------------------------------
 (10) _SetUp_Humid                                         0     0      0    2183
                    i2_LCDMoveCursor
                       i2_LCDPutChar
                          i2___awdiv
                          i2___awmod
 ---------------------------------------------------------------------------------
 (10) _PrintSetUp                                          0     0      0     973
                       i2_LCDPutInst
                        i2_LCDPutStr
 ---------------------------------------------------------------------------------
 (9) _readButtonRA5                                        0     0      0   12020
                       _PrintSetTime
                      _TMR_StopTimer
                          _Task_Init
                       i2_LCDPutInst
                        i2_LCDPutStr
                        i2_PrintIdle
                   i2_TMR_StartTimer
 ---------------------------------------------------------------------------------
 (10) i2_PrintIdle                                         0     0      0     973
                       i2_LCDPutInst
                        i2_LCDPutStr
 ---------------------------------------------------------------------------------
 (11) i2_LCDPutStr                                         2     0      2     561
                                              7 COMRAM     2     0      2
                       i2_LCDPutChar
 ---------------------------------------------------------------------------------
 (10) _Task_Init                                          26    26      0    7719
                                              0 BANK0     26    26      0
                     _register_timer
                   i2_TMR_StartTimer
                           i2___wmul
 ---------------------------------------------------------------------------------
 (10) i2_TMR_StartTimer                                    4     2      2      74
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (11) _register_timer                                     22     3     19    5081
                                             49 COMRAM    22     3     19
                         _AddElement
 ---------------------------------------------------------------------------------
 (10) _TMR_StopTimer                                       4     2      2      98
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (10) _PrintSetTime                                        0     0      0    2183
                    i2_LCDMoveCursor
                       i2_LCDPutChar
                          i2___awdiv
                          i2___awmod
 ---------------------------------------------------------------------------------
 (10) i2___awmod                                           6     2      4     712
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (11) i2___awdiv                                           8     4      4     456
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (11) i2_LCDPutChar                                        2     2      0     412
                                              5 COMRAM     2     2      0
                  i2_WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (11) i2_LCDMoveCursor                                     5     4      1     603
                                              7 COMRAM     5     4      1
                       i2_LCDPutInst
 ---------------------------------------------------------------------------------
 (12) i2_LCDPutInst                                        2     2      0     412
                                              5 COMRAM     2     2      0
                  i2_WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (12) i2_WritePort_BBSPI                                   2     1      1     390
                                              3 COMRAM     2     1      1
                    i2_SendByteBBSPI
 ---------------------------------------------------------------------------------
 (13) i2_SendByteBBSPI                                     3     3      0     138
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) _UpdateTimeOut                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _UpdateElements                                      13    13      0   11785
                                             80 COMRAM    13    13      0
                    _AddExecutedTask
                            _deQueue
                           i2___wmul
 ---------------------------------------------------------------------------------
 (10) _deQueue                                            31    31      0    6568
                                             49 COMRAM    31    31      0
                         _AddElement
                           i2___wmul
 ---------------------------------------------------------------------------------
 (12) _AddElement                                         43    22     21    3852
                                              6 COMRAM    43    22     21
                           i2___wmul
 ---------------------------------------------------------------------------------
 (10) _AddExecutedTask                                     8     5      3    2613
                                              6 COMRAM     8     5      3
                           i2___wmul
 ---------------------------------------------------------------------------------
 (11) i2___wmul                                            6     2      4    2447
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FSM
     _Heater_Off
     _Heater_Operation
     _PrintDemo
       _LCDMoveCursor
         _LCDPutInst
           _WritePort_BBSPI
             _SendByteBBSPI
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
       ___awdiv
       ___awmod
     _PrintHeater
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
       _LCDPutStr
         _LCDPutChar
           _WritePort_BBSPI
             _SendByteBBSPI
     _PrintIdle
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
       _LCDPutStr
         _LCDPutChar
           _WritePort_BBSPI
             _SendByteBBSPI
     _PrintPump
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
       _LCDPutStr
         _LCDPutChar
           _WritePort_BBSPI
             _SendByteBBSPI
     _Pump_Off
     _Pump_Operation
     _getTempAndHumid
       _PrintTempHumid
         _LCDMoveCursor
           _LCDPutInst
             _WritePort_BBSPI
               _SendByteBBSPI
         _LCDPutChar
           _WritePort_BBSPI
             _SendByteBBSPI
         _LCDPutStr
           _LCDPutChar
             _WritePort_BBSPI
               _SendByteBBSPI
         ___awdiv
         ___awmod
     _readDHT
       _getByte
   _PrintIdle
     _LCDPutInst
       _WritePort_BBSPI
         _SendByteBBSPI
     _LCDPutStr
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
   _System_Initialize
     _IFreq_Initialize
     _InitializeElements
       ___wmul
     _LCD_SetUp
       _LCDInit
         _InitBBSPI
         _LCDPutInst
           _WritePort_BBSPI
             _SendByteBBSPI
         _Port_BBSPIInit
           _SendByteBBSPI
         _WritePort_BBSPI
           _SendByteBBSPI
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
     _PIN_SetUp
     _TMR_Initialize
     _TMR_StartTimer
   _dispatchISR
     _CheckHumid *
     _CheckTemp *
       _Heater_Off
       _Pump_On
     _Heater_On *
     _Pump_On *
     ___wmul *
     _test *

 _global_timer (ROOT)
   _UpdateElements
     _AddExecutedTask
       i2___wmul
     _deQueue
       _AddElement
         i2___wmul
       i2___wmul
     i2___wmul
   _UpdateTimeOut
   _readButtonRA5
     _PrintSetTime
       i2_LCDMoveCursor
         i2_LCDPutInst
           i2_WritePort_BBSPI
             i2_SendByteBBSPI
       i2_LCDPutChar
         i2_WritePort_BBSPI
           i2_SendByteBBSPI
       i2___awdiv
       i2___awmod
     _TMR_StopTimer
     _Task_Init
       _register_timer
         _AddElement
           i2___wmul
       i2_TMR_StartTimer
       i2___wmul
     i2_LCDPutInst
       i2_WritePort_BBSPI
         i2_SendByteBBSPI
     i2_LCDPutStr
       i2_LCDPutChar
         i2_WritePort_BBSPI
           i2_SendByteBBSPI
     i2_PrintIdle
       i2_LCDPutInst
         i2_WritePort_BBSPI
           i2_SendByteBBSPI
       i2_LCDPutStr
         i2_LCDPutChar
           i2_WritePort_BBSPI
             i2_SendByteBBSPI
     i2_TMR_StartTimer
   _readButtonRB0
     _PrintSetTime
       i2_LCDMoveCursor
         i2_LCDPutInst
           i2_WritePort_BBSPI
             i2_SendByteBBSPI
       i2_LCDPutChar
         i2_WritePort_BBSPI
           i2_SendByteBBSPI
       i2___awdiv
       i2___awmod
     _PrintSetUp
       i2_LCDPutInst
         i2_WritePort_BBSPI
           i2_SendByteBBSPI
       i2_LCDPutStr
         i2_LCDPutChar
           i2_WritePort_BBSPI
             i2_SendByteBBSPI
     _SetUp_Humid
       i2_LCDMoveCursor
         i2_LCDPutInst
           i2_WritePort_BBSPI
             i2_SendByteBBSPI
       i2_LCDPutChar
         i2_WritePort_BBSPI
           i2_SendByteBBSPI
       i2___awdiv
       i2___awmod
     _SetUp_Temp
       i2_LCDMoveCursor
         i2_LCDPutInst
           i2_WritePort_BBSPI
             i2_SendByteBBSPI
       i2_LCDPutChar
         i2_WritePort_BBSPI
           i2_SendByteBBSPI
       i2___awdiv
       i2___awmod
     i2_CheckHumid
     i2_CheckTemp
       i2_Heater_Off
       i2_Pump_On
     i2___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      A       A       9        3.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100      6     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     24      88       5       85.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1F0      32        0.0%
DATA                 0      0     1F0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Nov 25 13:44:33 2019

              _LCDMoveCursor 3494                  i2_PrintIdle 36FC             ??_UpdateElements 0051  
                ?_LCDPutChar 0001                 ___awdiv@sign 0201                           _id 00B1  
                ?_LCDPutInst 0001    __size_of_Heater_Operation 0004          ___wmul@multiplicand 01FC  
            ??_UpdateTimeOut 0001        SendByteBBSPI@bitcount 01FB                          l121 2F9A  
                        l113 312E                          l122 2F9C                          l131 3788  
                        l116 3820                          l125 2FEC                          l150 34D0  
                        l134 2EFA                          l119 2F86                          l143 33D2  
                        l128 37A6                          l137 2F76                          l162 365C  
                        l165 3686                          l159 3768                          l168 37D6  
                        l185 2882                          l283 3358                          l188 2CDE  
                        l269 382E                          l285 335E                          l606 1E52  
                        l286 3392                          l279 32BA                          l665 295C  
                        l770 25D0                          l780 2198                          l774 25AE  
                        l678 36FA                          l783 227E                          l796 3618  
                        l797 3632                          l789 221C                          _FSM 1E54  
 __size_of_System_Initialize 003C                          _Sum 00A1                 ___awmod@sign 01FF  
   __size_ofi2_LCDMoveCursor 003A                          tosl 000FFD                          wreg 000FE8  
           ?i2_SendByteBBSPI 0001                   _CheckHumid 2DF8              __end_of_LCDInit 3130  
               __CFG_LVP$OFF 000000                         ?_FSM 0001                 __CFG_WDT$OFF 000000  
                       l1111 3854                         l1120 380E                         l1114 3864  
                       l1130 1E58                         l1123 3860                         l1108 26BC  
                       l1117 3842                         l1126 3838                         l1151 1FEE  
                       l1154 36AE                         l1093 35C6                         l1087 36D4  
                       l1099 2E7E                         l1385 27A0                         l5021 2646  
                       l1398 2B94                         l5023 264E                         l5015 25DC  
                       l5031 2E02                         l5201 1F74                         l5121 359E  
                       l5041 36B0                         l5025 267A                         l5017 2608  
                       l5033 2E32                         l5051 3836                         l5211 1F8A  
                       l5131 1E54                         l5123 35AC                         l5027 26A6  
                       l5019 2634                         l5035 2E5E                         l5043 384E  
                       l5045 3862                         l5221 1FA2                         l5213 1F8C  
                       l5141 1E7A                         l5133 1E5C                         l5125 35B0  
                       l5117 358C                         l5029 26B8                         l5037 2E6E  
                       l5301 3200                         l5047 385E                         l5215 1F90  
                       l5151 1EAE                         l5143 1E80                         l5135 1E6C  
                       l5127 35B4                         l5119 3590                         l5039 2E7C  
                       l5303 3212                         l5311 322E                         l4601 2FD0  
                       l5049 3830                         l5217 1F94                         l5209 1F7A  
                       l5161 1ED0                         l5145 1E8E                         l5137 1E72  
                       l5129 35B8                         l5241 28D0                         l5313 3242  
                       l5305 3222                         l4603 2FD2                         l4611 3770  
                       l5219 1F9E                         l5171 1F02                         l5163 1EE2  
                       l5147 1EA0                         l5155 1EB6                         l5139 1E76  
                       l5243 2900                         l5315 3254                         l5307 3226  
                       l4605 2FDA                         l4613 3786                         l4621 2F30  
                       l4701 2762                         l5181 1F12                         l5173 1F06  
                       l5165 1EE8                         l5157 1EC6                         l5149 1EA4  
                       l5229 1FB8                         l5245 2906                         l5237 2884  
                       l5309 3228                         l4607 2FDC                         l4623 2F3A  
                       l4615 2F00                         l4631 2E84                         l4711 2790  
                       l4703 276A                         l5191 1F4A                         l5183 1F24  
                       l5159 1ECE                         l5167 1EF0                         l5247 293E  
                       l5239 2892                         l4609 376E                         l4625 2F4C  
                       l4617 2F12                         l4641 2ED0                         l4633 2E96  
                       l4713 2798                         l4705 276E                         l4721 2AF8  
                       l4801 24E4                         l5193 1F54                         l5185 1F2C  
                       l5169 1F00                         l4571 2F94                         l4563 2F7C  
                       l4627 2F58                         l4619 2F1E                         l4643 2EDC  
                       l4635 2EA2                         l4707 2776                         l4731 2B2C  
                       l4723 2B00                         l4811 252E                         l4803 24FC  
                       l5187 1F34                         l5179 1F0E                         l4651 3790  
                       l4581 2FBC                         l4573 2FAA                         l4565 2F80  
                       l4629 2F6A                         l4645 2EEE                         l4637 2EB4  
                       l4709 277E                         l4741 2B68                         l4733 2B34  
                       l4725 2B04                         l4717 2AE4                         l4661 33B2  
                       l4813 253C                         l5189 1F46                         l5197 1F5C  
                       l4653 37A4                         l4591 2FC6                         l4583 2FBE  
                       l4575 2FB2                         l4671 34CA                         l4663 3498  
                       l4639 2EBE                         l4743 2B6E                         l4735 2B3C  
                       l4727 2B12                         l4719 2AEA                         l4655 3394  
                       l4815 2564                         l4807 2502                         l5199 1F6C  
                       l4647 3810                         l4903 3354                         l4833 383A  
                       l4593 2FC8                         l4585 2FC0                         l4577 2FB8  
                       l4665 34AA                         l4681 26E2                         l4673 26BE  
                       l4737 2B4A                         l4745 2B74                         l4729 2B1A  
                       l4657 3398                         l4825 25BC                         l4817 2586  
                       l4809 2526                         l4841 36A6                         l4921 1CA2  
                       l4649 378E                         l4761 30E4                         l4753 30CA  
                       l4835 3840                         l4595 2FCA                         l4587 2FC2  
                       l4579 2FBA                         l4667 34BA                         l4691 271E  
                       l4683 26F2                         l4675 26C4                         l4747 2B84  
                       l4739 2B60                         l4659 33AC                         l4827 25BE  
                       l4819 2592                         l4931 1E36                         l4923 1D50  
                       l4915 1C98                         l4771 3110                         l4763 30E6  
                       l4755 30CE                         l4851 3762                         l5483 337C  
                       l4907 3364                         l5299 31FC                         l4597 2FCC  
                       l4589 2FC4                         l4669 34C6                         l4693 2728  
                       l4685 26FA                         l4677 26D4                         l4749 2B8C  
                       l4861 3664                         l4853 3634                         l4781 27A2  
                       l4829 25CE                         l4941 2150                         l4925 1DD4  
                       l4773 3116                         l4765 30EC                         l4757 30D0  
                       l4845 3748                         l4933 36D6                         l5485 32A4  
                       l4837 3808                         l4599 2FCE                         l4695 2732  
                       l4687 2700                         l4679 26DC                         l4863 3672  
                       l4855 363A                         l4783 27B6                         l4951 2174  
                       l4943 2152                         l5487 1FD0                         l4839 3688  
                       l4927 1E02                         l4775 311C                         l4767 30F2  
                       l4759 30D2                         l4847 3754                         l4935 36F6  
                       l4697 2742                         l4689 270A                         l4857 3648  
                       l4865 37C2                         l4785 2850                         l4793 24D2  
                       l4953 218E                         l4945 2164                         l4937 2144  
                       l4873 3822                         l4929 1E30                         l4777 3122  
                       l4769 30FE                         l4849 375E                         l4881 3264  
                       l4699 274A                         l4859 365E                         l4867 37C8  
                       l4787 285A                         l4947 2166                         l4939 214E  
                       l4875 382A                         l4779 3128                         l4891 3286  
                       l4883 3270                         l4869 2C46                         l4789 2868  
                       l4965 21D0                         l4957 21A6                         l4949 216E  
                       l4877 382C                         l4885 3272                         l4799 24D8  
                       l4975 222A                         l4967 21F4                         l4959 21B4  
                       l4887 3278                         l4895 328C                         l4879 3260  
                       l4993 3624                         l4985 2278                         l4977 2252  
                       l4969 2200                         l4889 3284                         l4979 225E  
                       l4989 3602      __size_of_TMR_Initialize 005C                         STR_1 1047  
                       STR_2 1014                         STR_3 1036                         STR_4 1066  
                       STR_5 1025                         STR_6 1058                         STR_7 1072  
                       STR_8 1072                         STR_9 1001                         u3100 2FAA  
                       u3101 2FA6                         _LATA 000F89                         u3110 2FEC  
                       _LATB 000F8A                         u3111 2FE8                         _LATC 000F8B  
                       u3200 2AF8                         u3120 33D2                         u3201 2AF4  
                       u3121 33CE                         u3130 34AA                         u3210 2B12  
                       u3131 34A6                         u3211 2B0E                         u3140 26D4  
                       u3220 2B2C                         u3300 2526                         u3141 26D0  
                       u3221 2B28                         u3301 2522                         u3150 26F2  
                       u3230 2B4A                         u3310 253C                         u3151 26EE  
                       u3231 2B46                         u3311 2538                         u3160 271E  
                       u3240 2B60                         u3400 21CC                         u3161 271A  
                       u3241 2B5C                         u3401 21C8                         u3090 2F94  
                       u3170 2742                         u3250 2B84                         u3410 21E0  
                       u3091 2F90                         u4107 2E8C                         u3171 273E  
                       u3251 2B80                         u3411 21DA                         u3180 2762  
                       u3260 27B6                         u3340 25AA                         u3324 2552  
                       u3420 21E2                         u3500 2646                         u4117 2EAA  
                       u3181 275E                         u3261 27B2                         u3341 25A6  
                       u3325 254E                         u3501 2642                         u3190 2790  
                       u3350 25BC                         u3334 257A                         u3270 24FC  
                       u3430 21F4                         u3510 267A                         u4127 2EC6  
                       u3191 278C                         u3351 25B8                         u3335 2576  
                       u3271 24F8                         u3431 21F0                         u3511 2676  
                       u3360 25CE                         u3280 2512                         u3440 2218  
                       u3520 26A6                         u4137 2EE4                         u3361 25CA  
                       u3281 250C                         u3441 2214                         u4057 30DA  
                       u3521 26A2                         u3290 2514                         u3450 222A  
                       u3370 1E52                         u3530 26B8                         u4147 2F08  
                       u3451 2226                         u3371 1E4E                         u4067 3106  
                       u3531 26B4                         u3460 2274                         u3380 218E  
                       u3540 2E32                         u4157 2F26                         u3461 2270  
                       u3381 218A                         u4077 215A                         u3541 2E2E  
                       u3470 3614                         u3390 21A6                         u3550 2E5E  
                       u4167 2F42                         u3471 3610                         u3391 21A2  
                       u4087 2168                         u3551 2E5A                         u3800 1FB4  
                       u3720 1E6C                         u3480 2608                         u3560 2E6E  
                       u4177 2F60                         u4097 2528                         u3801 1FB0  
                       u3721 1E68                         u3481 2604                         u3561 2E6A  
                       u3730 1EA0                         u3490 2634                         u3570 2E7C  
                       u3731 1E9C                         u3491 2630                         u3571 2E78  
                       u3740 1EC6                         u3580 36C4                         u3820 293E  
                       u3741 1EC2                         u3581 36BA                         u3821 293A  
                       u3750 1F00                         u3830 295C                         u3751 1EFC  
                       u3831 2958                         u3760 1F24                         u3761 1F20  
                       u3770 1F46                         u3818 28BC                         u3771 1F42  
                       u3819 28D0                         u3780 1F6C                         u3781 1F68  
                       u3790 1F8A                         u3598 36C8                         u3950 3212  
                       u3791 1F86                         u3951 320E                         u3960 3222  
                       u3961 321E                         u3970 3242                         u3971 323E  
                       u3980 3254                         u3981 3250                         _TMR0 000FD6  
           ??_Pump_Operation 01FA                         _Temp 0098                         _Time 00DF  
                       _head 008A                         _main 31FC                         _task 00E5  
                       _test 36B0                         _size 008C                         fsr1h 000FE2  
                       fsr2h 000FDA                         indf2 000FDF                         fsr1l 000FE1  
                       fsr2l 000FD9                         btemp 005F             ?_WritePort_BBSPI 01FD  
         __size_of_LCD_SetUp 0022                         prodh 000FF4                         prodl 000FF3  
          _LCDMoveCursor$413 0204                         start 000E           __size_of_LCDPutStr 0040  
              __CFG_IESO$OFF 000000                ?_global_timer 0001                __CFG_MCLRE$ON 000000  
             ?_LCDMoveCursor 0201                 ___param_bank 000000          AddExecutedTask@data 0007  
                      ??_FSM 0208   __end_of_InitializeElements 1E54       __size_of_TMR_StopTimer 003E  
                 _Heater_Off 383A          _CheckTemp$intlevel0 25DC             _timer_millis_sec 01F0  
            __end_of_Pump_On 3810                        ?_main 0001              __end_of___awdiv 27A2  
            __end_of___awmod 2B96                        ?_test 0001                        _T0CON 000FD5  
            ___awdiv@divisor 01FC                        _T1CON 000FCD                        i2l121 300C  
                      i2l122 300E                        i2l131 37C0                        i2l125 305C  
                      i2l150 3600                        i2l134 3194                        i2l119 2FF8  
                      i2l143 350E                        i2l137 31FA                        i2l162 3720  
                      i2l171 3412                        i2l180 37EA                        i2l500 24A6  
                      i2l174 3452                        i2l177 3352                        i2l610 1642  
                      i2l290 3552                        i2l283 3514                        i2l292 3558  
                      i2l364 2DF2                        i2l293 358A                        i2l365 2DF6  
                      i2l285 351A                        i2l614 1226                        i2l286 354C  
                      i2l617 1562                        i2l634 3492                        i2l637 165C  
                      i2l629 23B6                        i2l638 188A                        i2l657 2D6C  
           _timer_list_count 007E                        i2l924 212E                        i2l928 2142  
                      i2l944 1C82                        i2l947 1BF4                        i2l956 1C96  
            ___awdiv@counter 0200              __end_of_deQueue 188C                        _TMR1H 000FCF  
                      _TMR1L 000FCE                        _TRISA 000F92                        _TRISB 000F93  
                      _TRISC 000F94                __CFG_PWRT$OFF 000000           __size_of_PIN_SetUp 0026  
            __end_of_getByte 25D2                        _Humid 0096     __size_of_AddExecutedTask 008E  
             __CFG_FCMEN$OFF 000000      __size_of_Port_BBSPIInit 001E              __end_of_readDHT 2280  
                      _error 009E                 ?i2_LCDPutStr 0008                  ?_AddElement 0007  
             __CFG_BOREN$OFF 000000                        pclath 000FFA                        tablat 000FF5  
        __size_of_LCDPutChar 007C             __end_ofi2___wmul 3748          __size_of_LCDPutInst 007C  
                      ttemp5 0060                        ttemp6 0063                        ttemp7 0067  
                      status 000FD8                        wtemp8 0060           __size_ofi2_Pump_On 0008  
               _deQueue$2646 003A                 _deQueue$2647 0042                 _deQueue$2648 004A  
               _deQueue$2649 004D                  readDHT@test 0202               ??_global_timer 00CC  
         __size_ofi2___awdiv 00C4           __size_ofi2___awmod 00B0              __initialization 32BC  
    __size_of_TMR_StartTimer 0040                 __end_of_main 3260           __size_of_CheckTemp 00EC  
               __end_of_test 36D6               fp_i2_CheckTemp 0000          _executed_list_index 0088  
                     ??_main 0200         i2SendByteBBSPI@input 0003                       ??_test 01FA  
              __activetblptr 000003       __size_of_readButtonRB0 01DE       __size_of_readButtonRA5 0154  
                  ??_LCDInit 0201           __size_of_Heater_On 0008            __end_of_LCD_SetUp 376A  
        i2LCDMoveCursor@line 0009                 LCDPutChar@ch 0200                ??_SetUp_Humid 000D  
          __end_of_LCDPutStr 33D4             __end_of_Pump_Off 383A             i2_TMR_StartTimer 3510  
                ?_CheckHumid 0001                       _ADCON1 000FC1            ?_IFreq_Initialize 0001  
         __size_of_InitBBSPI 0012            register_timer@res 0046             ___awdiv@dividend 01FA  
               LCDPutInst@ch 0200                _TMR_StopTimer 354E            _temperature_dht11 0090  
        _UpdateElements$2645 0059               _register_timer 2D6E            ??i2_LCDMoveCursor 0009  
                     i2l1120 385C                       i2l1108 2AE2                       i2l1117 384C  
                     i2l1154 3746                       i2l1090 1AB8                       i2l1099 30C8  
                     i2l4021 370E                       i2l4031 30C6                       i2l4023 305E  
                     i2l1385 2A20                       i2l5001 190C                       i2l4017 36FC  
                     i2l4025 3084                       i2l4041 2A84                       i2l4033 2A22  
                     i2l3403 1350                       i2l4051 2288                       i2l3251 2FF4  
                     i2l3331 37BE                       i2l5011 1A5C                       i2l5003 193C  
                     i2l4019 3702                       i2l4027 30A8                       i2l4043 2AAA  
                     i2l4035 2A48                       i2l3333 3722                       i2l3405 13F8  
                     i2l4053 22C6                       i2l4061 2364                       i2l3261 3024  
                     i2l5013 1AAC                       i2l5005 196C                       i2l5101 20E2  
                     i2l4029 30B8                       i2l4045 2ACE                       i2l4037 2A6C  
                     i2l4141 1ABA                       i2l1398 2C44                       i2l3335 373E  
                     i2l3407 1466                       i2l3415 153A                       i2l4063 23A2  
                     i2l4055 22FC                       i2l4071 347C                       i2l3271 3032  
                     i2l3263 302A                       i2l3327 37AA                       i2l3511 315A  
                     i2l5007 19BC                       i2l5111 2124                       i2l5103 20F2  
                     i2l4047 2ADE                       i2l4039 2A7C                       i2l4151 1AFE  
                     i2l4143 1AC8                       i2l3417 1596                       i2l4057 2338  
                     i2l4049 2280                       i2l4073 348E                       i2l4065 3454  
                     i2l3281 303C                       i2l3273 3034                       i2l3265 302C  
                     i2l3257 3006                       i2l3249 2FF0                       i2l3329 37AC  
                     i2l3521 3198                       i2l3513 3164                       i2l3505 3132  
                     i2l5009 1A0C                       i2l5105 20FE                       i2l4161 1B30  
                     i2l4153 1B0E                       i2l4145 1ADA                       i2l3371 1096  
                     i2l4059 233C                       i2l4067 3464                       i2l3291 304A  
                     i2l3283 303E                       i2l3275 3036                       i2l3267 302E  
                     i2l3259 301C                       i2l3531 31D8                       i2l3523 31A8  
                     i2l3515 3172                       i2l3507 3142                       i2l5115 213C  
                     i2l5107 2108                       i2l4171 1BAC                       i2l4163 1B40  
                     i2l4155 1B12                       i2l4147 1ADE                       i2l3381 1212  
                     i2l3373 10A2                       i2l3365 1076                       i2l4069 3476  
                     i2l3293 304C                       i2l3285 3040                       i2l3277 3038  
                     i2l3269 3030                       i2l3533 31E2                       i2l3525 31B2  
                     i2l3517 317C                       i2l3509 314C                       i2l3701 29D4  
                     i2l5109 2118                       i2l5061 2024                       i2l5053 1FF0  
                     i2l4181 1C18                       i2l4173 1BBC                       i2l4165 1B66  
                     i2l4157 1B18                       i2l4149 1AEE                       i2l3391 122E  
                     i2l3383 121A                       i2l3375 10AE                       i2l3367 1090  
                     i2l3287 3042                       i2l3279 303A                       i2l3535 31F0  
                     i2l3527 31C0                       i2l3519 318A                       i2l3703 29EA  
                     i2l3711 2A00                       i2l5071 2054                       i2l5063 2034  
                     i2l5055 1FFE                       i2l4191 1C34                       i2l4183 1C1C  
                     i2l4175 1BCC                       i2l4167 1B76                       i2l4159 1B20  
                     i2l3393 129C                       i2l3385 1220                       i2l3377 10DE  
                     i2l3289 3044                       i2l3529 31CA                       i2l3713 2A10  
                     i2l3705 29F2                       i2l3721 2B9A                       i2l3641 34D2  
                     i2l5073 2064                       i2l5065 2044                       i2l5057 2010  
                     i2l4169 1B86                       i2l4177 1BF8                       i2l3395 12C4  
                     i2l3379 11FE                       i2l3651 35DA                       i2l3715 2A18  
                     i2l3707 29F4                       i2l3731 2BCA                       i2l3723 2BA8  
                     i2l3643 34D6                       i2l5075 206C                       i2l5067 2050  
                     i2l5091 20A6                       i2l5059 2014                       i2l4195 1C90  
                     i2l4179 1C08                       i2l3653 35EA                       i2l3709 29FA  
                     i2l3741 2C10                       i2l3733 2BDC                       i2l3725 2BB0  
                     i2l3581 2DDE                       i2l3645 34EA                       i2l5093 20B6  
                     i2l5077 2072                       i2l5085 2086                       i2l4189 1C24  
                     i2l5261 23FE                       i2l3655 35F6                       i2l3751 2C3C  
                     i2l3743 2C18                       i2l3735 2BE4                       i2l3727 2BB4  
                     i2l3719 2B96                       i2l3583 2DE2                       i2l3663 3520  
                     i2l3647 34EE                       i2l5095 20BA                       i2l5087 2096  
                     i2l5079 207E                       i2l3671 384A                       i2l5263 240E  
                     i2l5271 242E                       i2l3657 35FA                       i2l3649 35CA  
                     i2l3681 2978                       i2l3745 2C1E                       i2l3737 2BEC  
                     i2l3729 2BC2                       i2l3841 355E                       i2l3577 2D6E  
                     i2l5089 209E                       i2l5097 20C2                       i2l3673 3856  
                     i2l5273 2442                       i2l5281 2462                       i2l5265 2420  
                     i2l5257 23E2                       i2l3691 299E                       i2l3683 297C  
                     i2l3675 295E                       i2l3739 2BFA                       i2l3747 2C24  
                     i2l3579 2DCC                       i2l3659 3510                       i2l5099 20D2  
                     i2l5291 2498                       i2l5283 2470                       i2l5275 2452  
                     i2l5267 2424                       i2l5259 23F0                       i2l3693 29B0  
                     i2l3685 298A                       i2l3677 2962                       i2l3749 2C34  
                     i2l3837 354E                       i2l3669 3844                       i2l5293 249C  
                     i2l5285 247E                       i2l5277 245A                       i2l5269 242C  
                     i2l3871 2D24                       i2l3695 29B8                       i2l3687 2992  
                     i2l3679 2970                       i2l3783 3414                       i2l5295 24A0  
                     i2l5287 2490                       i2l5279 245E                       i2l3873 2D40  
                     i2l3865 2CE0                       i2l3697 29C0                       i2l3689 2996  
                     i2l3785 3310                       i2l5297 24A4                       i2l5289 2494  
                     i2l3867 2CEC                       i2l3891 171E                       i2l3883 1664  
                     i2l3699 29CE                       i2l5491 3574                       i2l3787 37D8  
                     i2l3779 33D4                       i2l3869 2CF0                       i2l3893 1832  
                     i2l3885 16B4                       i2l3877 1644                       i2l3789 37DE  
                     i2l3887 16BC                       i2l3889 16E0                       i2l5489 3536  
                     i2l4997 188C                       i2l4999 18BC           ??_IFreq_Initialize 01FA  
                 _SetUp_Temp 33D4                       _OSCCON 000FD3                 LCDPutStr@ptr 0201  
               ?i2_CheckTemp 0001              ??_LCDMoveCursor 0200              _getTempAndHumid 3602  
             __CFG_XINST$OFF 000000            __end_of_PIN_SetUp 36FC                    ??_Pump_On 01FA  
                     ___wmul 3688                    ??___awdiv 01FE                    ??___awmod 01FE  
                  ??_deQueue 0032           __size_of_Task_Init 022E         __size_of_dispatchISR 00DA  
              ?i2_LCDPutChar 0001             _Heater_Operation 3862      i2SendByteBBSPI@bitcount 0002  
                ?_Heater_Off 0001                ?i2_LCDPutInst 0001                       clear_0 32F4  
                     clear_1 3300             ___awdiv@quotient 0202              ___awmod@divisor 01FC  
        __size_of_AddElement 05CE                   _PrintSetUp 37D8                    ??_getByte 01FA  
            ___awmod@counter 01FE               i2___awdiv@sign 0006                    ??_readDHT 0200  
          __end_ofi2_Pump_On 385E                ??_PrintHeater 0200           __size_of_PrintDemo 009A  
         __size_of_PrintIdle 002A                 __pdataCOMRAM 005E            __end_ofi2___awdiv 2A22  
         __size_of_PrintPump 0016       Port_BBSPIInit@port_dir 01FD            __end_ofi2___awmod 2C46  
           LCDMoveCursor@pos 0201                 __mediumconst 0000                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8       __end_of_register_timer 2DF8  
             i2___awmod@sign 0006               ?_TMR_StopTimer 0001            __end_of_CheckTemp 26BE  
             _TMR_Initialize 3260          __end_of_SetUp_Humid 3454            ??_AddExecutedTask 000A  
                 __accesstop 0060      __end_of__initialization 3306                _readButtonRB0 1ABA  
              _readButtonRA5 1FF0                ___rparam_used 000001            __end_of_Heater_On 3856  
     __size_of_SendByteBBSPI 0076               __pcstackCOMRAM 0001                 __pidataBANK0 37EC  
               ?i2_PrintIdle 0001               ??i2_LCDPutChar 0006            __end_of_InitBBSPI 3822  
    __size_of_PrintTempHumid 00E2          __size_of_CheckHumid 0088                 ??_LCDPutChar 01FF  
             ??i2_LCDPutInst 0006                 ??_LCDPutInst 01FF                    ?i2___wmul 0001  
            fp_i2_CheckHumid 0000              __CFG_OSC$INTIO7 000000         __end_of_global_timer 24D2  
             _Port_BBSPIInit 378A       __end_of_TMR_Initialize 32BC              ?_register_timer 0032  
        __end_of_PrintHeater 3688               dispatchISR@pos 0203      __end_of_getTempAndHumid 3634  
                 __pbssBANK0 0060                   __pbssBANK1 0100            __end_of_Task_Init 1ABA  
      i2SendByteBBSPI@output 0001                  ?_SetUp_Temp 0001         __size_ofi2_LCDPutStr 003E  
        __size_of_Heater_Off 000A               ?_readButtonRB0 0001               ?_readButtonRA5 0001  
         __end_of_LCDPutChar 2EFC         _CheckHumid$intlevel0 2E02           __end_of_LCDPutInst 2F78  
  i2WritePort_BBSPI@port_add 0005            __end_of_PrintDemo 2CE0            __end_of_PrintIdle 365E  
          __end_of_PrintPump 37D8               _TMR_StartTimer 3354                      ?___wmul 01FA  
                  ?_Pump_Off 0001             AddElement@period 000F           register_timer@data 0042  
                ?_PrintSetUp 0001                   ??i2___wmul 0005                   deQueue@pos 004F  
     __end_of_Port_BBSPIInit 37A8                      _LCDInit 30CA        __end_of_UpdateTimeOut 3494  
              _SendByteBBSPI 2F78                  _SetUp_Humid 3414              ??_TMR_StopTimer 0003  
         _InitializeElements 1C98              ?_TMR_Initialize 01FA                      _OSCTUNE 000F9B  
             i2LCDPutChar@ch 0007                ?i2_CheckHumid 0001                 ??_AddElement 001C  
        ?_InitializeElements 0001             WritePort_BBSPI@a 01FD        LCDMoveCursor@position 0203  
             i2LCDPutInst@ch 0007     __size_ofi2_SendByteBBSPI 0070       __end_of_TMR_StartTimer 3394  
             i2LCDPutStr@ptr 0008         register_timer@period 003A                      __Hparam 0000  
       __size_ofi2_CheckTemp 00C2                      __Lparam 0000                ?_PrintSetTime 0001  
                    _TimeOut 00DD                      _Pump_On 37FE     __end_ofi2_TMR_StartTimer 354E  
                 ??_Pump_Off 01FA                      ___awdiv 26BE                      ___awmod 2AE4  
            __size_of___wmul 0028     __size_of_WritePort_BBSPI 0020                      _deQueue 1644  
               __psmallconst 1000         ??_InitializeElements 0200                ?i2_Heater_Off 0001  
                    __pcinit 32BC                   _error_flag 00A2                      __ramtop 1000  
                    _getByte 24D2                      __ptext0 31FC                      __ptext1 2884  
                    __ptext2 37FE                      __ptext3 384E                      __ptext4 2DF8  
                    __ptext5 25D2                      __ptext6 36B0                      __ptext7 358C  
                    __ptext8 3354                      __ptext9 3260           __end_of_AddElement 1644  
        __size_of_SetUp_Temp 0040            UpdateElements@pos 005C                    _T0CONbits 000FD5  
               __size_of_FSM 019C              i2_LCDMoveCursor 35C8                    _T1CONbits 000FCD  
                    _readDHT 2144               ?_SendByteBBSPI 0001              ?_Port_BBSPIInit 0001  
                _PrintHeater 365E                      _ready_1 00AD                      _ready_2 00AC  
           ___awmod@dividend 01FA      __size_of_UpdateElements 0138               ??i2_CheckHumid 0001  
               ??_CheckHumid 01FA                    _LCD_SetUp 3748                      fp__test 0000  
                  _LCDPutStr 3394   i2TMR_StartTimer@timer_name 0001               __pintcode_body 23B8  
       end_of_initialization 3306         __end_ofi2_LCDPutChar 3196              ??_readButtonRB0 000D  
            ??_readButtonRA5 0048             ?_getTempAndHumid 0001     __end_of_Heater_Operation 3866  
       __end_ofi2_LCDPutInst 31FC                    _MAX_HUMID 00E6                      int_func 23B8  
        i2___wmul@multiplier 0001                   _send_count 00A5         AddElement@next_index 002C  
        __size_of_PrintSetUp 0014              ?_TMR_StartTimer 01FA            LCDMoveCursor@line 0202  
             ??_PrintSetTime 000D    __size_of_IFreq_Initialize 000E                      postdec1 000FE5  
                    postdec2 000FDD      __size_of_Pump_Operation 0004                      postinc0 000FEE  
                    postinc1 000FE6                      postinc2 000FDE               _PrintTempHumid 27A2  
             ??i2_Heater_Off 0001                    _PIN_SetUp 36D6                 ??_Heater_Off 01FA  
         __end_of_CheckHumid 2E80                   fp__Pump_On 0000            i2_WritePort_BBSPI 37A8  
      __size_of_global_timer 24CA         __size_ofi2_PrintIdle 0026                    _PORTAbits 000F80  
                  _PORTBbits 000F81                   _timer_list 00D6                    _PORTDbits 000F83  
         ?i2_WritePort_BBSPI 0004               getByte@timeOut 01FD              _AddExecutedTask 2CE0  
                  _TRISAbits 000F92                    _TRISBbits 000F93                    _TRISCbits 000F94  
                  _TRISDbits 000F95                    _TRISFbits 000F97                    i2_Pump_On 3856  
        ??i2_WritePort_BBSPI 0005                   ?_LCD_SetUp 0001                    i2___awdiv 295E  
                 ?_LCDPutStr 0201                    i2___awmod 2B96          SendByteBBSPI@output 01FA  
                  _CheckTemp 25D2           __end_of_Heater_Off 3844           i2___awdiv@dividend 0001  
               _global_timer 0008       __end_of_PrintTempHumid 2884                ??_dispatchISR 0200  
      __end_of_LCDMoveCursor 34D2            ??i2_SendByteBBSPI 0001           AddExecutedTask@pos 000D  
  __end_ofi2_WritePort_BBSPI 37C2      __end_ofi2_LCDMoveCursor 3602                    _Heater_On 384E  
                 ?_PIN_SetUp 0001               __end_of___wmul 36B0                __pidataCOMRAM 3866  
               _firstReadRB0 00E2                 _firstReadRA5 00E4              ??_SendByteBBSPI 01FA  
              _secondReadRB0 00E1                _secondReadRA5 00E3                    _InitBBSPI 3810  
           ??_register_timer 0045             i2___wmul@product 0005            ??_WritePort_BBSPI 01FE  
        start_initialization 32BC           i2___awdiv@quotient 0007                  __end_of_FSM 1FF0  
          __size_ofi2___wmul 0026                   ?i2_Pump_On 0001                   ?i2___awdiv 0001  
                 ?i2___awmod 0001      i2LCDMoveCursor@position 000C           i2LCDMoveCursor@pos 0008  
               ??_SetUp_Temp 000D                   ?_CheckTemp 0001                    _Task_Init 188C  
            ?_PrintTempHumid 0206         __end_ofi2_CheckHumid 30CA                     ??___wmul 01FE  
                  _PrintDemo 2C46                    _PrintIdle 3634                   ?_Heater_On 0001  
                  _PrintPump 37C2      __end_of_AddExecutedTask 2D6E                  __pdataBANK0 00D6  
               ??_PrintSetUp 000A            __size_of_Pump_Off 000A          __end_of_dispatchISR 295E  
           ??_TMR_Initialize 01FC                   ?_InitBBSPI 0001           __end_of_SetUp_Temp 3414  
                   ?_LCDInit 0001                 ?_SetUp_Humid 0001        __size_ofi2_LCDPutChar 0066  
             _UpdateElements 2280                 _executedList 0060         __end_of_PrintSetTime 3354  
              __pcstackBANK0 00B2                __pcstackBANK1 01FA                __pcstackBANK2 0200  
      __size_ofi2_LCDPutInst 0066                  ??_LCD_SetUp 0200                ??i2_LCDPutStr 000A  
                ??_LCDPutStr 0200         __end_ofi2_Heater_Off 384E                fp__CheckHumid 0000  
         __end_of_PrintSetUp 37EC                   ?_Task_Init 0001                    _demoHumid 009A  
            AddElement@delay 0007                    _demo_flag 00A6              AddElement@index 0030  
             _Pump_Operation 385E             _IFreq_Initialize 3822                    __pintcode 0008  
                   ?_Pump_On 0001   __size_ofi2_WritePort_BBSPI 001A                   ?_PrintDemo 0001  
                 ?_PrintIdle 0001                     ?___awdiv 01FA                     ?___awmod 01FA  
           ?i2_LCDMoveCursor 0008            ?i2_TMR_StartTimer 0001                   ?_PrintPump 0001  
           ??_Port_BBSPIInit 01FD                     ?_deQueue 0001                  ??_PIN_SetUp 01FA  
                  _idle_flag 005E                 i2_LCDPutChar 3130                 i2_LCDPutInst 3196  
          AddElement@task_id 001A           ??i2_TMR_StartTimer 0003                     ?_getByte 0001  
     __end_of_UpdateElements 23B8                     ?_readDHT 0001                  __smallconst 1000  
                  _isPress_1 00B0                    _isPress_2 00AF                 ?_PrintHeater 0001  
        register_timer@delay 0032                    _lastHumid 0092                  ??i2_Pump_On 0001  
      __end_of_TMR_StopTimer 358C                    _init_flag 00AB                  ??i2___awdiv 0005  
                ??i2___awmod 0005                  _heater_flag 00A4     TMR_StartTimer@timer_name 01FA  
           ??_TMR_StartTimer 01FC            ?_Heater_Operation 0001                  _elementList 0100  
              ??i2_CheckTemp 0001                  ??_CheckTemp 01FA               ___wmul@product 01FE  
                   _LATAbits 000F89                     _LATCbits 000F8B                     _LATDbits 000F8C  
                   _LATFbits 000F8E                    _nextState 00AE          __end_ofi2_LCDPutStr 3510  
         ??_Heater_Operation 01FA                     _MAX_HEAT 00E7                     _PIE1bits 000F9D  
     __end_of_Pump_Operation 3862                     i2u200_40 2A10                     i2u200_41 2A0C  
                   i2u201_40 2BA8                     i2u201_41 2BA4                     i2u210_40 1658  
                   i2u202_40 2BC2                     i2u210_41 1654                     i2u202_41 2BBE  
                   i2u211_40 171E                     i2u203_40 2BDC                     i2u211_41 171A  
                   i2u203_41 2BD8                     i2u204_40 2BFA                     i2u204_41 2BF6  
                   i2u205_40 2C10                     i2u205_41 2C0C                     i2u206_40 2C34  
                   i2u206_41 2C30                     i2u208_40 2D24                     i2u160_40 305C  
                   i2u240_40 2A7C                     i2u208_41 2D20                     i2u160_41 3058  
                   i2u240_41 2A78       __size_of_UpdateTimeOut 0040                     i2u209_40 2D40  
                   i2u241_40 2AAA                     i2u209_41 2D3C                     i2u241_41 2AA6  
                   i2u234_40 3084                     i2u242_40 2ACE                     i2u234_41 3080  
                   i2u242_41 2ACA                     i2u163_40 1090                     i2u235_40 30A8  
                   i2u243_40 2ADE                     i2u163_41 108C                     i2u235_41 30A4  
                   i2u243_41 2ADA                     i2u164_40 10DE                     i2u244_40 22C6  
                   i2u236_40 30B8                     i2u164_41 10DA                     i2u244_41 22C2  
                   i2u236_41 30B4                     i2u420_47 316A                     i2u165_40 1212  
                   i2u245_40 23A2                     i2u237_40 30C6                     i2u165_41 120E  
                   i2u245_41 239E                     i2u237_41 30C2                     i2u421_47 3182  
                   i2u166_40 129C                     i2u246_40 23B6                     i2u158_40 3006  
                   i2u182_40 2DDE                     i2u238_40 2A48                     i2u270_40 1BBC  
                   i2u262_40 1AC8                     i2u166_41 1298                     i2u246_41 23B2  
                   i2u158_41 3002                     i2u182_41 2DDA                     i2u238_41 2A44  
                   i2u270_41 1BB8                     i2u262_41 1AC4                     i2u422_47 319E  
                   i2u167_40 1466                     i2u247_40 3464                     i2u159_40 301C  
                   i2u239_40 2A6C                     i2u271_40 1BCC                     i2u263_40 1ADA  
                   i2u167_41 1462                     i2u247_41 3460                     i2u159_41 3018  
                   i2u239_41 2A68                     i2u271_41 1BC8                     i2u263_41 1AD6  
         i2WritePort_BBSPI@a 0004                     i2u423_47 31B8                     i2u168_40 1596  
                   i2u248_40 3476                     i2u360_40 1FFE                     i2u272_40 1C08  
                   i2u264_40 1AEE                     i2u168_41 1592                     i2u248_41 3472  
                   i2u360_41 1FFA                     i2u272_41 1C04                     i2u264_41 1AEA  
                   i2u424_47 31D0                     i2u249_40 348E                     i2u193_40 350E  
                   i2u361_40 2010                     i2u273_40 1C18                     i2u265_40 1AFE  
                   i2u249_41 348A                     i2u193_41 350A                     i2u361_41 200C  
                   i2u273_41 1C14                     i2u265_41 1AFA                     _PIR1bits 000F9E  
                   i2u425_47 31E8                     i2u194_40 35DA                     i2u370_40 2118  
                   i2u362_40 2024                     i2u274_40 1C34                     i2u266_40 1B30  
                   i2u194_41 35D6                     i2u370_41 2114                     i2u362_41 2020  
                   i2u274_41 1C30                     i2u266_41 1B2C                     i2u418_47 3138  
                   i2u195_40 2970                     i2u371_40 213C                     i2u363_40 2034  
                   i2u275_40 1C90                     i2u267_40 1B40                     i2u195_41 296C  
                   i2u371_41 2138                     i2u363_41 2030                     i2u275_41 1C8C  
                   i2u267_41 1B3C                     i2u419_47 3152                     i2u196_40 298A  
                   i2u364_40 2044                     i2u268_40 1B76                     i2u196_41 2986  
                   i2u364_41 2040                     i2u268_41 1B72                     i2u197_40 29B0  
                   i2u365_40 2064                     i2u269_40 1B86                     i2u197_41 29AC  
                   i2u365_41 2060                     i2u269_41 1B82                     i2u198_40 29CE  
                   i2u366_40 2096                     i2u390_40 2442                     i2u198_41 29CA  
                   i2u366_41 2092                     i2u390_41 243E                     i2u199_40 29EA  
                   i2u367_40 20B6                     i2u391_40 2452                     i2u199_41 29E6  
                   i2u367_41 20B2                     i2u391_41 244E                     i2u368_40 20D2  
                   i2u392_40 2470                     i2u368_41 20CE                     i2u392_41 246C  
                   i2u369_40 20E2                     i2u393_40 247E                     i2u369_41 20DE  
                   i2u393_41 247A                     i2u394_40 2490                     i2u386_40 23F0  
                   i2u394_41 248C                     i2u386_41 23EC                     i2u387_40 23FE  
                   i2u387_41 23FA                     i2u388_40 240E                     i2u388_41 240A  
                   i2u389_40 2420                     i2u389_41 241C                  _dispatchISR 2884  
                ??_Heater_On 01FA             ?_AddExecutedTask 0007          InitializeElements@i 0208  
   TMR_Initialize@timer_name 01FA  __size_of_InitializeElements 01BC                    _pump_flag 00A3  
          ___wmul@multiplier 01FA                  ??_InitBBSPI 01FA           SendByteBBSPI@input 01FC  
                   i2___wmul 3722              ?_UpdateElements 0001          i2_LCDMoveCursor$413 000A  
          _Pump_On$intlevel0 3808             __size_of_LCDInit 0066            i2___awdiv@divisor 0003  
          i2___awdiv@counter 0005                    copy_data0 32D0           i2___awmod@dividend 0001  
            i2_SendByteBBSPI 2FEE        __end_of_readButtonRB0 1C98        __end_of_readButtonRA5 2144  
                ??_Task_Init 0048        __size_ofi2_CheckHumid 006C              ?_Pump_Operation 0001  
                   __Hrparam 0000                _temp_set_flag 00A9     __size_of_getTempAndHumid 0032  
                   __Lrparam 0000          __end_ofi2_CheckTemp 2AE4                ??i2_PrintIdle 000A  
            _WritePort_BBSPI 376A                  ??_PrintDemo 0200                  ??_PrintIdle 0200  
                   _Pump_Off 3830             __size_of_Pump_On 0012                  ??_PrintPump 0200  
               fp_i2_Pump_On 0000             __size_of___awdiv 00E4             __size_of___awmod 00B2  
      i2___wmul@multiplicand 0003             __size_of_deQueue 0248        __size_of_PrintSetTime 0044  
           __size_of_getByte 0100                 fp__CheckTemp 0000                     _capacity 00DB  
                   _checkSum 00A0             __size_of_readDHT 013C                _UpdateTimeOut 3454  
                   _demoTemp 009C            _System_Initialize 358C               AddElement@data 0017  
      __size_ofi2_Heater_Off 000A                     __ptext10 36D6                     __ptext11 3748  
                   __ptext20 24D2                     __ptext12 30CA                     __ptext21 3602  
                   __ptext13 378A                     __ptext30 2AE4                     __ptext22 27A2  
                   __ptext14 3810                     __ptext31 26BE                     __ptext23 385E  
                   __ptext15 1C98                     __ptext40 1ABA                     __ptext32 2E80  
                   __ptext24 3830                     __ptext16 3688                     __ptext41 2A22  
                   __ptext33 3494                     __ptext25 37C2                     __ptext17 3822  
                   __ptext50 34D2                     __ptext42 3856                     __ptext34 2EFC  
                   __ptext26 3634                     __ptext18 1E54                     __ptext51 188C  
                   __ptext43 3844                     __ptext35 376A                     __ptext27 365E  
                   __ptext19 2144                     __ptext60 3196                     __ptext52 3510  
                   __ptext44 305E                     __ptext36 2F78                     __ptext28 3394  
                   __ptext61 37A8                     __ptext53 2D6E                     __ptext45 33D4  
                   __ptext37 3862                     __ptext29 2C46                     __ptext62 2FEE  
                   __ptext54 354E                     __ptext46 3414                     __ptext38 383A  
                   __ptext63 3454                     __ptext55 3310                     __ptext47 37D8  
                   __ptext64 2280                     __ptext56 2B96                     __ptext48 1FF0  
                   __ptext65 1644                     __ptext57 295E                     __ptext49 36FC  
                   __ptext66 1076                     __ptext58 3130                     __ptext67 2CE0  
                   __ptext59 35C8                     __ptext68 3722                     __ptext69 0000  
       __size_of_SetUp_Humid 0040                _time_set_flag 00A7           ?_System_Initialize 0001  
               i2_CheckHumid 305E                  i2_LCDPutStr 34D2                 fp__Heater_On 0000  
                   _lastTemp 0094             ??_PrintTempHumid 0200                __size_of_main 0064  
              __size_of_test 0026          ??_System_Initialize 0200                     _set_flag 00AA  
                   getByte@i 01FC                     getByte@j 01FF      TMR_StopTimer@timer_name 0001  
               _PrintSetTime 3310                     _response 009F                     int$flags 005F  
                 _LCDPutChar 2E80                   _LCDPutInst 2EFC                 i2_Heater_Off 3844  
        __end_ofi2_PrintIdle 3722        __end_of_SendByteBBSPI 2FEE            i2___awmod@divisor 0003  
  __end_of_System_Initialize 35C8            PrintTempHumid@val 0206               ?_UpdateTimeOut 0001  
          i2___awmod@counter 0005                   _INTCONbits 000FF2      __end_ofi2_SendByteBBSPI 305E  
       __size_of_PrintHeater 002A     __end_of_IFreq_Initialize 3830       __size_of_LCDMoveCursor 003E  
                   intlevel2 0000               _humid_set_flag 00A8                AddElement@pos 002E  
             _Task_Init$2650 00C4               _Task_Init$2651 00BC                  i2_CheckTemp 2A22  
    __end_of_WritePort_BBSPI 378A            ??_getTempAndHumid 0200      WritePort_BBSPI@port_add 01FE  
             _humidity_dht11 008E    __size_ofi2_TMR_StartTimer 003E                   _AddElement 1076  
    __size_of_register_timer 008A               readDHT@timeOut 0203                 ?_dispatchISR 0001  
